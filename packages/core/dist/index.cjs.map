{"version":3,"sources":["../src/hooks/use-arrow-navigation.ts","../src/utils/generate-initials.ts","../src/utils/index.ts","../src/ui/dyn-tabs.tsx","../src/ui/dyn-stepper.tsx","../src/ui/dyn-menu.tsx","../src/ui/dyn-listview.tsx","../src/ui/dyn-input.tsx","../src/ui/dyn-button.tsx","../src/ui/dyn-checkbox.tsx","../src/hooks/use-controlled.ts","../src/hooks/use-keyboard.ts","../src/ui/dyn-select.tsx","../src/ui/dyn-textarea.tsx","../src/ui/dyn-radio.tsx","../src/ui/dyn-avatar.tsx","../src/ui/dyn-badge.tsx","../src/ui/dyn-table.tsx","../src/ui/dyn-icon.tsx","../src/ui/dyn-box.tsx","../src/ui/dyn-container.tsx","../src/ui/dyn-grid.tsx","../src/ui/dyn-field-container.tsx","../src/ui/dyn-divider.tsx","../src/hooks/use-focus-trap.ts","../src/hooks/use-dropdown.ts","../src/hooks/use-tooltip.ts","../src/ui/dyn-modal.tsx","../src/ui/dyn-breadcrumb.tsx","../src/ui/dyn-tree.tsx","../src/theme/default-theme.ts","../src/theme/theme-provider.tsx","../src/theme/use-theme.ts","../src/index.ts"],"names":["useRef","useCallback","useEffect","forwardRef","useState","useImperativeHandle","React","jsxs","jsx","Fragment","createContext","useContext"],"mappings":";;;;;;;;;;AA0BO,SAAS,kBAAA,CAAmB;AAAA,EACjC,WAAA,GAAc,YAAA;AAAA,EACd,IAAA,GAAO,IAAA;AAAA,EACP,QAAA,GAAW,kDAAA;AAAA,EACX;AACF,CAAA,GAA+B,EAAC,EAA6B;AAC3D,EAAA,MAAM,YAAA,GAAeA,aAA2B,IAAI,CAAA;AACpD,EAAA,MAAM,eAAA,GAAkBA,aAAO,EAAE,CAAA;AAEjC,EAAA,MAAM,oBAAA,GAAuBC,kBAAY,MAAM;AAC7C,IAAA,IAAI,CAAC,YAAA,CAAa,OAAA,EAAS,OAAO,EAAC;AACnC,IAAA,OAAO,MAAM,IAAA,CAAK,YAAA,CAAa,OAAA,CAAQ,gBAAA,CAAiB,QAAQ,CAAC,CAAA;AAAA,EACnE,CAAA,EAAG,CAAC,QAAQ,CAAC,CAAA;AAEb,EAAA,MAAM,YAAA,GAAeA,iBAAA,CAAY,CAAC,KAAA,KAAkB;AAClD,IAAA,MAAM,WAAW,oBAAA,EAAqB;AACtC,IAAA,IAAI,KAAA,GAAQ,CAAA,IAAK,KAAA,IAAS,QAAA,CAAS,MAAA,EAAQ;AAE3C,IAAA,MAAM,OAAA,GAAU,SAAS,KAAK,CAAA;AAC9B,IAAA,IAAI,OAAA,EAAS;AACX,MAAA,OAAA,CAAQ,KAAA,EAAM;AACd,MAAA,eAAA,CAAgB,OAAA,GAAU,KAAA;AAC1B,MAAA,UAAA,GAAa,OAAO,OAAO,CAAA;AAAA,IAC7B;AAAA,EACF,CAAA,EAAG,CAAC,oBAAA,EAAsB,UAAU,CAAC,CAAA;AAErC,EAAA,MAAM,aAAA,GAAgBA,iBAAA,CAAY,CAAC,KAAA,KAAyB;AAC1D,IAAA,MAAM,WAAW,oBAAA,EAAqB;AACtC,IAAA,IAAI,QAAA,CAAS,WAAW,CAAA,EAAG;AAE3B,IAAA,MAAM,eAAe,eAAA,CAAgB,OAAA;AACrC,IAAA,IAAI,SAAA,GAAY,YAAA;AAEhB,IAAA,MAAM,YAAA,GAAe,WAAA,KAAgB,YAAA,IAAgB,WAAA,KAAgB,MAAA;AACrE,IAAA,MAAM,UAAA,GAAa,WAAA,KAAgB,UAAA,IAAc,WAAA,KAAgB,MAAA;AAEjE,IAAA,QAAQ,MAAM,GAAA;AAAK,MACjB,KAAK,YAAA;AACH,QAAA,IAAI,YAAA,EAAc;AAChB,UAAA,KAAA,CAAM,cAAA,EAAe;AACrB,UAAA,SAAA,GAAY,YAAA,GAAe,CAAA;AAAA,QAC7B;AACA,QAAA;AAAA,MACF,KAAK,WAAA;AACH,QAAA,IAAI,YAAA,EAAc;AAChB,UAAA,KAAA,CAAM,cAAA,EAAe;AACrB,UAAA,SAAA,GAAY,YAAA,GAAe,CAAA;AAAA,QAC7B;AACA,QAAA;AAAA,MACF,KAAK,WAAA;AACH,QAAA,IAAI,UAAA,EAAY;AACd,UAAA,KAAA,CAAM,cAAA,EAAe;AACrB,UAAA,SAAA,GAAY,YAAA,GAAe,CAAA;AAAA,QAC7B;AACA,QAAA;AAAA,MACF,KAAK,SAAA;AACH,QAAA,IAAI,UAAA,EAAY;AACd,UAAA,KAAA,CAAM,cAAA,EAAe;AACrB,UAAA,SAAA,GAAY,YAAA,GAAe,CAAA;AAAA,QAC7B;AACA,QAAA;AAAA,MACF,KAAK,MAAA;AACH,QAAA,KAAA,CAAM,cAAA,EAAe;AACrB,QAAA,SAAA,GAAY,CAAA;AACZ,QAAA;AAAA,MACF,KAAK,KAAA;AACH,QAAA,KAAA,CAAM,cAAA,EAAe;AACrB,QAAA,SAAA,GAAY,SAAS,MAAA,GAAS,CAAA;AAC9B,QAAA;AAAA,MACF;AACE,QAAA;AAAA;AAIJ,IAAA,IAAI,IAAA,EAAM;AACR,MAAA,IAAI,SAAA,IAAa,QAAA,CAAS,MAAA,EAAQ,SAAA,GAAY,CAAA;AAC9C,MAAA,IAAI,SAAA,GAAY,CAAA,EAAG,SAAA,GAAY,QAAA,CAAS,MAAA,GAAS,CAAA;AAAA,IACnD,CAAA,MAAO;AACL,MAAA,SAAA,GAAY,IAAA,CAAK,IAAI,CAAA,EAAG,IAAA,CAAK,IAAI,SAAA,EAAW,QAAA,CAAS,MAAA,GAAS,CAAC,CAAC,CAAA;AAAA,IAClE;AAEA,IAAA,YAAA,CAAa,SAAS,CAAA;AAAA,EACxB,GAAG,CAAC,oBAAA,EAAsB,YAAA,EAAc,WAAA,EAAa,IAAI,CAAC,CAAA;AAE1D,EAAAC,eAAA,CAAU,MAAM;AACd,IAAA,MAAM,YAAY,YAAA,CAAa,OAAA;AAC/B,IAAA,IAAI,CAAC,SAAA,EAAW;AAEhB,IAAA,SAAA,CAAU,gBAAA,CAAiB,WAAW,aAAa,CAAA;AACnD,IAAA,OAAO,MAAM,SAAA,CAAU,mBAAA,CAAoB,SAAA,EAAW,aAAa,CAAA;AAAA,EACrE,CAAA,EAAG,CAAC,aAAa,CAAC,CAAA;AAElB,EAAA,MAAM,kBAAkBD,iBAAA,CAAY,MAAM,eAAA,CAAgB,OAAA,EAAS,EAAE,CAAA;AAErE,EAAA,MAAM,UAAA,GAAaA,kBAAY,MAAM;AACnC,IAAA,YAAA,CAAa,CAAC,CAAA;AAAA,EAChB,CAAA,EAAG,CAAC,YAAY,CAAC,CAAA;AAEjB,EAAA,MAAM,SAAA,GAAYA,kBAAY,MAAM;AAClC,IAAA,MAAM,WAAW,oBAAA,EAAqB;AACtC,IAAA,IAAI,QAAA,CAAS,SAAS,CAAA,EAAG;AACvB,MAAA,YAAA,CAAa,QAAA,CAAS,SAAS,CAAC,CAAA;AAAA,IAClC;AAAA,EACF,CAAA,EAAG,CAAC,YAAA,EAAc,oBAAoB,CAAC,CAAA;AAEvC,EAAA,MAAM,UAAA,GAAaA,iBAAA;AAAA,IACjB,CAAC,KAAA,KAAkB;AACjB,MAAA,YAAA,CAAa,KAAK,CAAA;AAAA,IACpB,CAAA;AAAA,IACA,CAAC,YAAY;AAAA,GACf;AAEA,EAAA,MAAM,eAAA,GAAkBA,iBAAA,CAAY,CAAC,IAAA,KAA6B;AAChE,IAAA,YAAA,CAAa,OAAA,GAAU,IAAA;AAAA,EACzB,CAAA,EAAG,EAAE,CAAA;AAEL,EAAA,OAAO;AAAA,IACL,YAAA;AAAA,IACA,YAAA;AAAA,IACA,oBAAA;AAAA,IACA,eAAA;AAAA,IACA,UAAA;AAAA,IACA,SAAA;AAAA,IACA,UAAA;AAAA,IACA;AAAA,GACF;AACF;;;ACnJO,SAAS,iBAAiB,IAAA,EAAsB;AACrD,EAAA,IAAI,CAAC,IAAA,EAAM,IAAA,EAAK,EAAG,OAAO,IAAA;AAE1B,EAAA,MAAM,KAAA,GAAQ,IAAA,CAAK,IAAA,EAAK,CAAE,MAAM,KAAK,CAAA;AACrC,EAAA,IAAI,KAAA,CAAM,WAAW,CAAA,EAAG;AACtB,IAAA,OAAO,MAAM,CAAC,CAAA,CAAE,MAAA,CAAO,CAAC,EAAE,WAAA,EAAY;AAAA,EACxC;AAEA,EAAA,OAAA,CAAQ,KAAA,CAAM,CAAC,CAAA,CAAE,MAAA,CAAO,CAAC,CAAA,GAAI,KAAA,CAAM,CAAC,CAAA,CAAE,MAAA,CAAO,CAAC,CAAA,EAAG,WAAA,EAAY;AAC/D;;;ACNO,SAAS,cAAc,OAAA,EAAmD;AAC/E,EAAA,OAAO,OAAA,CAAQ,MAAA,CAAO,OAAO,CAAA,CAAE,KAAK,GAAG,CAAA;AACzC;AAEO,SAAS,gBAAA,CACd,EAAE,CAAA,EAAG,CAAA,EAAG,KAAI,EACS;AACrB,EAAA,MAAM,SAA8B,EAAC;AACrC,EAAA,IAAI,CAAA,KAAM,QAAW,MAAA,CAAO,OAAA,GAAU,OAAO,CAAA,KAAM,QAAA,GAAW,CAAA,EAAG,CAAC,CAAA,EAAA,CAAA,GAAO,CAAA;AACzE,EAAA,IAAI,CAAA,KAAM,QAAW,MAAA,CAAO,MAAA,GAAS,OAAO,CAAA,KAAM,QAAA,GAAW,CAAA,EAAG,CAAC,CAAA,EAAA,CAAA,GAAO,CAAA;AACxE,EAAA,IAAI,GAAA,KAAQ,MAAA,EAAY,MAAA,CAAe,GAAA,GAAM,OAAO,GAAA,KAAQ,QAAA,GAAW,CAAA,EAAG,GAAG,CAAA,EAAA,CAAA,GAAO,GAAA;AACpF,EAAA,OAAO,MAAA;AACT;ACRO,IAAM,OAAA,GAAUE,gBAAA;AAAA,EACrB,CACE;AAAA,IACE,KAAA;AAAA,IACA,YAAA;AAAA,IACA,QAAA;AAAA,IACA,WAAA,GAAc,YAAA;AAAA,IACd,UAAA,GAAa,MAAA;AAAA,IACb,QAAA;AAAA,IACA,SAAA;AAAA,IACA,YAAA,EAAc,SAAA;AAAA,IACd,aAAA,EAAe,MAAA;AAAA,IACf,GAAG;AAAA,KAEL,GAAA,KACG;AACH,IAAA,MAAM,CAAC,QAAA,EAAU,WAAW,CAAA,GAAIC,cAAA,CAAiB,gBAAgB,EAAE,CAAA;AACnE,IAAA,MAAM,WAAW,KAAA,IAAS,QAAA;AAE1B,IAAA,MAAM,WAAA,GAAc,CAAC,IAAA,KAAiB;AACpC,MAAA,IAAI,KAAA,KAAU,MAAA,EAAW,WAAA,CAAY,IAAI,CAAA;AACzC,MAAA,QAAA,GAAW,IAAI,CAAA;AAAA,IACjB,CAAA;AAEA,IAAA,MAAM,EAAE,eAAA,EAAiB,UAAA,EAAY,WAAW,UAAA,EAAY,eAAA,KAAoB,kBAAA,CAAmB;AAAA,MACjG,WAAA;AAAA,MACA,QAAA,EAAU,0CAAA;AAAA,MAEV,IAAA,EAAM;AAAA,KACP,CAAA;AAGD,IAAAC,yBAAA,CAAoB,KAAK,OAAO;AAAA,MAC9B,UAAA,EAAY,MAAM,UAAA,EAAW;AAAA,MAC7B,SAAA,EAAW,MAAM,SAAA,EAAU;AAAA,MAC3B,KAAA,EAAO,CAAC,CAAA,KAAc;AACpB,QAAA,MAAM,QAAQ,WAAA,EAAY;AAC1B,QAAA,MAAM,MAAM,KAAA,CAAM,SAAA,CAAU,CAAA,CAAA,KAAK,CAAA,CAAE,UAAU,CAAC,CAAA;AAC9C,QAAA,IAAI,GAAA,IAAO,CAAA,EAAG,UAAA,CAAW,GAAG,CAAA;AAAA,MAC9B,CAAA;AAAA,MACA,YAAY,MAAM;AAChB,QAAA,MAAM,MAAM,eAAA,EAAgB;AAC5B,QAAA,MAAM,QAAQ,WAAA,EAAY;AAC1B,QAAA,OAAO,OAAO,CAAA,GAAI,KAAA,CAAM,GAAG,CAAA,EAAG,SAAS,IAAA,GAAO,IAAA;AAAA,MAChD,CAAA;AAAA,MACA,WAAA,EAAa,MAAM,QAAA,IAAY;AAAA,KACjC,CAAE,CAAA;AAEF,IAAA,MAAM,cAAc,MAAiB;AACnC,MAAA,MAAM,QAAmB,EAAC;AAC1B,MAAAC,sBAAA,CAAM,QAAA,CAAS,OAAA,CAAQ,QAAA,EAAU,CAAC,KAAA,KAAU;AAC1C,QAAA,IAAIA,uBAAM,cAAA,CAA4B,KAAK,CAAA,IAAK,KAAA,CAAM,SAAS,MAAA,EAAQ;AACrE,UAAA,MAAM,EAAE,IAAA,EAAK,GAAI,KAAA,CAAM,KAAA;AACvB,UAAA,IAAI,IAAA,EAAM,KAAA,CAAM,IAAA,CAAK,IAAI,CAAA;AAAA,QAC3B;AAAA,MACF,CAAC,CAAA;AACD,MAAA,OAAO,KAAA;AAAA,IACT,CAAA;AAEA,IAAA,MAAM,iBAAA,GAAoB,CAAC,QAAA,KAAqB,WAAA,CAAY,QAAQ,CAAA;AAEpE,IAAA,uBACEC,eAAA;AAAA,MAAC,KAAA;AAAA,MAAA;AAAA,QACE,GAAG,KAAA;AAAA,QACJ,WAAW,UAAA,CAAW,UAAA,EAAY,CAAA,UAAA,EAAa,WAAW,IAAI,SAAS,CAAA;AAAA,QACvE,aAAA,EAAa,MAAA;AAAA,QACb,YAAA,EAAY,SAAA;AAAA,QAEZ,QAAA,EAAA;AAAA,0BAAAC,cAAA;AAAA,YAAC,KAAA;AAAA,YAAA;AAAA,cACC,GAAA,EAAK,CAAC,IAAA,KAAS;AACb,gBAAA,eAAA,CAAgB,IAAI,CAAA;AAAA,cACtB,CAAA;AAAA,cACA,IAAA,EAAK,SAAA;AAAA,cACL,kBAAA,EAAkB,WAAA;AAAA,cAClB,SAAA,EAAU,gBAAA;AAAA,cAET,QAAA,EAAAF,sBAAA,CAAM,QAAA,CAAS,GAAA,CAAI,QAAA,EAAU,CAAC,KAAA,KAAU;AACvC,gBAAA,IAAIA,uBAAM,cAAA,CAA4B,KAAK,CAAA,IAAK,KAAA,CAAM,SAAS,MAAA,EAAQ;AACrE,kBAAA,MAAM,IAAA,GAAQ,MAAM,KAAA,CAAc,IAAA;AAClC,kBAAA,MAAM,QAAA,GAAW,MAAM,KAAA,KAAU,QAAA;AACjC,kBAAA,OAAOA,sBAAA,CAAM,aAAa,KAAA,EAAO;AAAA,oBAC/B,QAAA;AAAA,oBACA,QAAA,EAAU,iBAAA;AAAA,oBACV;AAAA,mBACuB,CAAA;AAAA,gBAC3B;AACA,gBAAA,OAAO,IAAA;AAAA,cACT,CAAC;AAAA;AAAA,WACH;AAAA,0BACAE,cAAA,CAAC,SAAI,SAAA,EAAU,mBAAA,EACZ,iCAAM,QAAA,CAAS,GAAA,CAAI,QAAA,EAAU,CAAC,KAAA,KAAU;AACvC,YAAA,IAAIF,uBAAM,cAAA,CAAiC,KAAK,CAAA,IAAK,KAAA,CAAM,SAAS,WAAA,EAAa;AAC/E,cAAA,MAAM,IAAA,GAAQ,MAAM,KAAA,CAAc,IAAA;AAClC,cAAA,MAAM,QAAA,GAAW,MAAM,KAAA,KAAU,QAAA;AACjC,cAAA,OAAOA,sBAAA,CAAM,YAAA,CAAa,KAAA,EAAO,EAAE,UAAuC,CAAA;AAAA,YAC5E;AACA,YAAA,OAAO,IAAA;AAAA,UACT,CAAC,CAAA,EACH;AAAA;AAAA;AAAA,KACF;AAAA,EAEJ;AACF;AAEA,OAAA,CAAQ,WAAA,GAAc,SAAA;AAEf,IAAM,MAAA,GAASH,gBAAA;AAAA,EACpB,CAAC,EAAE,IAAA,EAAM,QAAA,EAAU,QAAA,EAAU,UAAA,GAAa,MAAA,EAAQ,QAAA,EAAU,SAAA,EAAW,GAAG,KAAA,EAAM,EAAG,GAAA,qBACjFK,cAAA;AAAA,IAAC,QAAA;AAAA,IAAA;AAAA,MACE,GAAG,KAAA;AAAA,MACJ,GAAA;AAAA,MACA,IAAA,EAAK,KAAA;AAAA,MACL,IAAA,EAAK,QAAA;AAAA,MACL,eAAA,EAAe,QAAA;AAAA,MACf,eAAA,EAAe,QAAA;AAAA,MACf,QAAA,EAAU,WAAW,CAAA,GAAI,EAAA;AAAA,MACzB,SAAA,EAAW,UAAA;AAAA,QACT,SAAA;AAAA,QACA,QAAA,IAAY,iBAAA;AAAA,QACZ,QAAA,IAAY,mBAAA;AAAA,QACZ;AAAA,OACF;AAAA,MACA,SAAS,MAAM,CAAC,QAAA,IAAY,QAAA,GAAW,KAAK,KAAK,CAAA;AAAA,MACjD,SAAA,EAAW,CAAC,CAAA,KAAM;AAChB,QAAA,IAAI,eAAe,QAAA,KAAa,CAAA,CAAE,QAAQ,OAAA,IAAW,CAAA,CAAE,QAAQ,GAAA,CAAA,EAAM;AACnE,UAAA,CAAA,CAAE,cAAA,EAAe;AACjB,UAAA,QAAA,GAAW,KAAK,KAAK,CAAA;AAAA,QACvB,CAAA,MAAA,IAAW,eAAe,MAAA,KAAW,CAAA,CAAE,QAAQ,OAAA,IAAW,CAAA,CAAE,QAAQ,GAAA,CAAA,EAAM;AAExE,UAAA,CAAA,CAAE,cAAA,EAAe;AAAA,QACnB;AAAA,MACF,CAAA;AAAA,MAEC,QAAA,EAAA,IAAA,EAAM,SAAS,KAAA,CAAM;AAAA;AAAA;AAG5B;AAEA,MAAA,CAAO,WAAA,GAAc,QAAA;AAEd,IAAM,WAAA,GAAcL,gBAAA;AAAA,EACzB,CAAC,EAAE,IAAA,EAAM,QAAA,EAAU,WAAW,GAAG,KAAA,IAAS,GAAA,qBACxCK,cAAA;AAAA,IAAC,KAAA;AAAA,IAAA;AAAA,MACE,GAAG,KAAA;AAAA,MACJ,GAAA;AAAA,MACA,IAAA,EAAK,UAAA;AAAA,MACL,QAAQ,CAAC,QAAA;AAAA,MACT,SAAA,EAAW,UAAA,CAAW,eAAA,EAAiB,SAAS,CAAA;AAAA,MAChD,mBAAiB,IAAA,EAAM,KAAA;AAAA,MAEtB,QAAA,EAAA,KAAA,CAAM;AAAA;AAAA;AAGb;AAEA,WAAA,CAAY,WAAA,GAAc,aAAA;;;ACvKnB,IAAM,aAAa,MAAM;AACzB,IAAM,UAAU,MAAM;ACGtB,IAAM,OAAA,GAAUL,gBAAAA;AAAA,EACrB,CAAC;AAAA,IACC,QAAA;AAAA,IACA,WAAA,GAAc,UAAA;AAAA,IACd,QAAA;AAAA,IACA,SAAA;AAAA,IACA,aAAA,EAAe,MAAA;AAAA,IACf,GAAG;AAAA,KACF,GAAA,KAAQ;AACT,IAAA,MAAM,YAAA,GAAe,CAAC,GAAA,KAAgB;AACpC,MAAA,QAAA,GAAW,GAAG,CAAA;AAAA,IAChB,CAAA;AAEA,IAAA,uBACEK,cAAAA;AAAA,MAAC,KAAA;AAAA,MAAA;AAAA,QACE,GAAG,KAAA;AAAA,QACJ,GAAA;AAAA,QACA,IAAA,EAAK,MAAA;AAAA,QACL,WAAW,UAAA,CAAW,UAAA,EAAY,CAAA,UAAA,EAAa,WAAW,IAAI,SAAS,CAAA;AAAA,QACvE,aAAA,EAAa,MAAA;AAAA,QAEZ,UAAAF,sBAAAA,CAAM,QAAA,CAAS,IAAI,QAAA,EAAU,CAAC,OAAO,KAAA,KAAU;AAC9C,UAAA,IAAIA,uBAAM,cAAA,CAAe,KAAK,CAAA,IAAK,KAAA,CAAM,SAAS,WAAA,EAAa;AAC7D,YAAA,OAAOA,sBAAAA,CAAM,aAAa,KAAA,EAA+C;AAAA,cACvE,QAAA,EAAU,YAAA;AAAA,cACV,GAAA,EAAK,MAAM,GAAA,IAAO;AAAA,aACnB,CAAA;AAAA,UACH;AACA,UAAA,OAAO,KAAA;AAAA,QACT,CAAC;AAAA;AAAA,KACH;AAAA,EAEJ;AACF;AAEA,OAAA,CAAQ,WAAA,GAAc,SAAA;AAEf,IAAM,WAAA,GAAcH,gBAAAA;AAAA,EACzB,CAAC;AAAA,IACC,QAAA;AAAA,IACA,QAAA,GAAW,KAAA;AAAA,IACX,MAAA;AAAA,IACA,QAAA;AAAA,IACA,SAAA;AAAA,IACA,aAAA,EAAe,MAAA;AAAA,IACf,GAAG;AAAA,KACF,GAAA,KAAQ;AACT,IAAA,MAAM,cAAc,MAAM;AACxB,MAAA,IAAI,CAAC,YAAY,MAAA,EAAQ;AACvB,QAAA,QAAA,GAAW,MAAM,CAAA;AAAA,MACnB;AAAA,IACF,CAAA;AAEA,IAAA,uBACEK,cAAAA;AAAA,MAAC,QAAA;AAAA,MAAA;AAAA,QACE,GAAG,KAAA;AAAA,QACJ,GAAA;AAAA,QACA,IAAA,EAAK,UAAA;AAAA,QACL,QAAA;AAAA,QACA,SAAA,EAAW,UAAA,CAAW,eAAA,EAAiB,QAAA,IAAY,2BAA2B,SAAS,CAAA;AAAA,QACvF,OAAA,EAAS,WAAA;AAAA,QACT,aAAA,EAAa,MAAA;AAAA,QAEZ;AAAA;AAAA,KACH;AAAA,EAEJ;AACF;AAEA,WAAA,CAAY,WAAA,GAAc,aAAA;ACpEnB,IAAM,WAAA,GAAcL,gBAAAA;AAAA,EACzB,CAAC;AAAA,IACC,QAAQ,EAAC;AAAA,IACT,YAAA;AAAA,IACA,iBAAA;AAAA,IACA,WAAA,GAAc,KAAA;AAAA,IACd,SAAA;AAAA,IACA,aAAA,EAAe,MAAA;AAAA,IACf,GAAG;AAAA,KACF,GAAA,KAAQ;AACT,IAAA,MAAM,CAAC,aAAA,EAAe,gBAAgB,CAAA,GAAIC,cAAAA,CAAmB,EAAE,CAAA;AAE/D,IAAA,MAAM,EAAE,YAAA,EAAa,GAAI,kBAAA,CAAmB;AAAA,MAC1C,WAAA,EAAa,UAAA;AAAA,MACb,QAAA,EAAU;AAAA,KACX,CAAA;AAED,IAAA,MAAM,gBAAA,GAAmB,CAAC,MAAA,KAAmB;AAC3C,MAAA,IAAI,WAAA,EAAa;AACf,QAAA,MAAM,YAAA,GAAe,aAAA,CAAc,QAAA,CAAS,MAAM,IAC9C,aAAA,CAAc,MAAA,CAAO,CAAA,EAAA,KAAM,EAAA,KAAO,MAAM,CAAA,GACxC,CAAC,GAAG,eAAe,MAAM,CAAA;AAC7B,QAAA,gBAAA,CAAiB,YAAY,CAAA;AAC7B,QAAA,iBAAA,GAAoB,YAAY,CAAA;AAAA,MAClC,CAAA,MAAO;AACL,QAAA,iBAAA,GAAoB,CAAC,MAAM,CAAC,CAAA;AAAA,MAC9B;AAAA,IACF,CAAA;AAEA,IAAA,uBACEI,cAAAA;AAAA,MAAC,KAAA;AAAA,MAAA;AAAA,QACE,GAAG,KAAA;AAAA,QACJ,KAAK,GAAA,IAAQ,YAAA;AAAA,QACb,IAAA,EAAK,SAAA;AAAA,QACL,sBAAA,EAAsB,WAAA;AAAA,QACtB,SAAA,EAAW,UAAA,CAAW,eAAA,EAAiB,SAAS,CAAA;AAAA,QAChD,aAAA,EAAa,MAAA;AAAA,QAEZ,QAAA,EAAA,KAAA,CAAM,GAAA,CAAI,CAAC,IAAA,EAAM,KAAA,KAAU;AAC1B,UAAA,MAAM,UAAA,GAAa,cACf,aAAA,CAAc,QAAA,CAAS,KAAK,EAAE,CAAA,GAC9B,iBAAiB,IAAA,CAAK,EAAA;AAE1B,UAAA,uBACEA,cAAAA;AAAA,YAAC,KAAA;AAAA,YAAA;AAAA,cAEC,IAAA,EAAK,QAAA;AAAA,cACL,eAAA,EAAe,UAAA;AAAA,cACf,QAAA,EAAU,CAAA;AAAA,cACV,SAAA,EAAW,UAAA;AAAA,gBACT,eAAA;AAAA,gBACA,UAAA,IAAc,yBAAA;AAAA,gBACd,KAAK,QAAA,IAAY;AAAA,eACnB;AAAA,cACA,SAAS,MAAM,CAAC,KAAK,QAAA,IAAY,gBAAA,CAAiB,KAAK,EAAE,CAAA;AAAA,cAExD,QAAA,EAAA,IAAA,CAAK;AAAA,aAAA;AAAA,YAXD,KAAK,EAAA,IAAM;AAAA,WAYlB;AAAA,QAEJ,CAAC;AAAA;AAAA,KACH;AAAA,EAEJ;AACF;AAEA,WAAA,CAAY,WAAA,GAAc,aAAA;ACnEnB,SAAS,QAAA,CAAS;AAAA,EACvB,IAAI,EAAA,GAAK,OAAA;AAAA,EACT,IAAA,GAAO,MAAA;AAAA,EACP,EAAA;AAAA,EACA,IAAA;AAAA,EACA,KAAA;AAAA,EACA,YAAA;AAAA,EACA,QAAA;AAAA,EACA,QAAA;AAAA,EACA,WAAA;AAAA,EACA,QAAA;AAAA,EACA,IAAA,GAAO,IAAA;AAAA,EACP,OAAA,GAAU,SAAA;AAAA,EACV,SAAA;AAAA,EACA,OAAA;AAAA,EACA,MAAA;AAAA,EACA,MAAA;AAAA,EACA,QAAA;AAAA,EACA,OAAA;AAAA,EACA,MAAA;AAAA,EACA,YAAA,EAAc,SAAA;AAAA,EACd,iBAAA,EAAmB,cAAA;AAAA,EACnB,kBAAA,EAAoB,eAAA;AAAA,EACpB,cAAA,EAAgB,WAAA;AAAA,EAChB,aAAA,EAAe,UAAA;AAAA,EACf,YAAA,EAAc;AAChB,CAAA,EAAkB;AAChB,EAAA,MAAM,GAAA,GAAM,UAAA;AAAA,IACV,WAAA;AAAA,IACA,cAAc,IAAI,CAAA,CAAA;AAAA,IAClB,cAAc,OAAO,CAAA,CAAA;AAAA,IACrB,QAAA,IAAY,qBAAA;AAAA,IACZ,QAAA,IAAY;AAAA,GACd;AAEA,EAAA,uBACED,eAAAA,CAAC,KAAA,EAAA,EAAI,SAAA,EAAW,UAAA,CAAW,mBAAA,EAAqB,SAAA,IAAa,CAAA,WAAA,EAAc,SAAS,CAAA,CAAE,CAAA,EAAG,aAAA,EAAa,UAAA,EACnG,QAAA,EAAA;AAAA,IAAA,SAAA,oBAAaC,cAAAA,CAAC,KAAA,EAAA,EAAI,SAAA,EAAU,yBAAyB,QAAA,EAAA,SAAA,EAAU,CAAA;AAAA,IAC/D,0BAAUA,cAAAA,CAAC,KAAA,EAAA,EAAI,SAAA,EAAU,qBAAqB,QAAA,EAAA,MAAA,EAAO,CAAA;AAAA,oBACtDA,cAAAA;AAAA,MAAC,EAAA;AAAA,MAAA;AAAA,QACC,IAAA;AAAA,QACA,EAAA;AAAA,QACA,IAAA;AAAA,QACA,KAAA;AAAA,QACA,YAAA;AAAA,QACA,QAAA;AAAA,QACA,QAAA;AAAA,QACA,WAAA;AAAA,QACA,QAAA,EAAU,QAAA;AAAA,QACV,SAAA,EAAW,GAAA;AAAA,QACX,UAAU,CAAC,CAAA,KAA2C,QAAA,GAAW,CAAA,CAAE,OAAO,KAAK,CAAA;AAAA,QAC/E,OAAA;AAAA,QACA,MAAA;AAAA,QACA,YAAA,EAAY,SAAA;AAAA,QACZ,iBAAA,EAAiB,cAAA;AAAA,QACjB,kBAAA,EAAkB,eAAA;AAAA,QAClB,cAAA,EAAc;AAAA;AAAA,KAChB;AAAA,IACC,0BAAUA,cAAAA,CAAC,KAAA,EAAA,EAAI,SAAA,EAAU,qBAAqB,QAAA,EAAA,MAAA,EAAO,CAAA;AAAA,IACrD,2BAAWA,cAAAA,CAAC,KAAA,EAAA,EAAI,SAAA,EAAU,uBAAuB,QAAA,EAAA,OAAA,EAAQ;AAAA,GAAA,EAC5D,CAAA;AAEJ;AC9DO,SAAS,SAAA,CAAU;AAAA,EACxB,IAAI,EAAA,GAAK,QAAA;AAAA,EACT,QAAA;AAAA,EACA,OAAA,GAAU,OAAA;AAAA,EACV,IAAA,GAAO,IAAA;AAAA,EACP,KAAA,GAAQ,SAAA;AAAA,EACR,QAAA;AAAA,EACA,OAAA;AAAA,EACA,OAAA;AAAA,EACA,OAAA;AAAA,EACA,MAAA;AAAA,EACA,SAAA;AAAA,EACA,OAAA;AAAA,EACA,YAAA,EAAc,SAAA;AAAA,EACd,iBAAA,EAAmB,cAAA;AAAA,EACnB,kBAAA,EAAoB,eAAA;AAAA,EACpB,aAAA,EAAe,UAAA;AAAA,EACf,YAAA,EAAc;AAChB,CAAA,EAAmB;AACjB,EAAA,MAAM,GAAA,GAAM,UAAA;AAAA,IACV,YAAA;AAAA,IACA,eAAe,OAAO,CAAA,CAAA;AAAA,IACtB,eAAe,IAAI,CAAA,CAAA;AAAA,IACnB,eAAe,KAAK,CAAA,CAAA;AAAA,IACpB,QAAA,IAAY,sBAAA;AAAA,IACZ,OAAA,IAAW,qBAAA;AAAA,IACX,SAAA,IAAa,eAAe,SAAS,CAAA;AAAA,GACvC;AAEA,EAAA,uBACED,eAAAA;AAAA,IAAC,EAAA;AAAA,IAAA;AAAA,MACC,SAAA,EAAW,GAAA;AAAA,MACX,UAAU,QAAA,IAAY,OAAA;AAAA,MACtB,OAAA;AAAA,MACA,OAAA;AAAA,MACA,MAAA;AAAA,MACA,YAAA,EAAY,SAAA;AAAA,MACZ,iBAAA,EAAiB,cAAA;AAAA,MACjB,kBAAA,EAAkB,eAAA;AAAA,MAClB,aAAA,EAAa,UAAA;AAAA,MAEZ,QAAA,EAAA;AAAA,QAAA,SAAA,oBAAaC,cAAAA,CAAC,MAAA,EAAA,EAAK,SAAA,EAAU,0BAA0B,QAAA,EAAA,SAAA,EAAU,CAAA;AAAA,QACjE,QAAA;AAAA,QACA,OAAA,oBAAWA,cAAAA,CAAC,MAAA,EAAA,EAAK,WAAU,oBAAA,EAAqB,aAAA,EAAY,QAAO,QAAA,EAAA,YAAA,EAAU,CAAA;AAAA,QAC7E,2BAAWA,cAAAA,CAAC,MAAA,EAAA,EAAK,SAAA,EAAU,wBAAwB,QAAA,EAAA,OAAA,EAAQ;AAAA;AAAA;AAAA,GAC9D;AAEJ;AC/CO,SAAS,WAAA,CAAY;AAAA,EAC1B,EAAA;AAAA,EACA,OAAA;AAAA,EACA,cAAA;AAAA,EACA,QAAA;AAAA,EACA,QAAA;AAAA,EACA,aAAA;AAAA,EACA,KAAA;AAAA,EACA,IAAA,GAAO,IAAA;AAAA,EACP,QAAA;AAAA,EACA,OAAA;AAAA,EACA,MAAA;AAAA,EACA,YAAA,EAAc,SAAA;AAAA,EACd,iBAAA,EAAmB,cAAA;AAAA,EACnB,kBAAA,EAAoB,eAAA;AAAA,EACpB,aAAA,EAAe;AACjB,CAAA,EAAqB;AACnB,EAAA,MAAM,GAAA,GAAM,UAAA;AAAA,IACV,cAAA;AAAA,IACA,iBAAiB,IAAI,CAAA,CAAA;AAAA,IACrB,QAAA,IAAY,wBAAA;AAAA,IACZ,aAAA,IAAiB;AAAA,GACnB;AAEA,EAAA,uBACED,eAAAA,CAAC,KAAA,EAAA,EAAI,SAAA,EAAU,sBAAA,EAAuB,eAAa,UAAA,EACjD,QAAA,EAAA;AAAA,oBAAAC,cAAAA;AAAA,MAAC,OAAA;AAAA,MAAA;AAAA,QACC,IAAA,EAAK,UAAA;AAAA,QACL,EAAA;AAAA,QACA,OAAA;AAAA,QACA,cAAA;AAAA,QACA,QAAA;AAAA,QACA,QAAA;AAAA,QACA,SAAA,EAAW,GAAA;AAAA,QACX,UAAU,CAAC,CAAA,KAAM,QAAA,GAAW,CAAA,CAAE,OAAO,OAAO,CAAA;AAAA,QAC5C,OAAA;AAAA,QACA,MAAA;AAAA,QACA,YAAA,EAAY,SAAA;AAAA,QACZ,iBAAA,EAAiB,cAAA;AAAA,QACjB,kBAAA,EAAkB;AAAA;AAAA,KACpB;AAAA,IACC,KAAA,oBACCA,cAAAA,CAAC,OAAA,EAAA,EAAM,SAAS,EAAA,EAAI,SAAA,EAAU,uBAC3B,QAAA,EAAA,KAAA,EACH;AAAA,GAAA,EAEJ,CAAA;AAEJ;ACCO,SAAS,cACd,OAAA,EACwB;AACxB,EAAA,MAAM,EAAE,KAAA,EAAO,YAAA,EAAc,QAAA,EAAS,GAAI,OAAA;AAE1C,EAAA,MAAM,CAAC,aAAA,EAAe,gBAAgB,CAAA,GAAIJ,eAAY,YAAiB,CAAA;AACvE,EAAA,MAAM,eAAe,KAAA,KAAU,MAAA;AAE/B,EAAA,MAAM,YAAA,GAAe,eAAe,KAAA,GAAQ,aAAA;AAE5C,EAAA,MAAM,QAAA,GAAWH,iBAAAA;AAAA,IACf,CAAC,QAAA,KAAgB;AAEf,MAAA,IAAI,CAAC,YAAA,EAAc;AACjB,QAAA,gBAAA,CAAiB,QAAQ,CAAA;AAAA,MAC3B;AAGA,MAAA,QAAA,GAAW,QAAQ,CAAA;AAAA,IACrB,CAAA;AAAA,IACA,CAAC,cAAc,QAAQ;AAAA,GACzB;AAEA,EAAA,OAAO;AAAA,IACL,KAAA,EAAO,YAAA;AAAA,IACP,QAAA;AAAA,IACA;AAAA,GACF;AACF;ACxEO,SAAS,WAAA,CACd,GAAA,EACA,QAAA,EACA,EAAE,OAAA,GAAU,IAAA,EAAM,cAAA,GAAiB,KAAA,EAAO,eAAA,GAAkB,KAAA,EAAM,GAAwB,EAAC,EAC3F;AACA,EAAA,MAAM,cAAA,GAAiBA,iBAAAA;AAAA,IACrB,CAAC,KAAA,KAAyB;AACxB,MAAA,MAAM,OAAO,KAAA,CAAM,OAAA,CAAQ,GAAG,CAAA,GAAI,GAAA,GAAM,CAAC,GAAG,CAAA;AAE5C,MAAA,IAAI,CAAC,IAAA,CAAK,QAAA,CAAS,KAAA,CAAM,GAAG,CAAA,EAAG;AAE/B,MAAA,IAAI,cAAA,QAAsB,cAAA,EAAe;AACzC,MAAA,IAAI,eAAA,QAAuB,eAAA,EAAgB;AAE3C,MAAA,QAAA,CAAS,KAAK,CAAA;AAAA,IAChB,CAAA;AAAA,IACA,CAAC,GAAA,EAAK,QAAA,EAAU,cAAA,EAAgB,eAAe;AAAA,GACjD;AAEA,EAAAC,gBAAU,MAAM;AACd,IAAA,IAAI,CAAC,OAAA,EAAS;AAEd,IAAA,QAAA,CAAS,gBAAA,CAAiB,WAAW,cAAc,CAAA;AACnD,IAAA,OAAO,MAAM,QAAA,CAAS,mBAAA,CAAoB,SAAA,EAAW,cAAc,CAAA;AAAA,EACrE,CAAA,EAAG,CAAC,OAAA,EAAS,cAAc,CAAC,CAAA;AAC9B;ACVO,IAAM,SAAA,GAAYC,gBAAAA;AAAA,EACvB,CACE;AAAA,IACE,EAAA;AAAA,IACA,IAAA;AAAA,IACA,KAAA;AAAA,IACA,YAAA;AAAA,IACA,QAAA;AAAA,IACA,QAAA,GAAW,KAAA;AAAA,IACX,QAAA,GAAW,KAAA;AAAA,IACX,WAAA;AAAA,IACA,IAAA,GAAO,IAAA;AAAA,IACP,OAAA,GAAU,SAAA;AAAA,IACV,QAAA,GAAW,KAAA;AAAA,IACX,UAAA,GAAa,KAAA;AAAA,IACb,OAAA;AAAA,IACA,QAAA;AAAA,IACA,IAAA,EAAM,cAAA;AAAA,IACN,YAAA;AAAA,IACA,YAAA,EAAc,SAAA;AAAA,IACd,iBAAA,EAAmB,cAAA;AAAA,IACnB,kBAAA,EAAoB,eAAA;AAAA,IACpB,aAAA,EAAe,UAAA;AAAA,IACf,YAAA,EAAc;AAAA,KAEhB,GAAA,KACG;AACH,IAAA,MAAM,UAAA,GAAaH,aAA0B,IAAI,CAAA;AACjD,IAAA,MAAM,UAAA,GAAaA,aAAyB,IAAI,CAAA;AAGhD,IAAA,MAAM,EAAE,KAAA,EAAO,YAAA,EAAc,QAAA,KAAa,aAAA,CAAc;AAAA,MACtD,KAAA,EAAO,WAAY,KAAA,GAAsB,KAAA;AAAA,MACzC,YAAA,EAAc,WAAY,YAAA,GAA6B,YAAA;AAAA,MACvD;AAAA,KACD,CAAA;AAED,IAAA,MAAM,EAAE,KAAA,EAAO,MAAA,EAAQ,QAAA,EAAU,SAAA,KAAc,aAAA,CAAc;AAAA,MAC3D,KAAA,EAAO,cAAA;AAAA,MACP,YAAA,EAAc,KAAA;AAAA,MACd,QAAA,EAAU;AAAA,KACX,CAAA;AAED,IAAA,MAAM,CAAC,WAAA,EAAa,cAAc,CAAA,GAAII,eAAS,EAAE,CAAA;AACjD,IAAA,MAAM,CAAC,YAAA,EAAc,eAAe,CAAA,GAAIA,eAAS,EAAE,CAAA;AAGnD,IAAA,MAAM,gBAAA,GAAmC,WAAW,EAAC;AAGrD,IAAA,MAAM,eAAA,GAAkB,aACpB,gBAAA,CAAiB,MAAA;AAAA,MAAO,CAAA,GAAA,KACtB,IAAI,KAAA,CAAM,WAAA,GAAc,QAAA,CAAS,WAAA,CAAY,aAAa;AAAA,KAC5D,GACA,gBAAA;AAGJ,IAAAC,yBAAAA,CAAoB,KAAK,OAAO;AAAA,MAC9B,KAAA,EAAO,MAAM,UAAA,CAAW,OAAA,EAAS,KAAA,EAAM;AAAA,MACvC,IAAA,EAAM,MAAM,UAAA,CAAW,OAAA,EAAS,IAAA,EAAK;AAAA,MACrC,IAAA,EAAM,MAAM,SAAA,CAAU,IAAI,CAAA;AAAA,MAC1B,KAAA,EAAO,MAAM,SAAA,CAAU,KAAK,CAAA;AAAA,MAC5B,OAAO,MAAM,QAAA,CAAS,QAAA,GAAW,KAAK,EAAE;AAAA,KAC1C,CAAE,CAAA;AAGF,IAAA,WAAA,CAAY,UAAU,MAAM;AAC1B,MAAA,IAAI,MAAA,EAAQ;AACV,QAAA,SAAA,CAAU,KAAK,CAAA;AACf,QAAA,UAAA,CAAW,SAAS,KAAA,EAAM;AAAA,MAC5B;AAAA,IACF,CAAA,EAAG,EAAE,OAAA,EAAS,MAAA,EAAQ,CAAA;AAEtB,IAAA,WAAA,CAAY,WAAA,EAAa,CAAC,CAAA,KAAM;AAC9B,MAAA,CAAA,CAAE,cAAA,EAAe;AACjB,MAAA,IAAI,CAAC,MAAA,EAAQ;AACX,QAAA,SAAA,CAAU,IAAI,CAAA;AAAA,MAChB,CAAA,MAAO;AACL,QAAA,eAAA;AAAA,UAAgB,UACd,IAAA,GAAO,eAAA,CAAgB,MAAA,GAAS,CAAA,GAAI,OAAO,CAAA,GAAI;AAAA,SACjD;AAAA,MACF;AAAA,IACF,CAAC,CAAA;AAED,IAAA,WAAA,CAAY,SAAA,EAAW,CAAC,CAAA,KAAM;AAC5B,MAAA,CAAA,CAAE,cAAA,EAAe;AACjB,MAAA,IAAI,MAAA,EAAQ;AACV,QAAA,eAAA;AAAA,UAAgB,UACd,IAAA,GAAO,CAAA,GAAI,IAAA,GAAO,CAAA,GAAI,gBAAgB,MAAA,GAAS;AAAA,SACjD;AAAA,MACF;AAAA,IACF,CAAC,CAAA;AAED,IAAA,WAAA,CAAY,OAAA,EAAS,CAAC,CAAA,KAAM;AAC1B,MAAA,IAAI,MAAA,IAAU,gBAAgB,CAAA,EAAG;AAC/B,QAAA,CAAA,CAAE,cAAA,EAAe;AACjB,QAAA,MAAM,MAAA,GAAS,gBAAgB,YAAY,CAAA;AAC3C,QAAA,kBAAA,CAAmB,OAAO,KAAK,CAAA;AAAA,MACjC;AAAA,IACF,CAAC,CAAA;AAED,IAAA,MAAM,kBAAA,GAAqB,CAAC,WAAA,KAAwB;AAClD,MAAA,IAAI,QAAA,EAAU;AACZ,QAAA,MAAM,eAAe,KAAA,CAAM,OAAA,CAAQ,YAAY,CAAA,GAAI,eAAe,EAAC;AACnE,QAAA,MAAM,QAAA,GAAW,YAAA,CAAa,QAAA,CAAS,WAAW,IAC9C,YAAA,CAAa,MAAA,CAAO,CAAA,CAAA,KAAK,CAAA,KAAM,WAAW,CAAA,GAC1C,CAAC,GAAG,cAAc,WAAW,CAAA;AACjC,QAAA,QAAA,CAAS,QAAQ,CAAA;AAAA,MACnB,CAAA,MAAO;AACL,QAAA,QAAA,CAAS,WAAW,CAAA;AACpB,QAAA,SAAA,CAAU,KAAK,CAAA;AAAA,MACjB;AAAA,IACF,CAAA;AAEA,IAAA,MAAM,qBAAqB,MAAM;AAC/B,MAAA,IAAI,CAAC,QAAA,EAAU;AACb,QAAA,SAAA,CAAU,CAAC,MAAM,CAAA;AAAA,MACnB;AAAA,IACF,CAAA;AAGA,IAAA,MAAM,kBAAkB,MAAM;AAC5B,MAAA,IAAI,QAAA,IAAY,KAAA,CAAM,OAAA,CAAQ,YAAY,CAAA,EAAG;AAC3C,QAAA,MAAM,QAAA,GAAW,iBAAiB,MAAA,CAAO,CAAA,GAAA,KAAO,aAAa,QAAA,CAAS,GAAA,CAAI,KAAK,CAAC,CAAA;AAChF,QAAA,OAAO,SAAS,MAAA,GAAS,CAAA,GACrB,GAAG,QAAA,CAAS,MAAM,cAClB,WAAA,IAAe,mBAAA;AAAA,MACrB,CAAA,MAAO;AACL,QAAA,MAAM,WAAW,gBAAA,CAAiB,IAAA,CAAK,CAAA,GAAA,KAAO,GAAA,CAAI,UAAU,YAAY,CAAA;AACxE,QAAA,OAAO,QAAA,EAAU,SAAS,WAAA,IAAe,kBAAA;AAAA,MAC3C;AAAA,IACF,CAAA;AAEA,IAAA,MAAM,cAAA,GAAiB,UAAA;AAAA,MACrB,oBAAA;AAAA,MACA,SAAA,IAAa,uBAAuB,SAAS,CAAA;AAAA,KAC/C;AAEA,IAAA,MAAM,cAAA,GAAiB,UAAA;AAAA,MACrB,oBAAA;AAAA,MACA,uBAAuB,IAAI,CAAA,CAAA;AAAA,MAC3B,uBAAuB,OAAO,CAAA,CAAA;AAAA,MAC9B,QAAA,IAAY,8BAAA;AAAA,MACZ,MAAA,IAAU;AAAA,KACZ;AAEA,IAAA,MAAM,cAAA,GAAiB,UAAA;AAAA,MACrB,oBAAA;AAAA,MACA,MAAA,IAAU;AAAA,KACZ;AAEA,IAAA,uBACEE,eAAAA,CAAC,KAAA,EAAA,EAAI,SAAA,EAAW,cAAA,EAAgB,eAAa,UAAA,EAC3C,QAAA,EAAA;AAAA,sBAAAA,eAAAA;AAAA,QAAC,QAAA;AAAA,QAAA;AAAA,UACC,GAAA,EAAK,UAAA;AAAA,UACL,IAAA,EAAK,QAAA;AAAA,UACL,EAAA;AAAA,UACA,QAAA;AAAA,UACA,QAAA;AAAA,UACA,SAAA,EAAW,cAAA;AAAA,UACX,OAAA,EAAS,kBAAA;AAAA,UACT,YAAA,EAAY,SAAA;AAAA,UACZ,iBAAA,EAAiB,cAAA;AAAA,UACjB,kBAAA,EAAkB,eAAA;AAAA,UAClB,eAAA,EAAe,MAAA;AAAA,UACf,eAAA,EAAc,SAAA;AAAA,UACd,cAAA,EAAc,SAAA,KAAc,OAAA,GAAU,MAAA,GAAS,MAAA;AAAA,UAE9C,QAAA,EAAA;AAAA,YAAA,eAAA,EAAgB;AAAA,4BACjBC,cAAAA,CAAC,MAAA,EAAA,EAAK,WAAU,0BAAA,EAA2B,aAAA,EAAY,QAAO,QAAA,EAAA,QAAA,EAE9D;AAAA;AAAA;AAAA,OACF;AAAA,MAEC,MAAA,oBACCD,eAAAA,CAAC,KAAA,EAAA,EAAI,WAAU,qBAAA,EACZ,QAAA,EAAA;AAAA,QAAA,UAAA,oBACCC,cAAAA;AAAA,UAAC,OAAA;AAAA,UAAA;AAAA,YACC,IAAA,EAAK,MAAA;AAAA,YACL,SAAA,EAAU,mBAAA;AAAA,YACV,WAAA,EAAY,WAAA;AAAA,YACZ,KAAA,EAAO,WAAA;AAAA,YACP,UAAU,CAAC,CAAA,KAAM,cAAA,CAAe,CAAA,CAAE,OAAO,KAAK,CAAA;AAAA,YAC9C,SAAA,EAAS;AAAA;AAAA,SACX;AAAA,wBAGFD,eAAAA;AAAA,UAAC,IAAA;AAAA,UAAA;AAAA,YACC,GAAA,EAAK,UAAA;AAAA,YACL,SAAA,EAAW,cAAA;AAAA,YACX,IAAA,EAAK,SAAA;AAAA,YACL,sBAAA,EAAsB,QAAA;AAAA,YAErB,QAAA,EAAA;AAAA,cAAA,eAAA,CAAgB,GAAA,CAAI,CAAC,MAAA,EAAQ,KAAA,KAAU;AACtC,gBAAA,MAAM,UAAA,GAAa,QAAA,GACf,KAAA,CAAM,OAAA,CAAQ,YAAY,CAAA,IAAK,YAAA,CAAa,QAAA,CAAS,MAAA,CAAO,KAAK,CAAA,GACjE,YAAA,KAAiB,MAAA,CAAO,KAAA;AAC5B,gBAAA,MAAM,YAAY,KAAA,KAAU,YAAA;AAE5B,gBAAA,uBACEA,eAAAA;AAAA,kBAAC,IAAA;AAAA,kBAAA;AAAA,oBAEC,IAAA,EAAK,QAAA;AAAA,oBACL,SAAA,EAAW,UAAA;AAAA,sBACT,mBAAA;AAAA,sBACA,UAAA,IAAc,6BAAA;AAAA,sBACd,SAAA,IAAa,4BAAA;AAAA,sBACb,OAAO,QAAA,IAAY;AAAA,qBACrB;AAAA,oBACA,eAAA,EAAe,UAAA;AAAA,oBACf,iBAAe,MAAA,CAAO,QAAA;AAAA,oBACtB,SAAS,MAAM,CAAC,OAAO,QAAA,IAAY,kBAAA,CAAmB,OAAO,KAAK,CAAA;AAAA,oBAEjE,QAAA,EAAA;AAAA,sBAAA,MAAA,CAAO,KAAA;AAAA,sBACP,MAAA,CAAO,+BACNC,cAAAA,CAAC,UAAK,SAAA,EAAU,gCAAA,EACb,iBAAO,WAAA,EACV;AAAA;AAAA,mBAAA;AAAA,kBAhBG,MAAA,CAAO;AAAA,iBAkBd;AAAA,cAEJ,CAAC,CAAA;AAAA,cAEA,eAAA,CAAgB,WAAW,CAAA,oBAC1BA,eAAC,IAAA,EAAA,EAAG,SAAA,EAAU,8CAA6C,QAAA,EAAA,kBAAA,EAE3D;AAAA;AAAA;AAAA;AAEJ,OAAA,EACF,CAAA;AAAA,sBAIFA,cAAAA;AAAA,QAAC,OAAA;AAAA,QAAA;AAAA,UACC,IAAA,EAAK,QAAA;AAAA,UACL,IAAA;AAAA,UACA,OAAO,QAAA,GAAW,IAAA,CAAK,SAAA,CAAU,YAAY,IAAK,YAAA,IAA2B;AAAA;AAAA;AAC/E,KAAA,EACF,CAAA;AAAA,EAEJ;AACF;AAEA,SAAA,CAAU,WAAA,GAAc,WAAA;AAKjB,SAAS,eAAA,CAAgB;AAAA,EAC9B,KAAA;AAAA,EACA,QAAA,GAAW,KAAA;AAAA,EACX,QAAA;AAAA,EACA;AACF,CAAA,EAAyB;AAGvB,EAAA,OAAO,IAAA;AACT;AAEA,eAAA,CAAgB,WAAA,GAAc,iBAAA;AClRvB,IAAM,WAAA,GAAcL,gBAAAA;AAAA,EACzB,CACE;AAAA,IACE,EAAA;AAAA,IACA,IAAA;AAAA,IACA,KAAA;AAAA,IACA,YAAA;AAAA,IACA,QAAA;AAAA,IACA,QAAA,GAAW,KAAA;AAAA,IACX,QAAA,GAAW,KAAA;AAAA,IACX,QAAA,GAAW,KAAA;AAAA,IACX,WAAA;AAAA,IACA,IAAA,GAAO,CAAA;AAAA,IACP,IAAA;AAAA,IACA,MAAA,GAAS,UAAA;AAAA,IACT,IAAA,GAAO,IAAA;AAAA,IACP,OAAA,GAAU,SAAA;AAAA,IACV,OAAA;AAAA,IACA,MAAA;AAAA,IACA,YAAA,EAAc,SAAA;AAAA,IACd,iBAAA,EAAmB,cAAA;AAAA,IACnB,kBAAA,EAAoB,eAAA;AAAA,IACpB,aAAA,EAAe,UAAA;AAAA,IACf,YAAA,EAAc;AAAA,KAEhB,GAAA,KACG;AACH,IAAA,MAAM,EAAE,KAAA,EAAO,YAAA,EAAc,QAAA,EAAS,GAAI,cAAc,EAAE,KAAA,EAAO,YAAA,EAAc,QAAA,EAAU,CAAA;AAEzF,IAAA,MAAM,eAAA,GAAkB,UAAA;AAAA,MACtB,cAAA;AAAA,MACA,iBAAiB,IAAI,CAAA,CAAA;AAAA,MACrB,iBAAiB,OAAO,CAAA,CAAA;AAAA,MACxB,wBAAwB,MAAM,CAAA,CAAA;AAAA,MAC9B,QAAA,IAAY,wBAAA;AAAA,MACZ,QAAA,IAAY,wBAAA;AAAA,MACZ,QAAA,IAAY;AAAA,KACd;AAEA,IAAA,MAAM,cAAA,GAAiB,UAAA;AAAA,MACrB,sBAAA;AAAA,MACA,SAAA,IAAa,yBAAyB,SAAS,CAAA;AAAA,KACjD;AAEA,IAAA,uBACEK,cAAAA,CAAC,KAAA,EAAA,EAAI,WAAW,cAAA,EAAgB,aAAA,EAAa,YAC3C,QAAA,kBAAAA,cAAAA;AAAA,MAAC,UAAA;AAAA,MAAA;AAAA,QACC,GAAA;AAAA,QACA,EAAA;AAAA,QACA,IAAA;AAAA,QACA,OAAO,YAAA,IAAgB,EAAA;AAAA,QACvB,WAAA;AAAA,QACA,IAAA;AAAA,QACA,IAAA;AAAA,QACA,QAAA;AAAA,QACA,QAAA;AAAA,QACA,QAAA,EAAU,QAAA;AAAA,QACV,SAAA,EAAW,eAAA;AAAA,QACX,UAAU,CAAC,CAAA,KAAM,QAAA,CAAS,CAAA,CAAE,OAAO,KAAK,CAAA;AAAA,QACxC,OAAA;AAAA,QACA,MAAA;AAAA,QACA,YAAA,EAAY,SAAA;AAAA,QACZ,iBAAA,EAAiB,cAAA;AAAA,QACjB,kBAAA,EAAkB,eAAA;AAAA,QAClB,cAAA,EAAc,SAAA,KAAc,OAAA,GAAU,MAAA,GAAS;AAAA;AAAA,KACjD,EACF,CAAA;AAAA,EAEJ;AACF;AAEA,WAAA,CAAY,WAAA,GAAc,aAAA;AC1EnB,IAAM,QAAA,GAAWL,gBAAAA;AAAA,EACtB,CAAC;AAAA,IACC,KAAA;AAAA,IACA,IAAA;AAAA,IACA,OAAA;AAAA,IACA,cAAA;AAAA,IACA,QAAA,GAAW,KAAA;AAAA,IACX,QAAA;AAAA,IACA,SAAA;AAAA,IACA,QAAA;AAAA,IACA,YAAA,EAAc,SAAA;AAAA,IACd,iBAAA,EAAmB,cAAA;AAAA,IACnB,kBAAA,EAAoB,eAAA;AAAA,IACpB,aAAA,EAAe,MAAA;AAAA,IACf,IAAA;AAAA,IACA,GAAG;AAAA,KACF,GAAA,KAAQ;AACT,IAAA,MAAM,YAAA,GAAe,CAAC,KAAA,KAA+C;AACnE,MAAA,IAAI,QAAA,EAAU;AACd,MAAA,QAAA,GAAW,KAAA,CAAM,MAAA,CAAO,KAAA,EAAO,KAAK,CAAA;AAAA,IACtC,CAAA;AAGA,IAAA,MAAM,EAAE,IAAA,EAAM,CAAA,EAAG,GAAG,YAAW,GAAI,KAAA;AAEnC,IAAA,uBACEI,eAAAA;AAAA,MAAC,OAAA;AAAA,MAAA;AAAA,QACC,SAAA,EAAW,UAAA;AAAA,UACT,WAAA;AAAA,UACA,IAAA,IAAQ,cAAc,IAAI,CAAA,CAAA;AAAA,UAC1B,QAAA,IAAY,qBAAA;AAAA,UACZ;AAAA,SACF;AAAA,QAEA,QAAA,EAAA;AAAA,0BAAAC,cAAAA;AAAA,YAAC,OAAA;AAAA,YAAA;AAAA,cACE,GAAG,UAAA;AAAA,cACJ,GAAA;AAAA,cACA,IAAA,EAAK,OAAA;AAAA,cACL,KAAA;AAAA,cACA,IAAA;AAAA,cACA,OAAA;AAAA,cACA,cAAA;AAAA,cACA,QAAA;AAAA,cACA,QAAA,EAAU,YAAA;AAAA,cACV,YAAA,EAAY,SAAA;AAAA,cACZ,iBAAA,EAAiB,cAAA;AAAA,cACjB,kBAAA,EAAkB,eAAA;AAAA,cAClB,aAAA,EAAa,MAAA;AAAA,cACb,SAAA,EAAU;AAAA;AAAA,WACZ;AAAA,0BACAA,cAAAA,CAAC,MAAA,EAAA,EAAK,SAAA,EAAU,sBAAA,EAAuB,CAAA;AAAA,UACtC,4BACCA,cAAAA,CAAC,MAAA,EAAA,EAAK,SAAA,EAAU,oBACb,QAAA,EACH;AAAA;AAAA;AAAA,KAEJ;AAAA,EAEJ;AACF;AAEA,QAAA,CAAS,WAAA,GAAc,UAAA;AAEhB,IAAM,aAAA,GAAgBL,gBAAAA;AAAA,EAC3B,CAAC;AAAA,IACC,KAAA;AAAA,IACA,YAAA;AAAA,IACA,IAAA;AAAA,IACA,QAAA,GAAW,KAAA;AAAA,IACX,WAAA,GAAc,UAAA;AAAA,IACd,QAAA;AAAA,IACA,SAAA;AAAA,IACA,QAAA;AAAA,IACA,YAAA,EAAc,SAAA;AAAA,IACd,iBAAA,EAAmB,cAAA;AAAA,IACnB,kBAAA,EAAoB,eAAA;AAAA,IACpB,aAAA,EAAe,MAAA;AAAA,IACf,GAAG;AAAA,KACF,GAAA,KAAQ;AACT,IAAA,MAAM,EAAE,YAAA,EAAa,GAAI,kBAAA,CAAmB;AAAA,MAC1C,WAAA;AAAA,MACA,QAAA,EAAU;AAAA,KACX,CAAA;AAED,IAAA,MAAM,YAAA,GAAe,CAAC,aAAA,EAAuB,KAAA,KAA+C;AAC1F,MAAA,IAAI,QAAA,EAAU;AACd,MAAA,QAAA,GAAW,eAAe,KAAK,CAAA;AAAA,IACjC,CAAA;AAEA,IAAA,uBACEK,cAAAA;AAAA,MAAC,KAAA;AAAA,MAAA;AAAA,QACE,GAAG,KAAA;AAAA,QACJ,KAAK,GAAA,IAAQ,YAAA;AAAA,QACb,IAAA,EAAK,YAAA;AAAA,QACL,YAAA,EAAY,SAAA;AAAA,QACZ,iBAAA,EAAiB,cAAA;AAAA,QACjB,kBAAA,EAAkB,eAAA;AAAA,QAClB,aAAA,EAAa,MAAA;AAAA,QACb,SAAA,EAAW,UAAA;AAAA,UACT,iBAAA;AAAA,UACA,oBAAoB,WAAW,CAAA,CAAA;AAAA,UAC/B,QAAA,IAAY,2BAAA;AAAA,UACZ;AAAA,SACF;AAAA,QAEC,UAAAF,sBAAAA,CAAM,QAAA,CAAS,IAAI,QAAA,EAAU,CAAC,OAAO,KAAA,KAAU;AAC9C,UAAA,IAAIA,uBAAM,cAAA,CAA8B,KAAK,CAAA,IAAK,KAAA,CAAM,SAAS,QAAA,EAAU;AACzE,YAAA,MAAM,UAAA,GAAqC;AAAA,cACzC,GAAG,KAAA,CAAM,KAAA;AAAA,cACT,IAAA,EAAM,IAAA,IAAQ,CAAA,YAAA,EAAe,IAAA,CAAK,MAAA,EAAO,CAAE,QAAA,CAAS,EAAE,CAAA,CAAE,MAAA,CAAO,CAAA,EAAG,CAAC,CAAC,CAAA,CAAA;AAAA,cACpE,SAAS,KAAA,KAAU,MAAA,GAAY,KAAA,CAAM,KAAA,CAAM,UAAU,KAAA,GAAQ,MAAA;AAAA,cAC7D,gBAAgB,YAAA,KAAiB,MAAA,GAAY,KAAA,CAAM,KAAA,CAAM,UAAU,YAAA,GAAe,MAAA;AAAA,cAClF,QAAA,EAAU,QAAA,IAAY,KAAA,CAAM,KAAA,CAAM,QAAA,IAAY,MAAA;AAAA,cAC9C,QAAA,EAAU,YAAA;AAAA,cACV,GAAA,EAAK,KAAA,CAAM,KAAA,CAAM,KAAA,IAAS;AAAA,aAC5B;AACA,YAAA,OAAOA,sBAAAA,CAAM,YAAA,CAAa,KAAA,EAAO,UAAU,CAAA;AAAA,UAC7C;AACA,UAAA,OAAO,KAAA;AAAA,QACT,CAAC;AAAA;AAAA,KACH;AAAA,EAEJ;AACF;AAEA,aAAA,CAAc,WAAA,GAAc,eAAA;AC/HrB,SAAS,SAAA,CAAU;AAAA,EACxB,QAAA;AAAA,EACA,OAAA,GAAU,OAAA;AAAA,EACV,IAAA,GAAO,IAAA;AAAA,EACP,KAAA,GAAQ,SAAA;AAAA,EACR,GAAA;AAAA,EACA,GAAA;AAAA,EACA,YAAA,EAAc,SAAA;AAAA,EACd,aAAA,EAAe;AACjB,CAAA,EAAmB;AACjB,EAAA,MAAM,GAAA,GAAM,UAAA;AAAA,IACV,YAAA;AAAA,IACA,eAAe,OAAO,CAAA,CAAA;AAAA,IACtB,eAAe,IAAI,CAAA,CAAA;AAAA,IACnB,eAAe,KAAK,CAAA;AAAA,GACtB;AAEA,EAAA,MAAM,UAAU,GAAA,mBACdE,eAAC,KAAA,EAAA,EAAI,GAAA,EAAU,KAAK,GAAA,IAAO,EAAA,EAAI,WAAU,mBAAA,EAAoB,CAAA,GAC3D,WACF,OAAO,QAAA,KAAa,WAAW,gBAAA,CAAiB,QAAQ,IAAI,QAAA,GAC1D,IAAA;AAEJ,EAAA,uBACEA,cAAAA;AAAA,IAAC,KAAA;AAAA,IAAA;AAAA,MACC,SAAA,EAAW,GAAA;AAAA,MACX,IAAA,EAAK,KAAA;AAAA,MACL,cAAY,SAAA,IAAa,GAAA;AAAA,MACzB,aAAA,EAAa,UAAA;AAAA,MAEZ,QAAA,EAAA;AAAA;AAAA,GACH;AAEJ;ACjCO,SAAS,QAAA,CAAS;AAAA,EACvB,QAAA;AAAA,EACA,OAAA,GAAU,OAAA;AAAA,EACV,IAAA,GAAO,IAAA;AAAA,EACP,KAAA,GAAQ,SAAA;AAAA,EACR,YAAA,EAAc,SAAA;AAAA,EACd,aAAA,EAAe;AACjB,CAAA,EAAkB;AAChB,EAAA,MAAM,GAAA,GAAM,UAAA;AAAA,IACV,WAAA;AAAA,IACA,cAAc,OAAO,CAAA,CAAA;AAAA,IACrB,cAAc,IAAI,CAAA,CAAA;AAAA,IAClB,cAAc,KAAK,CAAA;AAAA,GACrB;AAEA,EAAA,uBACEA,cAAAA;AAAA,IAAC,MAAA;AAAA,IAAA;AAAA,MACC,SAAA,EAAW,GAAA;AAAA,MACX,YAAA,EAAY,SAAA;AAAA,MACZ,aAAA,EAAa,UAAA;AAAA,MAEZ;AAAA;AAAA,GACH;AAEJ;ACtBO,IAAM,QAAA,GAAWL,gBAAAA;AAAA,EACtB,CAAC;AAAA,IACC,OAAA;AAAA,IACA,IAAA;AAAA,IACA,QAAA,GAAW,KAAA;AAAA,IACX,MAAA;AAAA,IACA,SAAA;AAAA,IACA,aAAA,EAAe,MAAA;AAAA,IACf,GAAG;AAAA,KACF,GAAA,KAAQ;AACT,IAAA,MAAM,CAAC,SAAA,EAAW,YAAY,CAAA,GAAIC,eAA8B,IAAI,CAAA;AAEpE,IAAA,MAAM,UAAA,GAAa,CAAC,SAAA,KAAsB;AACxC,MAAA,IAAI,CAAC,QAAA,IAAY,CAAC,MAAA,EAAQ;AAE1B,MAAA,MAAM,eACJ,SAAA,EAAW,MAAA,KAAW,aAAa,SAAA,CAAU,SAAA,KAAc,QACvD,MAAA,GACA,KAAA;AAEN,MAAA,MAAM,YAAA,GAAe,EAAE,MAAA,EAAQ,SAAA,EAAW,WAAW,YAAA,EAAa;AAClE,MAAA,YAAA,CAAa,YAAY,CAAA;AACzB,MAAA,MAAA,CAAO,WAAW,YAAY,CAAA;AAAA,IAChC,CAAA;AAEA,IAAA,MAAM,WAAA,GAAc,CAAC,SAAA,KAA2D;AAC9E,MAAA,IAAI,SAAA,EAAW,MAAA,KAAW,SAAA,EAAW,OAAO,MAAA;AAC5C,MAAA,OAAO,SAAA,CAAU,SAAA,KAAc,KAAA,GAAQ,WAAA,GAAc,YAAA;AAAA,IACvD,CAAA;AAEA,IAAA,MAAM,EAAE,YAAA,EAAa,GAAI,kBAAA,CAAmB;AAAA,MAC1C,WAAA,EAAa,UAAA;AAAA,MACb,QAAA,EAAU;AAAA,KACX,CAAA;AAED,IAAA,uBACEI,cAAAA,CAAC,KAAA,EAAA,EAAI,GAAA,EAAK,YAAA,EAAiD,WAAW,UAAA,CAAW,qBAAA,EAAuB,SAAS,CAAA,EAC/G,QAAA,kBAAAD,eAAAA;AAAA,MAAC,OAAA;AAAA,MAAA;AAAA,QACE,GAAG,KAAA;AAAA,QACJ,GAAA;AAAA,QACA,SAAA,EAAU,WAAA;AAAA,QACV,aAAA,EAAa,MAAA;AAAA,QACb,IAAA,EAAK,OAAA;AAAA,QAEL,QAAA,EAAA;AAAA,0BAAAC,cAAAA,CAAC,OAAA,EAAA,EACC,QAAA,kBAAAA,cAAAA,CAAC,IAAA,EAAA,EAAG,IAAA,EAAK,KAAA,EACN,QAAA,EAAA,OAAA,CAAQ,GAAA,CAAI,CAAC,MAAA,qBACZD,eAAAA;AAAA,YAAC,IAAA;AAAA,YAAA;AAAA,cAEC,IAAA,EAAK,cAAA;AAAA,cACL,WAAA,EAAW,WAAA,CAAY,MAAA,CAAO,GAAG,CAAA;AAAA,cACjC,SAAA,EAAW,UAAA;AAAA,gBACT,mBAAA;AAAA,gBACA,QAAA,IAAY,OAAO,QAAA,IAAY;AAAA,eACjC;AAAA,cACA,OAAA,EAAS,YAAY,MAAA,CAAO,QAAA,GAAW,MAAM,UAAA,CAAW,MAAA,CAAO,GAAG,CAAA,GAAI,MAAA;AAAA,cACtE,QAAA,EAAU,QAAA,IAAY,MAAA,CAAO,QAAA,GAAW,CAAA,GAAI,EAAA;AAAA,cAC5C,SAAA,EAAW,CAAC,CAAA,KAAM;AAChB,gBAAA,IAAA,CAAK,CAAA,CAAE,QAAQ,OAAA,IAAW,CAAA,CAAE,QAAQ,GAAA,KAAQ,QAAA,IAAY,OAAO,QAAA,EAAU;AACvE,kBAAA,CAAA,CAAE,cAAA,EAAe;AACjB,kBAAA,UAAA,CAAW,OAAO,GAAG,CAAA;AAAA,gBACvB;AAAA,cACF,CAAA;AAAA,cAEC,QAAA,EAAA;AAAA,gBAAA,MAAA,CAAO,KAAA;AAAA,gBACP,YAAY,MAAA,CAAO,QAAA,IAAY,SAAA,EAAW,MAAA,KAAW,OAAO,GAAA,oBAC3DC,cAAAA,CAAC,MAAA,EAAA,EAAK,WAAU,2BAAA,EACb,QAAA,EAAA,SAAA,CAAU,SAAA,KAAc,KAAA,GAAQ,WAAM,QAAA,EACzC;AAAA;AAAA,aAAA;AAAA,YApBG,MAAA,CAAO;AAAA,WAuBf,GACH,CAAA,EACF,CAAA;AAAA,0BACAA,eAAC,OAAA,EAAA,EACE,QAAA,EAAA,IAAA,CAAK,IAAI,CAAC,GAAA,EAAK,6BACdA,cAAAA;AAAA,YAAC,IAAA;AAAA,YAAA;AAAA,cAEC,IAAA,EAAK,KAAA;AAAA,cACL,QAAA,EAAU,CAAA;AAAA,cACV,SAAA,EAAU,gBAAA;AAAA,cAET,QAAA,EAAA,OAAA,CAAQ,GAAA,CAAI,CAAC,MAAA,qBACZA,cAAAA;AAAA,gBAAC,IAAA;AAAA,gBAAA;AAAA,kBAEC,IAAA,EAAK,MAAA;AAAA,kBACL,SAAA,EAAU,iBAAA;AAAA,kBAET,QAAA,EAAA,GAAA,CAAI,OAAO,GAAG;AAAA,iBAAA;AAAA,gBAJV,MAAA,CAAO;AAAA,eAMf;AAAA,aAAA;AAAA,YAbI;AAAA,WAeR,CAAA,EACH;AAAA;AAAA;AAAA,KACF,EACF,CAAA;AAAA,EAEJ;AACF;AAEA,QAAA,CAAS,WAAA,GAAc,UAAA;;;ACxGhB,IAAM,UAAoB,MAAM;ACEhC,SAAS,MAAA,CAAO;AAAA,EACrB,IAAI,EAAA,GAAK,KAAA;AAAA,EACT,QAAA;AAAA,EACA,CAAA;AAAA,EACA,CAAA;AAAA,EACA,GAAA;AAAA,EACA,SAAA;AAAA,EACA,aAAA,EAAe,UAAA;AAAA,EACf,GAAG;AACL,CAAA,EAAgB;AACd,EAAA,MAAM,GAAA,GAAM,UAAA,CAAW,SAAA,EAAW,SAAS,CAAA;AAC3C,EAAA,MAAM,SAAS,gBAAA,CAAiB,EAAE,CAAA,EAAG,CAAA,EAAG,KAAK,CAAA;AAE7C,EAAA,uBACEA,cAAAA;AAAA,IAAC,EAAA;AAAA,IAAA;AAAA,MACC,SAAA,EAAW,GAAA;AAAA,MACX,KAAA,EAAO,MAAA;AAAA,MACP,aAAA,EAAa,UAAA;AAAA,MACZ,GAAG,KAAA;AAAA,MAEH;AAAA;AAAA,GACH;AAEJ;ACvBO,SAAS,YAAA,CAAa;AAAA,EAC3B,IAAI,EAAA,GAAK,KAAA;AAAA,EACT,QAAA;AAAA,EACA,QAAA,GAAW,IAAA;AAAA,EACX,QAAA,GAAW,IAAA;AAAA,EACX,KAAA,GAAQ,KAAA;AAAA,EACR,SAAA;AAAA,EACA,aAAA,EAAe,UAAA;AAAA,EACf,GAAG;AACL,CAAA,EAAsB;AACpB,EAAA,MAAM,GAAA,GAAM,UAAA;AAAA,IACV,eAAA;AAAA,IACA,CAAC,KAAA,IAAS,CAAA,mBAAA,EAAsB,QAAQ,CAAA,CAAA;AAAA,IACxC,QAAA,IAAY,yBAAA;AAAA,IACZ,KAAA,IAAS,sBAAA;AAAA,IACT;AAAA,GACF;AAEA,EAAA,uBACEA,cAAAA;AAAA,IAAC,EAAA;AAAA,IAAA;AAAA,MACC,SAAA,EAAW,GAAA;AAAA,MACX,aAAA,EAAa,UAAA;AAAA,MACZ,GAAG,KAAA;AAAA,MAEH;AAAA;AAAA,GACH;AAEJ;AC1BO,IAAM,OAAA,GAAUL,gBAAAA;AAAA,EACrB,CAAC;AAAA,IACC,OAAA;AAAA,IACA,IAAA;AAAA,IACA,GAAA;AAAA,IACA,QAAA;AAAA,IACA,SAAA;AAAA,IACA,KAAA;AAAA,IACA,aAAA,EAAe,MAAA;AAAA,IACf,GAAG;AAAA,KACF,GAAA,KAAQ;AAET,IAAA,MAAM,cAAyC,EAAC;AAChD,IAAA,IAAI,GAAA,KAAQ,MAAA,EAAW,WAAA,CAAY,GAAA,GAAM,GAAA;AAEzC,IAAA,MAAM,aAAA,GAAgB,iBAAiB,WAAW,CAAA;AAElD,IAAA,MAAM,aAAA,GAAgB;AAAA,MACpB,GAAG,aAAA;AAAA,MACH,mBAAA,EAAqB,UAClB,OAAO,OAAA,KAAY,WAAW,CAAA,OAAA,EAAU,OAAO,WAAW,OAAA,GAAW,MAAA;AAAA,MACxE,gBAAA,EAAkB,IAAA,IAAQ,MAAA,CAAO,IAAI,CAAA,GAAI,CAAA,GACtC,OAAO,IAAA,KAAS,QAAA,GAAW,CAAA,OAAA,EAAU,IAAI,CAAA,MAAA,CAAA,GAAW,IAAA,GAAQ,MAAA;AAAA,MAC/D,GAAG;AAAA,KACL;AAEA,IAAA,uBACEK,cAAAA;AAAA,MAAC,KAAA;AAAA,MAAA;AAAA,QACE,GAAG,KAAA;AAAA,QACJ,GAAA;AAAA,QACA,SAAA,EAAW,UAAA;AAAA,UACT,UAAA;AAAA,UACA,WAAW,MAAA,CAAO,OAAO,CAAA,GAAI,CAAA,IAAK,qBAAqB,OAAO,CAAA,CAAA;AAAA,UAC9D,QAAQ,MAAA,CAAO,IAAI,CAAA,GAAI,CAAA,IAAK,kBAAkB,IAAI,CAAA,CAAA;AAAA,UAClD;AAAA,SACF;AAAA,QACA,KAAA,EAAO,aAAA;AAAA,QACP,aAAA,EAAa,MAAA;AAAA,QAEZ;AAAA;AAAA,KACH;AAAA,EAEJ;AACF;AAEA,OAAA,CAAQ,WAAA,GAAc,SAAA;AAEf,IAAM,WAAA,GAAcL,gBAAAA;AAAA,EACzB,CAAC;AAAA,IACC,OAAA;AAAA,IACA,OAAA;AAAA,IACA,QAAA;AAAA,IACA,SAAA;AAAA,IACA,aAAA,EAAe,MAAA;AAAA,IACf,GAAG;AAAA,KACF,GAAA,KAAQ;AACT,IAAA,uBACEK,cAAAA;AAAA,MAAC,KAAA;AAAA,MAAA;AAAA,QACE,GAAG,KAAA;AAAA,QACJ,GAAA;AAAA,QACA,SAAA,EAAW,UAAA;AAAA,UACT,eAAA;AAAA,UACA,WAAW,MAAA,CAAO,OAAO,CAAA,GAAI,CAAA,IAAK,2BAA2B,OAAO,CAAA,CAAA;AAAA,UACpE,WAAW,MAAA,CAAO,OAAO,CAAA,GAAI,CAAA,IAAK,2BAA2B,OAAO,CAAA,CAAA;AAAA,UACpE;AAAA,SACF;AAAA,QACA,KAAA,EAAO;AAAA,UACL,UAAA,EAAY,WAAW,MAAA,CAAO,OAAO,IAAI,CAAA,GAAI,CAAA,KAAA,EAAQ,OAAO,CAAA,CAAA,GAAK,MAAA;AAAA,UACjE,OAAA,EAAS,WAAW,MAAA,CAAO,OAAO,IAAI,CAAA,GAAI,CAAA,KAAA,EAAQ,OAAO,CAAA,CAAA,GAAK;AAAA,SAChE;AAAA,QACA,aAAA,EAAa,MAAA;AAAA,QAEZ;AAAA;AAAA,KACH;AAAA,EAEJ;AACF;AAEA,WAAA,CAAY,WAAA,GAAc,aAAA;ACjFnB,IAAM,iBAAA,GAA4D,CAAC,EAAE,QAAA,uBAAeA,cAAAA,CAAAC,uBAAG,QAAA,EAAS;ACEhG,SAAS,UAAA,CAAW;AAAA,EACzB,WAAA,GAAc,YAAA;AAAA,EACd,OAAA,GAAU,OAAA;AAAA,EACV,IAAA,GAAO,IAAA;AAAA,EACP,KAAA;AAAA,EACA,YAAA,EAAc,SAAA;AAAA,EACd,aAAA,EAAe;AACjB,CAAA,EAAoB;AAClB,EAAA,MAAM,GAAA,GAAM,UAAA;AAAA,IACV,aAAA;AAAA,IACA,gBAAgB,WAAW,CAAA,CAAA;AAAA,IAC3B,gBAAgB,OAAO,CAAA,CAAA;AAAA,IACvB,gBAAgB,IAAI,CAAA,CAAA;AAAA,IACpB,KAAA,IAAS;AAAA,GACX;AAEA,EAAA,uBACED,cAAAA;AAAA,IAAC,KAAA;AAAA,IAAA;AAAA,MACC,SAAA,EAAW,GAAA;AAAA,MACX,IAAA,EAAK,WAAA;AAAA,MACL,kBAAA,EAAkB,WAAA;AAAA,MAClB,YAAA,EAAY,SAAA;AAAA,MACZ,aAAA,EAAa,UAAA;AAAA,MAEZ,mCACCA,cAAAA,CAAC,MAAA,EAAA,EAAK,SAAA,EAAU,sBAAsB,QAAA,EAAA,KAAA,EAAM;AAAA;AAAA,GAEhD;AAEJ;ACxBA,IAAM,kBAAA,GAAqB;AAAA,EACzB,wBAAA;AAAA,EACA,QAAA;AAAA,EACA,uBAAA;AAAA,EACA,wBAAA;AAAA,EACA,0BAAA;AAAA,EACA;AACF,CAAA,CAAE,KAAK,IAAI,CAAA;AAEJ,SAAS,YAAA,CAAa;AAAA,EAC3B,OAAA,GAAU,IAAA;AAAA,EACV,YAAA,GAAe,IAAA;AAAA,EACf,WAAA,GAAc;AAChB,CAAA,GAAyB,EAAC,EAAG;AAC3B,EAAA,MAAM,YAAA,GAAeR,aAAoB,IAAI,CAAA;AAC7C,EAAA,MAAM,gBAAA,GAAmBA,aAA2B,IAAI,CAAA;AAExD,EAAAE,gBAAU,MAAM;AACd,IAAA,IAAI,CAAC,OAAA,IAAW,CAAC,YAAA,CAAa,OAAA,EAAS;AAEvC,IAAA,MAAM,YAAY,YAAA,CAAa,OAAA;AAC/B,IAAA,gBAAA,CAAiB,UAAU,QAAA,CAAS,aAAA;AAEpC,IAAA,MAAM,iBAAA,GAAoB,SAAA,CAAU,gBAAA,CAAiB,kBAAkB,CAAA;AACvE,IAAA,MAAM,cAAA,GAAiB,kBAAkB,CAAC,CAAA;AAC1C,IAAA,MAAM,aAAA,GAAgB,iBAAA,CAAkB,iBAAA,CAAkB,MAAA,GAAS,CAAC,CAAA;AAEpE,IAAA,IAAI,gBAAgB,cAAA,EAAgB;AAClC,MAAA,cAAA,CAAe,KAAA,EAAM;AAAA,IACvB;AAEA,IAAA,MAAM,aAAA,GAAgB,CAAC,CAAA,KAAqB;AAC1C,MAAA,IAAI,CAAA,CAAE,QAAQ,KAAA,EAAO;AAErB,MAAA,IAAI,EAAE,QAAA,EAAU;AACd,QAAA,IAAI,QAAA,CAAS,kBAAkB,cAAA,EAAgB;AAC7C,UAAA,CAAA,CAAE,cAAA,EAAe;AACjB,UAAA,aAAA,EAAe,KAAA,EAAM;AAAA,QACvB;AAAA,MACF,CAAA,MAAO;AACL,QAAA,IAAI,QAAA,CAAS,kBAAkB,aAAA,EAAe;AAC5C,UAAA,CAAA,CAAE,cAAA,EAAe;AACjB,UAAA,cAAA,EAAgB,KAAA,EAAM;AAAA,QACxB;AAAA,MACF;AAAA,IACF,CAAA;AAEA,IAAA,SAAA,CAAU,gBAAA,CAAiB,WAAW,aAAa,CAAA;AAEnD,IAAA,OAAO,MAAM;AACX,MAAA,SAAA,CAAU,mBAAA,CAAoB,WAAW,aAAa,CAAA;AACtD,MAAA,IAAI,WAAA,IAAe,iBAAiB,OAAA,EAAS;AAC3C,QAAA,gBAAA,CAAiB,QAAQ,KAAA,EAAM;AAAA,MACjC;AAAA,IACF,CAAA;AAAA,EACF,CAAA,EAAG,CAAC,OAAA,EAAS,YAAA,EAAc,WAAW,CAAC,CAAA;AAEvC,EAAA,OAAO,YAAA;AACT;AC3DO,SAAS,WAAA,CAAY;AAAA,EAC1B,mBAAA,GAAsB,IAAA;AAAA,EACtB,aAAA,GAAgB;AAClB,CAAA,GAAwB,EAAC,EAAG;AAC1B,EAAA,MAAM,CAAC,MAAA,EAAQ,SAAS,CAAA,GAAIE,eAAS,KAAK,CAAA;AAC1C,EAAA,MAAM,YAAA,GAAeJ,aAAoB,IAAI,CAAA;AAE7C,EAAA,MAAM,OAAOC,iBAAAA,CAAY,MAAM,UAAU,IAAI,CAAA,EAAG,EAAE,CAAA;AAClD,EAAA,MAAM,QAAQA,iBAAAA,CAAY,MAAM,UAAU,KAAK,CAAA,EAAG,EAAE,CAAA;AACpD,EAAA,MAAM,MAAA,GAASA,kBAAY,MAAM,SAAA,CAAU,UAAQ,CAAC,IAAI,CAAA,EAAG,EAAE,CAAA;AAE7D,EAAAC,gBAAU,MAAM;AACd,IAAA,IAAI,CAAC,MAAA,EAAQ;AAEb,IAAA,MAAM,kBAAA,GAAqB,CAAC,KAAA,KAAsB;AAChD,MAAA,IAAI,CAAC,mBAAA,EAAqB;AAE1B,MAAA,IAAI,YAAA,CAAa,WAAW,CAAC,YAAA,CAAa,QAAQ,QAAA,CAAS,KAAA,CAAM,MAAc,CAAA,EAAG;AAChF,QAAA,KAAA,EAAM;AAAA,MACR;AAAA,IACF,CAAA;AAEA,IAAA,MAAM,YAAA,GAAe,CAAC,KAAA,KAAyB;AAC7C,MAAA,IAAI,CAAC,aAAA,EAAe;AAEpB,MAAA,IAAI,KAAA,CAAM,QAAQ,QAAA,EAAU;AAC1B,QAAA,KAAA,EAAM;AAAA,MACR;AAAA,IACF,CAAA;AAEA,IAAA,QAAA,CAAS,gBAAA,CAAiB,aAAa,kBAAkB,CAAA;AACzD,IAAA,QAAA,CAAS,gBAAA,CAAiB,WAAW,YAAY,CAAA;AAEjD,IAAA,OAAO,MAAM;AACX,MAAA,QAAA,CAAS,mBAAA,CAAoB,aAAa,kBAAkB,CAAA;AAC5D,MAAA,QAAA,CAAS,mBAAA,CAAoB,WAAW,YAAY,CAAA;AAAA,IACtD,CAAA;AAAA,EACF,GAAG,CAAC,MAAA,EAAQ,KAAA,EAAO,mBAAA,EAAqB,aAAa,CAAC,CAAA;AAEtD,EAAA,OAAO;AAAA,IACL,MAAA;AAAA,IACA,IAAA;AAAA,IACA,KAAA;AAAA,IACA,MAAA;AAAA,IACA;AAAA,GACF;AACF;ACvCO,SAAS,UAAA,CAAW;AAAA,EACzB,SAAA,GAAY,KAAA;AAAA,EACZ,KAAA,GAAQ,GAAA;AAAA,EACR,SAAA,GAAY;AACd,CAAA,GAAuB,EAAC,EAAG;AACzB,EAAA,MAAM,CAAC,SAAA,EAAW,YAAY,CAAA,GAAIE,eAAS,KAAK,CAAA;AAChD,EAAA,MAAM,CAAC,QAAA,EAAU,WAAW,CAAA,GAAIA,cAAAA,CAA0B,EAAE,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,SAAA,EAAW,CAAA;AACnF,EAAA,MAAM,UAAA,GAAaJ,aAA2B,IAAI,CAAA;AAClD,EAAA,MAAM,UAAA,GAAaA,aAA6C,IAAI,CAAA;AACpE,EAAA,MAAM,cAAA,GAAiBA,aAA6C,IAAI,CAAA;AAExE,EAAA,MAAM,iBAAA,GAAoBC,kBAAY,MAAM;AAC1C,IAAA,IAAI,CAAC,WAAW,OAAA,EAAS;AAEzB,IAAA,MAAM,IAAA,GAAO,UAAA,CAAW,OAAA,CAAQ,qBAAA,EAAsB;AACtD,IAAA,MAAM,UAAU,MAAA,CAAO,OAAA;AACvB,IAAA,MAAM,UAAU,MAAA,CAAO,OAAA;AAEvB,IAAA,IAAI,CAAA,GAAI,CAAA;AACR,IAAA,IAAI,CAAA,GAAI,CAAA;AAER,IAAA,QAAQ,SAAA;AAAW,MACjB,KAAK,KAAA;AACH,QAAA,CAAA,GAAI,IAAA,CAAK,IAAA,GAAO,IAAA,CAAK,KAAA,GAAQ,CAAA,GAAI,OAAA;AACjC,QAAA,CAAA,GAAI,KAAK,GAAA,GAAM,OAAA;AACf,QAAA;AAAA,MACF,KAAK,QAAA;AACH,QAAA,CAAA,GAAI,IAAA,CAAK,IAAA,GAAO,IAAA,CAAK,KAAA,GAAQ,CAAA,GAAI,OAAA;AACjC,QAAA,CAAA,GAAI,KAAK,MAAA,GAAS,OAAA;AAClB,QAAA;AAAA,MACF,KAAK,MAAA;AACH,QAAA,CAAA,GAAI,KAAK,IAAA,GAAO,OAAA;AAChB,QAAA,CAAA,GAAI,IAAA,CAAK,GAAA,GAAM,IAAA,CAAK,MAAA,GAAS,CAAA,GAAI,OAAA;AACjC,QAAA;AAAA,MACF,KAAK,OAAA;AACH,QAAA,CAAA,GAAI,KAAK,KAAA,GAAQ,OAAA;AACjB,QAAA,CAAA,GAAI,IAAA,CAAK,GAAA,GAAM,IAAA,CAAK,MAAA,GAAS,CAAA,GAAI,OAAA;AACjC,QAAA;AAAA;AAGJ,IAAA,WAAA,CAAY,EAAE,CAAA,EAAG,CAAA,EAAG,SAAA,EAAW,CAAA;AAAA,EACjC,CAAA,EAAG,CAAC,SAAS,CAAC,CAAA;AAEd,EAAA,MAAM,IAAA,GAAOA,kBAAY,MAAM;AAC7B,IAAA,IAAI,eAAe,OAAA,EAAS;AAC1B,MAAA,YAAA,CAAa,eAAe,OAAO,CAAA;AAAA,IACrC;AAEA,IAAA,UAAA,CAAW,OAAA,GAAU,WAAW,MAAM;AACpC,MAAA,iBAAA,EAAkB;AAClB,MAAA,YAAA,CAAa,IAAI,CAAA;AAAA,IACnB,GAAG,KAAK,CAAA;AAAA,EACV,CAAA,EAAG,CAAC,iBAAA,EAAmB,KAAK,CAAC,CAAA;AAE7B,EAAA,MAAM,IAAA,GAAOA,kBAAY,MAAM;AAC7B,IAAA,IAAI,WAAW,OAAA,EAAS;AACtB,MAAA,YAAA,CAAa,WAAW,OAAO,CAAA;AAC/B,MAAA,UAAA,CAAW,OAAA,GAAU,IAAA;AAAA,IACvB;AAEA,IAAA,IAAI,YAAY,CAAA,EAAG;AACjB,MAAA,cAAA,CAAe,OAAA,GAAU,WAAW,MAAM;AACxC,QAAA,YAAA,CAAa,KAAK,CAAA;AAClB,QAAA,cAAA,CAAe,OAAA,GAAU,IAAA;AAAA,MAC3B,GAAG,SAAS,CAAA;AAAA,IACd,CAAA,MAAO;AACL,MAAA,YAAA,CAAa,KAAK,CAAA;AAAA,IACpB;AAAA,EACF,CAAA,EAAG,CAAC,SAAS,CAAC,CAAA;AAEd,EAAAC,gBAAU,MAAM;AACd,IAAA,OAAO,MAAM;AACX,MAAA,IAAI,WAAW,OAAA,EAAS;AACtB,QAAA,YAAA,CAAa,WAAW,OAAO,CAAA;AAC/B,QAAA,UAAA,CAAW,OAAA,GAAU,IAAA;AAAA,MACvB;AACA,MAAA,IAAI,eAAe,OAAA,EAAS;AAC1B,QAAA,YAAA,CAAa,eAAe,OAAO,CAAA;AACnC,QAAA,cAAA,CAAe,OAAA,GAAU,IAAA;AAAA,MAC3B;AAAA,IACF,CAAA;AAAA,EACF,CAAA,EAAG,EAAE,CAAA;AAEL,EAAA,OAAO;AAAA,IACL,SAAA;AAAA,IACA,QAAA;AAAA,IACA,IAAA;AAAA,IACA,IAAA;AAAA,IACA;AAAA,GACF;AACF;ACnGO,SAAS,QAAA,CAAS;AAAA,EACvB,QAAA;AAAA,EACA,MAAA;AAAA,EACA,OAAA;AAAA,EACA,IAAA,GAAO,IAAA;AAAA,EACP,oBAAA,GAAuB,IAAA;AAAA,EACvB,aAAA,GAAgB,IAAA;AAAA,EAChB,YAAA,EAAc,SAAA;AAAA,EACd,iBAAA,EAAmB,cAAA;AAAA,EACnB,kBAAA,EAAoB,eAAA;AAAA,EACpB,aAAA,EAAe;AACjB,CAAA,EAAkB;AAChB,EAAA,MAAM,eAAe,YAAA,CAAa;AAAA,IAChC,OAAA,EAAS,MAAA;AAAA,IACT,WAAA,EAAa;AAAA,GACd,CAAA;AAED,EAAAA,gBAAU,MAAM;AACd,IAAA,IAAI,CAAC,MAAA,IAAU,CAAC,aAAA,EAAe;AAE/B,IAAA,MAAM,YAAA,GAAe,CAAC,CAAA,KAAqB;AACzC,MAAA,IAAI,CAAA,CAAE,QAAQ,QAAA,EAAU;AACtB,QAAA,OAAA,IAAU;AAAA,MACZ;AAAA,IACF,CAAA;AAEA,IAAA,QAAA,CAAS,gBAAA,CAAiB,WAAW,YAAY,CAAA;AACjD,IAAA,OAAO,MAAM,QAAA,CAAS,mBAAA,CAAoB,SAAA,EAAW,YAAY,CAAA;AAAA,EACnE,CAAA,EAAG,CAAC,MAAA,EAAQ,aAAA,EAAe,OAAO,CAAC,CAAA;AAEnC,EAAAA,gBAAU,MAAM;AACd,IAAA,IAAI,MAAA,EAAQ;AACV,MAAA,QAAA,CAAS,IAAA,CAAK,MAAM,QAAA,GAAW,QAAA;AAAA,IACjC,CAAA,MAAO;AACL,MAAA,QAAA,CAAS,IAAA,CAAK,MAAM,QAAA,GAAW,EAAA;AAAA,IACjC;AAEA,IAAA,OAAO,MAAM;AACX,MAAA,QAAA,CAAS,IAAA,CAAK,MAAM,QAAA,GAAW,EAAA;AAAA,IACjC,CAAA;AAAA,EACF,CAAA,EAAG,CAAC,MAAM,CAAC,CAAA;AAEX,EAAA,IAAI,CAAC,QAAQ,OAAO,IAAA;AAEpB,EAAA,MAAM,WAAA,GAAc,WAAW,qBAAqB,CAAA;AACpD,EAAA,MAAM,QAAA,GAAW,UAAA;AAAA,IACf,WAAA;AAAA,IACA,cAAc,IAAI,CAAA;AAAA,GACpB;AAEA,EAAA,uBACEM,cAAAA;AAAA,IAAC,KAAA;AAAA,IAAA;AAAA,MACC,SAAA,EAAW,WAAA;AAAA,MACX,OAAA,EAAS,uBAAuB,OAAA,GAAU,MAAA;AAAA,MAC1C,aAAA,EAAa,UAAA;AAAA,MAEb,QAAA,kBAAAA,cAAAA;AAAA,QAAC,KAAA;AAAA,QAAA;AAAA,UACC,GAAA,EAAK,YAAA;AAAA,UACL,SAAA,EAAW,QAAA;AAAA,UACX,IAAA,EAAK,QAAA;AAAA,UACL,YAAA,EAAW,MAAA;AAAA,UACX,YAAA,EAAY,SAAA;AAAA,UACZ,iBAAA,EAAiB,cAAA;AAAA,UACjB,kBAAA,EAAkB,eAAA;AAAA,UAClB,OAAA,EAAS,CAAC,CAAA,KAAM,CAAA,CAAE,eAAA,EAAgB;AAAA,UAEjC;AAAA;AAAA;AACH;AAAA,GACF;AAEJ;ACxEO,SAAS,aAAA,CAAc;AAAA,EAC5B,QAAA;AAAA,EACA,SAAA,GAAY,GAAA;AAAA,EACZ,IAAA,GAAO,IAAA;AAAA,EACP,cAAc,SAAA,GAAY,YAAA;AAAA,EAC1B,aAAA,EAAe;AACjB,CAAA,EAAuB;AACrB,EAAA,MAAM,GAAA,GAAM,UAAA;AAAA,IACV,gBAAA;AAAA,IACA,mBAAmB,IAAI,CAAA;AAAA,GACzB;AAEA,EAAA,uBACEA,cAAAA;AAAA,IAAC,KAAA;AAAA,IAAA;AAAA,MACC,SAAA,EAAW,GAAA;AAAA,MACX,YAAA,EAAY,SAAA;AAAA,MACZ,aAAA,EAAa,UAAA;AAAA,MAEb,0BAAAA,cAAAA,CAAC,IAAA,EAAA,EAAG,WAAU,sBAAA,EACX,QAAA,EAAA,KAAA,CAAM,QAAQ,QAAQ,CAAA,GACnB,QAAA,CAAS,GAAA,CAAI,CAAC,KAAA,EAAO,KAAA,qBACnBD,eAAAA,CAAC,IAAA,EAAA,EAAe,WAAU,sBAAA,EACvB,QAAA,EAAA;AAAA,QAAA,KAAA;AAAA,QACA,KAAA,GAAQ,QAAA,CAAS,MAAA,GAAS,CAAA,oBACzBC,cAAAA,CAAC,MAAA,EAAA,EAAK,SAAA,EAAU,2BAAA,EAA4B,aAAA,EAAY,MAAA,EACrD,QAAA,EAAA,SAAA,EACH;AAAA,OAAA,EAAA,EALK,KAOT,CACD,CAAA,mBACDA,eAAC,IAAA,EAAA,EAAG,SAAA,EAAU,sBAAA,EAAwB,QAAA,EAAS,CAAA,EAErD;AAAA;AAAA,GACF;AAEJ;AAEO,SAAS,iBAAA,CAAkB;AAAA,EAChC,IAAI,EAAA,GAAK,MAAA;AAAA,EACT,QAAA;AAAA,EACA,IAAA;AAAA,EACA,OAAA,GAAU,KAAA;AAAA,EACV,QAAA,GAAW,KAAA;AAAA,EACX,OAAA;AAAA,EACA,cAAA,EAAgB,WAAA;AAAA,EAChB,aAAA,EAAe;AACjB,CAAA,EAA2B;AACzB,EAAA,MAAM,GAAA,GAAM,UAAA;AAAA,IACV,qBAAA;AAAA,IACA,OAAA,IAAW,8BAAA;AAAA,IACX,QAAA,IAAY;AAAA,GACd;AAEA,EAAA,MAAM,SAAA,GAAY,OAAO,GAAA,GAAM,EAAA;AAE/B,EAAA,uBACEA,cAAAA;AAAA,IAAC,SAAA;AAAA,IAAA;AAAA,MACC,SAAA,EAAW,GAAA;AAAA,MACX,IAAA;AAAA,MACA,OAAA;AAAA,MACA,cAAA,EAAc,OAAA,GAAW,WAAA,IAAe,MAAA,GAAU,MAAA;AAAA,MAClD,aAAA,EAAa,UAAA;AAAA,MAEZ;AAAA;AAAA,GACH;AAEJ;ACjEO,IAAM,WAAA,GAAcL,gBAAAA;AAAA,EACzB,CAAC;AAAA,IACC,OAAO,EAAC;AAAA,IACR,YAAA;AAAA,IACA,gBAAgB,EAAC;AAAA,IACjB,YAAA;AAAA,IACA,YAAA;AAAA,IACA,WAAA,GAAc,KAAA;AAAA,IACd,SAAA;AAAA,IACA,aAAA,EAAe,MAAA;AAAA,IACf,GAAG;AAAA,KACF,GAAA,KAAQ;AACT,IAAA,MAAM,CAAC,gBAAA,EAAkB,mBAAmB,CAAA,GAAIC,eAAmB,aAAa,CAAA;AAChF,IAAA,MAAM,CAAC,gBAAA,EAAkB,mBAAmB,CAAA,GAAIA,cAAAA,CAAmB,EAAE,CAAA;AAErE,IAAA,MAAM,YAAA,GAAe,CAAC,MAAA,KAAmB;AACvC,MAAA,MAAM,WAAA,GAAc,gBAAA,CAAiB,QAAA,CAAS,MAAM,IAChD,gBAAA,CAAiB,MAAA,CAAO,CAAA,EAAA,KAAM,EAAA,KAAO,MAAM,CAAA,GAC3C,CAAC,GAAG,kBAAkB,MAAM,CAAA;AAChC,MAAA,mBAAA,CAAoB,WAAW,CAAA;AAC/B,MAAA,YAAA,GAAe,MAAM,CAAA;AAAA,IACvB,CAAA;AAEA,IAAA,MAAM,YAAA,GAAe,CAAC,MAAA,KAAmB;AACvC,MAAA,IAAI,WAAA,EAAa;AACf,QAAA,MAAM,WAAA,GAAc,gBAAA,CAAiB,QAAA,CAAS,MAAM,IAChD,gBAAA,CAAiB,MAAA,CAAO,CAAA,EAAA,KAAM,EAAA,KAAO,MAAM,CAAA,GAC3C,CAAC,GAAG,kBAAkB,MAAM,CAAA;AAChC,QAAA,mBAAA,CAAoB,WAAW,CAAA;AAAA,MACjC;AACA,MAAA,YAAA,GAAe,MAAM,CAAA;AAAA,IACvB,CAAA;AAEA,IAAA,MAAM,UAAA,GAAa,CAAC,IAAA,EAAgB,KAAA,GAAQ,CAAA,KAAuB;AACjE,MAAA,MAAM,UAAA,GAAa,gBAAA,CAAiB,QAAA,CAAS,IAAA,CAAK,EAAE,CAAA;AACpD,MAAA,MAAM,UAAA,GAAa,cACf,gBAAA,CAAiB,QAAA,CAAS,KAAK,EAAE,CAAA,GACjC,iBAAiB,IAAA,CAAK,EAAA;AAC1B,MAAA,MAAM,WAAA,GAAc,IAAA,CAAK,QAAA,IAAY,IAAA,CAAK,SAAS,MAAA,GAAS,CAAA;AAE5D,MAAA,uBACEG,gBAAC,KAAA,EAAA,EACC,QAAA,EAAA;AAAA,wBAAAC,cAAAA;AAAA,UAAC,WAAA;AAAA,UAAA;AAAA,YACC,IAAA;AAAA,YACA,KAAA;AAAA,YACA,QAAA,EAAU,UAAA;AAAA,YACV,QAAA,EAAU,UAAA;AAAA,YACV,aAAa,WAAA,IAAe,MAAA;AAAA,YAC5B,UAAU,WAAA,GAAc,MAAM,YAAA,CAAa,IAAA,CAAK,EAAE,CAAA,GAAI,MAAA;AAAA,YACtD,QAAA,EAAU,MAAM,YAAA,CAAa,IAAA,CAAK,EAAE;AAAA;AAAA,SACtC;AAAA,QACC,cAAc,WAAA,oBACbA,cAAAA,CAAC,KAAA,EAAA,EAAI,WAAU,yBAAA,EACZ,QAAA,EAAA,IAAA,CAAK,QAAA,EAAU,GAAA,CAAI,CAAC,SAAA,KAAc,UAAA,CAAW,WAAW,KAAA,GAAQ,CAAC,CAAC,CAAA,EACrE;AAAA,OAAA,EAAA,EAbM,KAAK,EAef,CAAA;AAAA,IAEJ,CAAA;AAEA,IAAA,uBACEA,cAAAA;AAAA,MAAC,KAAA;AAAA,MAAA;AAAA,QACE,GAAG,KAAA;AAAA,QACJ,GAAA;AAAA,QACA,IAAA,EAAK,MAAA;AAAA,QACL,SAAA,EAAW,UAAA,CAAW,eAAA,EAAiB,SAAS,CAAA;AAAA,QAChD,aAAA,EAAa,MAAA;AAAA,QAEZ,QAAA,EAAA,IAAA,CAAK,GAAA,CAAI,CAAA,IAAA,KAAQ,UAAA,CAAW,IAAI,CAAC;AAAA;AAAA,KACpC;AAAA,EAEJ;AACF;AAEA,WAAA,CAAY,WAAA,GAAc,aAAA;AAEnB,IAAM,WAAA,GAAcL,gBAAAA;AAAA,EACzB,CAAC;AAAA,IACC,IAAA;AAAA,IACA,KAAA,GAAQ,CAAA;AAAA,IACR,QAAA;AAAA,IACA,QAAA;AAAA,IACA,WAAA;AAAA,IACA,QAAA;AAAA,IACA,QAAA;AAAA,IACA,SAAA;AAAA,IACA,GAAG;AAAA,KACF,GAAA,KAAQ;AACT,IAAA,IAAI,CAAC,MAAM,OAAO,IAAA;AAElB,IAAA,uBACEI,eAAAA;AAAA,MAAC,KAAA;AAAA,MAAA;AAAA,QACE,GAAG,KAAA;AAAA,QACJ,GAAA;AAAA,QACA,IAAA,EAAK,UAAA;AAAA,QACL,eAAA,EAAe,cAAc,QAAA,GAAW,MAAA;AAAA,QACxC,eAAA,EAAe,QAAA;AAAA,QACf,cAAY,KAAA,GAAQ,CAAA;AAAA,QACpB,QAAA,EAAU,CAAA;AAAA,QACV,SAAA,EAAW,UAAA;AAAA,UACT,eAAA;AAAA,UACA,QAAA,IAAY,yBAAA;AAAA,UACZ,WAAA,IAAe,2BAAA;AAAA,UACf;AAAA,SACF;AAAA,QACA,OAAO,EAAE,WAAA,EAAa,CAAA,EAAG,KAAA,GAAQ,EAAE,CAAA,EAAA,CAAA,EAAK;AAAA,QACxC,OAAA,EAAS,QAAA;AAAA,QAER,QAAA,EAAA;AAAA,UAAA,WAAA,oBACCC,cAAAA;AAAA,YAAC,QAAA;AAAA,YAAA;AAAA,cACC,SAAA,EAAU,uBAAA;AAAA,cACV,OAAA,EAAS,CAAC,CAAA,KAAM;AACd,gBAAA,CAAA,CAAE,eAAA,EAAgB;AAClB,gBAAA,QAAA,IAAW;AAAA,cACb,CAAA;AAAA,cACA,YAAA,EAAY,WAAW,UAAA,GAAa,QAAA;AAAA,cAEnC,qBAAW,QAAA,GAAM;AAAA;AAAA,WACpB;AAAA,0BAEFA,cAAAA,CAAC,MAAA,EAAA,EAAK,SAAA,EAAU,sBAAA,EAAwB,eAAK,KAAA,EAAM;AAAA;AAAA;AAAA,KACrD;AAAA,EAEJ;AACF;AAEA,WAAA,CAAY,WAAA,GAAc,aAAA;;;AC5HnB,IAAM,YAAA,GAAsB;AAAA,EACjC,MAAA,EAAQ;AAAA,IACN,OAAA,EAAS;AAAA,MACP,EAAA,EAAI,SAAA;AAAA,MACJ,GAAA,EAAK,SAAA;AAAA,MACL,GAAA,EAAK,SAAA;AAAA,MACL,GAAA,EAAK,SAAA;AAAA,MACL,GAAA,EAAK,SAAA;AAAA,MACL,GAAA,EAAK;AAAA,KACP;AAAA,IACA,IAAA,EAAM;AAAA,MACJ,EAAA,EAAI,SAAA;AAAA,MACJ,GAAA,EAAK,SAAA;AAAA,MACL,GAAA,EAAK,SAAA;AAAA,MACL,GAAA,EAAK,SAAA;AAAA,MACL,GAAA,EAAK,SAAA;AAAA,MACL,GAAA,EAAK,SAAA;AAAA,MACL,GAAA,EAAK,SAAA;AAAA,MACL,GAAA,EAAK;AAAA,KACP;AAAA,IACA,MAAA,EAAQ;AAAA,MACN,EAAA,EAAI,SAAA;AAAA,MACJ,GAAA,EAAK,SAAA;AAAA,MACL,GAAA,EAAK,SAAA;AAAA,MACL,GAAA,EAAK;AAAA,KACP;AAAA,IACA,OAAA,EAAS;AAAA,MACP,EAAA,EAAI,SAAA;AAAA,MACJ,GAAA,EAAK,SAAA;AAAA,MACL,GAAA,EAAK,SAAA;AAAA,MACL,GAAA,EAAK;AAAA,KACP;AAAA,IACA,OAAA,EAAS;AAAA,MACP,EAAA,EAAI,SAAA;AAAA,MACJ,GAAA,EAAK,SAAA;AAAA,MACL,GAAA,EAAK,SAAA;AAAA,MACL,GAAA,EAAK;AAAA;AACP,GACF;AAAA,EACA,OAAA,EAAS;AAAA,IACP,EAAA,EAAI,SAAA;AAAA;AAAA,IACJ,EAAA,EAAI,QAAA;AAAA;AAAA,IACJ,EAAA,EAAI,MAAA;AAAA;AAAA,IACJ,EAAA,EAAI,QAAA;AAAA;AAAA,IACJ,EAAA,EAAI,MAAA;AAAA;AAAA,IACJ,KAAA,EAAO;AAAA;AAAA,GACT;AAAA,EACA,UAAA,EAAY;AAAA,IACV,UAAA,EAAY;AAAA,MACV,IAAA,EAAM,CAAC,OAAA,EAAS,WAAA,EAAa,YAAY,CAAA;AAAA,MACzC,IAAA,EAAM,CAAC,WAAA,EAAa,QAAA,EAAU,WAAW;AAAA,KAC3C;AAAA,IACA,QAAA,EAAU;AAAA,MACR,IAAI,CAAC,SAAA,EAAW,EAAE,UAAA,EAAY,QAAQ,CAAA;AAAA,MACtC,IAAI,CAAC,UAAA,EAAY,EAAE,UAAA,EAAY,WAAW,CAAA;AAAA,MAC1C,MAAM,CAAC,MAAA,EAAQ,EAAE,UAAA,EAAY,UAAU,CAAA;AAAA,MACvC,IAAI,CAAC,UAAA,EAAY,EAAE,UAAA,EAAY,WAAW,CAAA;AAAA,MAC1C,IAAI,CAAC,SAAA,EAAW,EAAE,UAAA,EAAY,WAAW,CAAA;AAAA,MACzC,OAAO,CAAC,QAAA,EAAU,EAAE,UAAA,EAAY,QAAQ;AAAA;AAC1C,GACF;AAAA,EACA,YAAA,EAAc;AAAA,IACZ,EAAA,EAAI,UAAA;AAAA,IACJ,EAAA,EAAI,UAAA;AAAA,IACJ,EAAA,EAAI,QAAA;AAAA,IACJ,IAAA,EAAM;AAAA,GACR;AAAA,EACA,MAAA,EAAQ;AAAA,IACN,EAAA,EAAI,+BAAA;AAAA,IACJ,EAAA,EAAI,iCAAA;AAAA,IACJ,EAAA,EAAI;AAAA;AAER;AC1EA,IAAM,YAAA,GAAeE,oBAA4C,MAAS;AAWnE,SAAS,aAAA,CAAc,EAAE,QAAA,EAAU,YAAA,GAAe,cAAa,EAAuB;AAC3F,EAAA,MAAM,CAAC,KAAA,EAAO,QAAQ,CAAA,GAAIN,eAAgB,YAAY,CAAA;AAEtD,EAAA,MAAM,KAAA,GAA0B;AAAA,IAC9B,KAAA;AAAA,IACA;AAAA,GACF;AAEA,EAAA,uBACEI,cAAAA,CAAC,YAAA,CAAa,QAAA,EAAb,EAAsB,OACpB,QAAA,EACH,CAAA;AAEJ;ACnBO,SAAS,QAAA,GAA6B;AAC3C,EAAA,MAAM,OAAA,GAAUG,iBAAW,YAAY,CAAA;AAEvC,EAAA,IAAI,CAAC,OAAA,EAAS;AACZ,IAAA,MAAM,IAAI,MAAM,8CAA8C,CAAA;AAAA,EAChE;AAEA,EAAA,OAAO,OAAA;AACT;;;ACIO,IAAM,aAAA,GAAgB","file":"index.cjs","sourcesContent":["import { useCallback, useEffect, useRef } from 'react'\r\nimport type { MutableRefObject } from 'react'\r\n\r\nexport interface UseArrowNavigationOptions {\r\n  orientation?: 'horizontal' | 'vertical' | 'both'\r\n  loop?: boolean\r\n  selector?: string\r\n  onNavigate?: (index: number, element: HTMLElement) => void\r\n  typeahead?: boolean\r\n}\r\n\r\ninterface UseArrowNavigationResult {\r\n  containerRef: MutableRefObject<HTMLElement | null>\r\n  focusElement: (index: number) => void\r\n  getFocusableElements: () => HTMLElement[]\r\n  getFocusedIndex: () => number\r\n  focusFirst: () => void\r\n  focusLast: () => void\r\n  focusIndex: (index: number) => void\r\n  setContainerRef: (node: HTMLElement | null) => void\r\n}\r\n\r\n/**\r\n * Advanced keyboard navigation hook for components like Tabs, Menu, etc.\r\n * Implements WAI-ARIA authoring practices for arrow key navigation\r\n */\r\nexport function useArrowNavigation({\r\n  orientation = 'horizontal',\r\n  loop = true,\r\n  selector = '[role=\"tab\"], [role=\"menuitem\"], [role=\"option\"]',\r\n  onNavigate\r\n}: UseArrowNavigationOptions = {}): UseArrowNavigationResult {\r\n  const containerRef = useRef<HTMLElement | null>(null)\r\n  const focusedIndexRef = useRef(-1)\r\n\r\n  const getFocusableElements = useCallback(() => {\r\n    if (!containerRef.current) return []\r\n    return Array.from(containerRef.current.querySelectorAll(selector)) as HTMLElement[]\r\n  }, [selector])\r\n\r\n  const focusElement = useCallback((index: number) => {\r\n    const elements = getFocusableElements()\r\n    if (index < 0 || index >= elements.length) return\r\n\r\n    const element = elements[index]\r\n    if (element) {\r\n      element.focus()\r\n      focusedIndexRef.current = index\r\n      onNavigate?.(index, element)\r\n    }\r\n  }, [getFocusableElements, onNavigate])\r\n\r\n  const handleKeyDown = useCallback((event: KeyboardEvent) => {\r\n    const elements = getFocusableElements()\r\n    if (elements.length === 0) return\r\n\r\n    const currentIndex = focusedIndexRef.current\r\n    let nextIndex = currentIndex\r\n\r\n    const isHorizontal = orientation === 'horizontal' || orientation === 'both'\r\n    const isVertical = orientation === 'vertical' || orientation === 'both'\r\n\r\n    switch (event.key) {\r\n      case 'ArrowRight':\r\n        if (isHorizontal) {\r\n          event.preventDefault()\r\n          nextIndex = currentIndex + 1\r\n        }\r\n        break\r\n      case 'ArrowLeft':\r\n        if (isHorizontal) {\r\n          event.preventDefault()\r\n          nextIndex = currentIndex - 1\r\n        }\r\n        break\r\n      case 'ArrowDown':\r\n        if (isVertical) {\r\n          event.preventDefault()\r\n          nextIndex = currentIndex + 1\r\n        }\r\n        break\r\n      case 'ArrowUp':\r\n        if (isVertical) {\r\n          event.preventDefault()\r\n          nextIndex = currentIndex - 1\r\n        }\r\n        break\r\n      case 'Home':\r\n        event.preventDefault()\r\n        nextIndex = 0\r\n        break\r\n      case 'End':\r\n        event.preventDefault()\r\n        nextIndex = elements.length - 1\r\n        break\r\n      default:\r\n        return\r\n    }\r\n\r\n    // Handle looping\r\n    if (loop) {\r\n      if (nextIndex >= elements.length) nextIndex = 0\r\n      if (nextIndex < 0) nextIndex = elements.length - 1\r\n    } else {\r\n      nextIndex = Math.max(0, Math.min(nextIndex, elements.length - 1))\r\n    }\r\n\r\n    focusElement(nextIndex)\r\n  }, [getFocusableElements, focusElement, orientation, loop])\r\n\r\n  useEffect(() => {\r\n    const container = containerRef.current\r\n    if (!container) return\r\n\r\n    container.addEventListener('keydown', handleKeyDown)\r\n    return () => container.removeEventListener('keydown', handleKeyDown)\r\n  }, [handleKeyDown])\r\n\r\n  const getFocusedIndex = useCallback(() => focusedIndexRef.current, [])\r\n\r\n  const focusFirst = useCallback(() => {\r\n    focusElement(0)\r\n  }, [focusElement])\r\n\r\n  const focusLast = useCallback(() => {\r\n    const elements = getFocusableElements()\r\n    if (elements.length > 0) {\r\n      focusElement(elements.length - 1)\r\n    }\r\n  }, [focusElement, getFocusableElements])\r\n\r\n  const focusIndex = useCallback(\r\n    (index: number) => {\r\n      focusElement(index)\r\n    },\r\n    [focusElement]\r\n  )\r\n\r\n  const setContainerRef = useCallback((node: HTMLElement | null) => {\r\n    containerRef.current = node\r\n  }, [])\r\n\r\n  return {\r\n    containerRef,\r\n    focusElement,\r\n    getFocusableElements,\r\n    getFocusedIndex,\r\n    focusFirst,\r\n    focusLast,\r\n    focusIndex,\r\n    setContainerRef\r\n  }\r\n}","/**\r\n * Generates initials from a full name\r\n * @param name - The full name string\r\n * @returns Initials (first letter of first two words, uppercased)\r\n */\r\nexport function generateInitials(name: string): string {\r\n  if (!name?.trim()) return '??'\r\n  \r\n  const words = name.trim().split(/\\s+/)\r\n  if (words.length === 1) {\r\n    return words[0].charAt(0).toUpperCase()\r\n  }\r\n  \r\n  return (words[0].charAt(0) + words[1].charAt(0)).toUpperCase()\r\n}","// DynUI Utilities - Complete Export\r\n// Migration from src/utils/ to packages/core/src/utils/\r\n\r\nexport * from './class-names'\r\nexport * from './generate-initials'\r\nexport * from './style-props'\r\n\r\n// Back-compat helpers used by components\r\nexport function classNames(...classes: Array<string | false | null | undefined>) {\r\n  return classes.filter(Boolean).join(' ')\r\n}\r\n\r\nexport function getSpacingStyles(\r\n  { p, m, gap }: { p?: number | string; m?: number | string; gap?: number | string }\r\n): React.CSSProperties {\r\n  const styles: React.CSSProperties = {}\r\n  if (p !== undefined) styles.padding = typeof p === 'number' ? `${p}px` : p\r\n  if (m !== undefined) styles.margin = typeof m === 'number' ? `${m}px` : m\r\n  if (gap !== undefined) (styles as any).gap = typeof gap === 'number' ? `${gap}px` : gap\r\n  return styles\r\n}","import React, { forwardRef, useState, useImperativeHandle } from 'react'\r\nimport type { DynTabsProps, DynTabProps, DynTabPanelProps, DynTabsRef, TabItem } from '../types/components/dyn-tabs.types'\r\nimport { useArrowNavigation } from '../hooks/use-arrow-navigation'\r\nimport { classNames } from '../utils'\r\n\r\n/**\r\n * DynTabs - WAI-ARIA compliant Tabs with activation modes and mini API\r\n * - Activation: 'auto' (activate on focus) | 'manual' (activate on Enter/Space)\r\n * - Orientation: 'horizontal' | 'vertical'\r\n * - Keyboard: Arrow keys, Home/End, typeahead (provided by useArrowNavigation)\r\n * - Mini API: focusFirst, focusLast, focus(value), getFocused, getSelected\r\n */\r\nexport const DynTabs = forwardRef<DynTabsRef, DynTabsProps>(\r\n  (\r\n    {\r\n      value,\r\n      defaultValue,\r\n      onChange,\r\n      orientation = 'horizontal',\r\n      activation = 'auto',\r\n      children,\r\n      className,\r\n      'aria-label': ariaLabel,\r\n      'data-testid': testId,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const [internal, setInternal] = useState<string>(defaultValue ?? '')\r\n    const selected = value ?? internal\r\n\r\n    const setSelected = (next: string) => {\r\n      if (value === undefined) setInternal(next)\r\n      onChange?.(next)\r\n    }\r\n\r\n    const { getFocusedIndex, focusFirst, focusLast, focusIndex, setContainerRef } = useArrowNavigation({\r\n      orientation,\r\n      selector: '[role=\"tab\"]:not([aria-disabled=\"true\"])',\r\n      typeahead: true,\r\n      loop: true\r\n    })\r\n\r\n    // Expose mini API\r\n    useImperativeHandle(ref, () => ({\r\n      focusFirst: () => focusFirst(),\r\n      focusLast: () => focusLast(),\r\n      focus: (v: string) => {\r\n        const items = getTabItems()\r\n        const idx = items.findIndex(i => i.value === v)\r\n        if (idx >= 0) focusIndex(idx)\r\n      },\r\n      getFocused: () => {\r\n        const idx = getFocusedIndex()\r\n        const items = getTabItems()\r\n        return idx >= 0 ? items[idx]?.value ?? null : null\r\n      },\r\n      getSelected: () => selected ?? null\r\n    }))\r\n\r\n    const getTabItems = (): TabItem[] => {\r\n      const items: TabItem[] = []\r\n      React.Children.forEach(children, (child) => {\r\n        if (React.isValidElement<DynTabProps>(child) && child.type === DynTab) {\r\n          const { item } = child.props as any\r\n          if (item) items.push(item)\r\n        }\r\n      })\r\n      return items\r\n    }\r\n\r\n    const handleTabActivate = (tabValue: string) => setSelected(tabValue)\r\n\r\n    return (\r\n      <div\r\n        {...props}\r\n        className={classNames('dyn-tabs', `dyn-tabs--${orientation}`, className)}\r\n        data-testid={testId}\r\n        aria-label={ariaLabel}\r\n      >\r\n        <div\r\n          ref={(node) => {\r\n            setContainerRef(node)\r\n          }}\r\n          role=\"tablist\"\r\n          aria-orientation={orientation}\r\n          className=\"dyn-tabs__list\"\r\n        >\r\n          {React.Children.map(children, (child) => {\r\n            if (React.isValidElement<DynTabProps>(child) && child.type === DynTab) {\r\n              const item = (child.props as any).item as TabItem\r\n              const isActive = item?.value === selected\r\n              return React.cloneElement(child, {\r\n                isActive,\r\n                onSelect: handleTabActivate,\r\n                activation\r\n              } as Partial<DynTabProps>)\r\n            }\r\n            return null\r\n          })}\r\n        </div>\r\n        <div className=\"dyn-tabs__content\">\r\n          {React.Children.map(children, (child) => {\r\n            if (React.isValidElement<DynTabPanelProps>(child) && child.type === DynTabPanel) {\r\n              const item = (child.props as any).item as TabItem\r\n              const isActive = item?.value === selected\r\n              return React.cloneElement(child, { isActive } as Partial<DynTabPanelProps>)\r\n            }\r\n            return null\r\n          })}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n)\r\n\r\nDynTabs.displayName = 'DynTabs'\r\n\r\nexport const DynTab = forwardRef<HTMLButtonElement, DynTabProps>(\r\n  ({ item, isActive, onSelect, activation = 'auto', disabled, className, ...props }, ref) => (\r\n    <button\r\n      {...props}\r\n      ref={ref}\r\n      role=\"tab\"\r\n      type=\"button\"\r\n      aria-selected={isActive}\r\n      aria-disabled={disabled}\r\n      tabIndex={isActive ? 0 : -1}\r\n      className={classNames(\r\n        'dyn-tab',\r\n        isActive && 'dyn-tab--active',\r\n        disabled && 'dyn-tab--disabled',\r\n        className\r\n      )}\r\n      onClick={() => !disabled && onSelect?.(item.value)}\r\n      onKeyDown={(e) => {\r\n        if (activation === 'manual' && (e.key === 'Enter' || e.key === ' ')) {\r\n          e.preventDefault()\r\n          onSelect?.(item.value)\r\n        } else if (activation === 'auto' && (e.key === 'Enter' || e.key === ' ')) {\r\n          // Already active via focus; prevent scroll\r\n          e.preventDefault()\r\n        }\r\n      }}\r\n    >\r\n      {item?.label ?? props.children}\r\n    </button>\r\n  )\r\n)\r\n\r\nDynTab.displayName = 'DynTab'\r\n\r\nexport const DynTabPanel = forwardRef<HTMLDivElement, DynTabPanelProps>(\r\n  ({ item, isActive, className, ...props }, ref) => (\r\n    <div\r\n      {...props}\r\n      ref={ref}\r\n      role=\"tabpanel\"\r\n      hidden={!isActive}\r\n      className={classNames('dyn-tab-panel', className)}\r\n      aria-labelledby={item?.value}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  )\r\n)\r\n\r\nDynTabPanel.displayName = 'DynTabPanel'\r\n","export const DynStepper = () => null\r\nexport const DynStep = () => null\r\n","import React, { forwardRef } from 'react';\r\nimport type { DynMenuProps, DynMenuItemProps } from '../types/components/dyn-menu.types';\r\nimport { classNames } from '../utils';\r\n\r\nexport const DynMenu = forwardRef<HTMLDivElement, DynMenuProps>(\r\n  ({ \r\n    children, \r\n    orientation = 'vertical',\r\n    onAction,\r\n    className,\r\n    'data-testid': testId,\r\n    ...props \r\n  }, ref) => {\r\n    const handleAction = (key: string) => {\r\n      onAction?.(key);\r\n    };\r\n\r\n    return (\r\n      <div\r\n        {...props}\r\n        ref={ref}\r\n        role=\"menu\"\r\n        className={classNames('dyn-menu', `dyn-menu--${orientation}`, className)}\r\n        data-testid={testId}\r\n      >\r\n        {React.Children.map(children, (child, index) => {\r\n          if (React.isValidElement(child) && child.type === DynMenuItem) {\r\n            return React.cloneElement(child as React.ReactElement<DynMenuItemProps>, {\r\n              onAction: handleAction,\r\n              key: child.key || index\r\n            });\r\n          }\r\n          return child;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nDynMenu.displayName = 'DynMenu';\r\n\r\nexport const DynMenuItem = forwardRef<HTMLButtonElement, DynMenuItemProps>(\r\n  ({ \r\n    children,\r\n    disabled = false,\r\n    action,\r\n    onAction,\r\n    className,\r\n    'data-testid': testId,\r\n    ...props \r\n  }, ref) => {\r\n    const handleClick = () => {\r\n      if (!disabled && action) {\r\n        onAction?.(action);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <button\r\n        {...props}\r\n        ref={ref}\r\n        role=\"menuitem\"\r\n        disabled={disabled}\r\n        className={classNames('dyn-menu-item', disabled && 'dyn-menu-item--disabled', className)}\r\n        onClick={handleClick}\r\n        data-testid={testId}\r\n      >\r\n        {children}\r\n      </button>\r\n    );\r\n  }\r\n);\r\n\r\nDynMenuItem.displayName = 'DynMenuItem';","import { useState, forwardRef } from 'react';\r\nimport type { DynListViewProps } from '../types/components/dyn-listview.types';\r\nimport { useArrowNavigation } from '../hooks/use-arrow-navigation';\r\nimport { classNames } from '../utils';\r\n\r\nexport const DynListView = forwardRef<HTMLDivElement, DynListViewProps>(\r\n  ({\r\n    items = [],\r\n    selectedItem,\r\n    onSelectionChange,\r\n    multiSelect = false,\r\n    className,\r\n    'data-testid': testId,\r\n    ...props\r\n  }, ref) => {\r\n    const [selectedItems, setSelectedItems] = useState<string[]>([]);\r\n    \r\n    const { containerRef } = useArrowNavigation({\r\n      orientation: 'vertical',\r\n      selector: '.dyn-list-item:not(.dyn-list-item--disabled)'\r\n    });\r\n\r\n    const handleItemSelect = (itemId: string) => {\r\n      if (multiSelect) {\r\n        const newSelection = selectedItems.includes(itemId)\r\n          ? selectedItems.filter(id => id !== itemId)\r\n          : [...selectedItems, itemId];\r\n        setSelectedItems(newSelection);\r\n        onSelectionChange?.(newSelection);\r\n      } else {\r\n        onSelectionChange?.([itemId]);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div\r\n        {...props}\r\n        ref={ref || (containerRef as React.RefObject<HTMLDivElement>)}\r\n        role=\"listbox\"\r\n        aria-multiselectable={multiSelect}\r\n        className={classNames('dyn-list-view', className)}\r\n        data-testid={testId}\r\n      >\r\n        {items.map((item, index) => {\r\n          const isSelected = multiSelect \r\n            ? selectedItems.includes(item.id)\r\n            : selectedItem === item.id;\r\n            \r\n          return (\r\n            <div\r\n              key={item.id || index}\r\n              role=\"option\"\r\n              aria-selected={isSelected}\r\n              tabIndex={0}\r\n              className={classNames(\r\n                'dyn-list-item',\r\n                isSelected && 'dyn-list-item--selected',\r\n                item.disabled && 'dyn-list-item--disabled'\r\n              )}\r\n              onClick={() => !item.disabled && handleItemSelect(item.id)}\r\n            >\r\n              {item.label}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nDynListView.displayName = 'DynListView';","import type { DynInputProps } from '../types/components/dyn-input.types'\r\nimport { classNames } from '../utils'\r\n\r\nexport function DynInput({\r\n  as: As = 'input',\r\n  type = 'text',\r\n  id,\r\n  name,\r\n  value,\r\n  defaultValue,\r\n  disabled,\r\n  required,\r\n  placeholder,\r\n  readonly,\r\n  size = 'md',\r\n  variant = 'outline',\r\n  startIcon,\r\n  endIcon,\r\n  prefix,\r\n  suffix,\r\n  onChange,\r\n  onFocus,\r\n  onBlur,\r\n  'aria-label': ariaLabel,\r\n  'aria-labelledby': ariaLabelledby,\r\n  'aria-describedby': ariaDescribedby,\r\n  'aria-invalid': ariaInvalid,\r\n  'data-testid': dataTestId,\r\n  'data-state': dataState\r\n}: DynInputProps) {\r\n  const cls = classNames(\r\n    'dyn-input',\r\n    `dyn-input--${size}`,\r\n    `dyn-input--${variant}`,\r\n    disabled && 'dyn-input--disabled',\r\n    readonly && 'dyn-input--readonly'\r\n  )\r\n\r\n  return (\r\n    <div className={classNames('dyn-input-wrapper', dataState && `dyn-input--${dataState}`)} data-testid={dataTestId}>\r\n      {startIcon && <div className=\"dyn-input__start-icon\">{startIcon}</div>}\r\n      {prefix && <div className=\"dyn-input__prefix\">{prefix}</div>}\r\n      <As\r\n        type={type}\r\n        id={id}\r\n        name={name}\r\n        value={value}\r\n        defaultValue={defaultValue}\r\n        disabled={disabled}\r\n        required={required}\r\n        placeholder={placeholder}\r\n        readOnly={readonly}\r\n        className={cls}\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => onChange?.(e.target.value)}\r\n        onFocus={onFocus}\r\n        onBlur={onBlur}\r\n        aria-label={ariaLabel}\r\n        aria-labelledby={ariaLabelledby}\r\n        aria-describedby={ariaDescribedby}\r\n        aria-invalid={ariaInvalid}\r\n      />\r\n      {suffix && <div className=\"dyn-input__suffix\">{suffix}</div>}\r\n      {endIcon && <div className=\"dyn-input__end-icon\">{endIcon}</div>}\r\n    </div>\r\n  )\r\n}","import type { DynButtonProps } from '../types/components/dyn-button.types'\r\nimport { classNames } from '../utils'\r\n\r\nexport function DynButton({\r\n  as: As = 'button',\r\n  children,\r\n  variant = 'solid',\r\n  size = 'md',\r\n  color = 'neutral',\r\n  disabled,\r\n  loading,\r\n  onClick,\r\n  onFocus,\r\n  onBlur,\r\n  startIcon,\r\n  endIcon,\r\n  'aria-label': ariaLabel,\r\n  'aria-labelledby': ariaLabelledby,\r\n  'aria-describedby': ariaDescribedby,\r\n  'data-testid': dataTestId,\r\n  'data-state': dataState\r\n}: DynButtonProps) {\r\n  const cls = classNames(\r\n    'dyn-button',\r\n    `dyn-button--${variant}`,\r\n    `dyn-button--${size}`,\r\n    `dyn-button--${color}`,\r\n    disabled && 'dyn-button--disabled',\r\n    loading && 'dyn-button--loading',\r\n    dataState && `dyn-button--${dataState}`\r\n  )\r\n\r\n  return (\r\n    <As\r\n      className={cls}\r\n      disabled={disabled || loading}\r\n      onClick={onClick}\r\n      onFocus={onFocus}\r\n      onBlur={onBlur}\r\n      aria-label={ariaLabel}\r\n      aria-labelledby={ariaLabelledby}\r\n      aria-describedby={ariaDescribedby}\r\n      data-testid={dataTestId}\r\n    >\r\n      {startIcon && <span className=\"dyn-button__start-icon\">{startIcon}</span>}\r\n      {children}\r\n      {loading && <span className=\"dyn-button__loader\" aria-hidden=\"true\">Loading...</span>}\r\n      {endIcon && <span className=\"dyn-button__end-icon\">{endIcon}</span>}\r\n    </As>\r\n  )\r\n}","import type { DynCheckboxProps } from '../types/components/dyn-checkbox.types'\r\nimport { classNames } from '../utils'\r\n\r\nexport function DynCheckbox({\r\n  id,\r\n  checked,\r\n  defaultChecked,\r\n  disabled,\r\n  required,\r\n  indeterminate,\r\n  label,\r\n  size = 'md',\r\n  onChange,\r\n  onFocus,\r\n  onBlur,\r\n  'aria-label': ariaLabel,\r\n  'aria-labelledby': ariaLabelledby,\r\n  'aria-describedby': ariaDescribedby,\r\n  'data-testid': dataTestId\r\n}: DynCheckboxProps) {\r\n  const cls = classNames(\r\n    'dyn-checkbox',\r\n    `dyn-checkbox--${size}`,\r\n    disabled && 'dyn-checkbox--disabled',\r\n    indeterminate && 'dyn-checkbox--indeterminate'\r\n  )\r\n\r\n  return (\r\n    <div className=\"dyn-checkbox-wrapper\" data-testid={dataTestId}>\r\n      <input\r\n        type=\"checkbox\"\r\n        id={id}\r\n        checked={checked}\r\n        defaultChecked={defaultChecked}\r\n        disabled={disabled}\r\n        required={required}\r\n        className={cls}\r\n        onChange={(e) => onChange?.(e.target.checked)}\r\n        onFocus={onFocus}\r\n        onBlur={onBlur}\r\n        aria-label={ariaLabel}\r\n        aria-labelledby={ariaLabelledby}\r\n        aria-describedby={ariaDescribedby}\r\n      />\r\n      {label && (\r\n        <label htmlFor={id} className=\"dyn-checkbox__label\">\r\n          {label}\r\n        </label>\r\n      )}\r\n    </div>\r\n  )\r\n}","import { useState, useCallback } from 'react'\r\n\r\n/**\r\n * Options for useControlled hook\r\n */\r\nexport interface UseControlledOptions<T> {\r\n  /** Controlled value */\r\n  value?: T\r\n  /** Default value for uncontrolled mode */\r\n  defaultValue?: T\r\n  /** Change handler */\r\n  onChange?: (value: T) => void\r\n}\r\n\r\n/**\r\n * Return type for useControlled hook\r\n */\r\nexport interface UseControlledReturn<T> {\r\n  /** Current value (controlled or internal state) */\r\n  value: T\r\n  /** Function to update the value */\r\n  setValue: (value: T) => void\r\n  /** Whether component is in controlled mode */\r\n  isControlled: boolean\r\n}\r\n\r\n/**\r\n * Standard controlled/uncontrolled form control hook\r\n * \r\n * This hook implements the canonical pattern for all form components:\r\n * - If `value` prop is provided, component is controlled\r\n * - If only `defaultValue` is provided, component is uncontrolled\r\n * - onChange is called in both modes when value changes\r\n * \r\n * Usage in components:\r\n * ```ts\r\n * function DynInput({ value, defaultValue, onChange, ...props }) {\r\n *   const { value: current, setValue } = useControlled({ value, defaultValue, onChange })\r\n *   \r\n *   return (\r\n *     <input \r\n *       value={current} \r\n *       onChange={(e) => setValue(e.target.value)}\r\n *       {...props}\r\n *     />\r\n *   )\r\n * }\r\n * ```\r\n * \r\n * @param options - Control options with value, defaultValue, and onChange\r\n * @returns Object with current value and setValue function\r\n */\r\nexport function useControlled<T>(\r\n  options: UseControlledOptions<T>\r\n): UseControlledReturn<T> {\r\n  const { value, defaultValue, onChange } = options\r\n  \r\n  const [internalValue, setInternalValue] = useState<T>(defaultValue as T)\r\n  const isControlled = value !== undefined\r\n  \r\n  const currentValue = isControlled ? value : internalValue\r\n  \r\n  const setValue = useCallback(\r\n    (newValue: T) => {\r\n      // Update internal state only if uncontrolled\r\n      if (!isControlled) {\r\n        setInternalValue(newValue)\r\n      }\r\n      \r\n      // Always call onChange if provided\r\n      onChange?.(newValue)\r\n    },\r\n    [isControlled, onChange]\r\n  )\r\n  \r\n  return {\r\n    value: currentValue,\r\n    setValue,\r\n    isControlled\r\n  }\r\n}","import { useCallback, useEffect } from 'react'\r\n\r\nexport interface UseKeyboardOptions {\r\n  enabled?: boolean\r\n  preventDefault?: boolean\r\n  stopPropagation?: boolean\r\n}\r\n\r\nexport function useKeyboard(\r\n  key: string | string[],\r\n  callback: (event: KeyboardEvent) => void,\r\n  { enabled = true, preventDefault = false, stopPropagation = false }: UseKeyboardOptions = {}\r\n) {\r\n  const handleKeyPress = useCallback(\r\n    (event: KeyboardEvent) => {\r\n      const keys = Array.isArray(key) ? key : [key]\r\n      \r\n      if (!keys.includes(event.key)) return\r\n      \r\n      if (preventDefault) event.preventDefault()\r\n      if (stopPropagation) event.stopPropagation()\r\n      \r\n      callback(event)\r\n    },\r\n    [key, callback, preventDefault, stopPropagation]\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (!enabled) return\r\n\r\n    document.addEventListener('keydown', handleKeyPress)\r\n    return () => document.removeEventListener('keydown', handleKeyPress)\r\n  }, [enabled, handleKeyPress])\r\n}","import { forwardRef, useImperativeHandle, useRef, useState } from 'react'\r\nimport type { \r\n  DynSelectProps, \r\n  DynSelectOptionProps, \r\n  DynSelectRef, \r\n  SelectOption \r\n} from '../types/components/dyn-select.types'\r\nimport { useControlled } from '../hooks/use-controlled'\r\nimport { useKeyboard } from '../hooks/use-keyboard'\r\nimport { classNames } from '../utils'\r\n\r\n/**\r\n * DynSelect - Advanced dropdown selection component\r\n * \r\n * Features:\r\n * - Controlled/uncontrolled state management\r\n * - Searchable with live filtering\r\n * - Single and multiple selection modes\r\n * - Keyboard navigation (Arrow Up/Down, Enter, Escape)\r\n * - Mini API through ref (focus/blur/open/close/clear)\r\n * - Complete ARIA combobox pattern\r\n * - Support for both options prop and children\r\n */\r\nexport const DynSelect = forwardRef<DynSelectRef, DynSelectProps>(\r\n  (\r\n    {\r\n      id,\r\n      name,\r\n      value,\r\n      defaultValue,\r\n      onChange,\r\n      disabled = false,\r\n      required = false,\r\n      placeholder,\r\n      size = 'md',\r\n      variant = 'outline',\r\n      multiple = false,\r\n      searchable = false,\r\n      options,\r\n      children,\r\n      open: controlledOpen,\r\n      onOpenChange,\r\n      'aria-label': ariaLabel,\r\n      'aria-labelledby': ariaLabelledby,\r\n      'aria-describedby': ariaDescribedby,\r\n      'data-testid': dataTestId,\r\n      'data-state': dataState\r\n    },\r\n    ref\r\n  ) => {\r\n    const triggerRef = useRef<HTMLButtonElement>(null)\r\n    const listboxRef = useRef<HTMLUListElement>(null)\r\n    \r\n    // Controlled/uncontrolled patterns\r\n    const { value: currentValue, setValue } = useControlled({\r\n      value: multiple ? (value as string[]) : (value as string),\r\n      defaultValue: multiple ? (defaultValue as string[]) : (defaultValue as string),\r\n      onChange\r\n    })\r\n    \r\n    const { value: isOpen, setValue: setIsOpen } = useControlled({\r\n      value: controlledOpen,\r\n      defaultValue: false,\r\n      onChange: onOpenChange\r\n    })\r\n    \r\n    const [searchQuery, setSearchQuery] = useState('')\r\n    const [focusedIndex, setFocusedIndex] = useState(-1)\r\n    \r\n    // Process options from props or children\r\n    const processedOptions: SelectOption[] = options || []\r\n    \r\n    // Filter options if searchable\r\n    const filteredOptions = searchable \r\n      ? processedOptions.filter(opt => \r\n          opt.label.toLowerCase().includes(searchQuery.toLowerCase())\r\n        )\r\n      : processedOptions\r\n    \r\n    // Mini API implementation\r\n    useImperativeHandle(ref, () => ({\r\n      focus: () => triggerRef.current?.focus(),\r\n      blur: () => triggerRef.current?.blur(),\r\n      open: () => setIsOpen(true),\r\n      close: () => setIsOpen(false),\r\n      clear: () => setValue(multiple ? [] : '')\r\n    }))\r\n    \r\n    // Keyboard navigation\r\n    useKeyboard('Escape', () => {\r\n      if (isOpen) {\r\n        setIsOpen(false)\r\n        triggerRef.current?.focus()\r\n      }\r\n    }, { enabled: isOpen })\r\n    \r\n    useKeyboard('ArrowDown', (e) => {\r\n      e.preventDefault()\r\n      if (!isOpen) {\r\n        setIsOpen(true)\r\n      } else {\r\n        setFocusedIndex(prev => \r\n          prev < filteredOptions.length - 1 ? prev + 1 : 0\r\n        )\r\n      }\r\n    })\r\n    \r\n    useKeyboard('ArrowUp', (e) => {\r\n      e.preventDefault()\r\n      if (isOpen) {\r\n        setFocusedIndex(prev => \r\n          prev > 0 ? prev - 1 : filteredOptions.length - 1\r\n        )\r\n      }\r\n    })\r\n    \r\n    useKeyboard('Enter', (e) => {\r\n      if (isOpen && focusedIndex >= 0) {\r\n        e.preventDefault()\r\n        const option = filteredOptions[focusedIndex]\r\n        handleOptionSelect(option.value)\r\n      }\r\n    })\r\n    \r\n    const handleOptionSelect = (optionValue: string) => {\r\n      if (multiple) {\r\n        const currentArray = Array.isArray(currentValue) ? currentValue : []\r\n        const newValue = currentArray.includes(optionValue)\r\n          ? currentArray.filter(v => v !== optionValue)\r\n          : [...currentArray, optionValue]\r\n        setValue(newValue)\r\n      } else {\r\n        setValue(optionValue)\r\n        setIsOpen(false)\r\n      }\r\n    }\r\n    \r\n    const handleTriggerClick = () => {\r\n      if (!disabled) {\r\n        setIsOpen(!isOpen)\r\n      }\r\n    }\r\n    \r\n    // Display value logic\r\n    const getDisplayValue = () => {\r\n      if (multiple && Array.isArray(currentValue)) {\r\n        const selected = processedOptions.filter(opt => currentValue.includes(opt.value))\r\n        return selected.length > 0 \r\n          ? `${selected.length} selected`\r\n          : placeholder || 'Select options...'\r\n      } else {\r\n        const selected = processedOptions.find(opt => opt.value === currentValue)\r\n        return selected?.label || placeholder || 'Select option...'\r\n      }\r\n    }\r\n    \r\n    const wrapperClasses = classNames(\r\n      'dyn-select-wrapper',\r\n      dataState && `dyn-select-wrapper--${dataState}`\r\n    )\r\n    \r\n    const triggerClasses = classNames(\r\n      'dyn-select-trigger',\r\n      `dyn-select-trigger--${size}`,\r\n      `dyn-select-trigger--${variant}`,\r\n      disabled && 'dyn-select-trigger--disabled',\r\n      isOpen && 'dyn-select-trigger--open'\r\n    )\r\n    \r\n    const listboxClasses = classNames(\r\n      'dyn-select-listbox',\r\n      isOpen && 'dyn-select-listbox--open'\r\n    )\r\n    \r\n    return (\r\n      <div className={wrapperClasses} data-testid={dataTestId}>\r\n        <button\r\n          ref={triggerRef}\r\n          type=\"button\"\r\n          id={id}\r\n          disabled={disabled}\r\n          required={required}\r\n          className={triggerClasses}\r\n          onClick={handleTriggerClick}\r\n          aria-label={ariaLabel}\r\n          aria-labelledby={ariaLabelledby}\r\n          aria-describedby={ariaDescribedby}\r\n          aria-expanded={isOpen}\r\n          aria-haspopup=\"listbox\"\r\n          aria-invalid={dataState === 'error' ? 'true' : undefined}\r\n        >\r\n          {getDisplayValue()}\r\n          <span className=\"dyn-select-trigger__icon\" aria-hidden=\"true\">\r\n            ▼\r\n          </span>\r\n        </button>\r\n        \r\n        {isOpen && (\r\n          <div className=\"dyn-select-dropdown\">\r\n            {searchable && (\r\n              <input\r\n                type=\"text\"\r\n                className=\"dyn-select-search\"\r\n                placeholder=\"Search...\"\r\n                value={searchQuery}\r\n                onChange={(e) => setSearchQuery(e.target.value)}\r\n                autoFocus\r\n              />\r\n            )}\r\n            \r\n            <ul\r\n              ref={listboxRef}\r\n              className={listboxClasses}\r\n              role=\"listbox\"\r\n              aria-multiselectable={multiple}\r\n            >\r\n              {filteredOptions.map((option, index) => {\r\n                const isSelected = multiple \r\n                  ? Array.isArray(currentValue) && currentValue.includes(option.value)\r\n                  : currentValue === option.value\r\n                const isFocused = index === focusedIndex\r\n                \r\n                return (\r\n                  <li\r\n                    key={option.value}\r\n                    role=\"option\"\r\n                    className={classNames(\r\n                      'dyn-select-option',\r\n                      isSelected && 'dyn-select-option--selected',\r\n                      isFocused && 'dyn-select-option--focused',\r\n                      option.disabled && 'dyn-select-option--disabled'\r\n                    )}\r\n                    aria-selected={isSelected}\r\n                    aria-disabled={option.disabled}\r\n                    onClick={() => !option.disabled && handleOptionSelect(option.value)}\r\n                  >\r\n                    {option.label}\r\n                    {option.description && (\r\n                      <span className=\"dyn-select-option__description\">\r\n                        {option.description}\r\n                      </span>\r\n                    )}\r\n                  </li>\r\n                )\r\n              })}\r\n              \r\n              {filteredOptions.length === 0 && (\r\n                <li className=\"dyn-select-option dyn-select-option--empty\">\r\n                  No options found\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        )}\r\n        \r\n        {/* Hidden input for form submission */}\r\n        <input\r\n          type=\"hidden\"\r\n          name={name}\r\n          value={multiple ? JSON.stringify(currentValue) : (currentValue as string) || ''}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n)\r\n\r\nDynSelect.displayName = 'DynSelect'\r\n\r\n/**\r\n * DynSelectOption - Individual option component for children pattern\r\n */\r\nexport function DynSelectOption({\r\n  value,\r\n  disabled = false,\r\n  children,\r\n  description\r\n}: DynSelectOptionProps) {\r\n  // This is used when DynSelect receives children instead of options prop\r\n  // The parent DynSelect will process these children to build the options array\r\n  return null // This component is used for type checking and API consistency\r\n}\r\n\r\nDynSelectOption.displayName = 'DynSelectOption'","import { forwardRef } from 'react'\r\nimport type { DynTextAreaProps } from '../types/components/dyn-textarea.types'\r\nimport { useControlled } from '../hooks/use-controlled'\r\nimport { classNames } from '../utils'\r\n\r\n/**\r\n * DynTextArea - Multi-line text input component\r\n */\r\nexport const DynTextArea = forwardRef<HTMLTextAreaElement, DynTextAreaProps>(\r\n  (\r\n    {\r\n      id,\r\n      name,\r\n      value,\r\n      defaultValue,\r\n      onChange,\r\n      disabled = false,\r\n      required = false,\r\n      readonly = false,\r\n      placeholder,\r\n      rows = 3,\r\n      cols,\r\n      resize = 'vertical',\r\n      size = 'md',\r\n      variant = 'outline',\r\n      onFocus,\r\n      onBlur,\r\n      'aria-label': ariaLabel,\r\n      'aria-labelledby': ariaLabelledby,\r\n      'aria-describedby': ariaDescribedby,\r\n      'data-testid': dataTestId,\r\n      'data-state': dataState\r\n    },\r\n    ref\r\n  ) => {\r\n    const { value: currentValue, setValue } = useControlled({ value, defaultValue, onChange })\r\n\r\n    const textareaClasses = classNames(\r\n      'dyn-textarea',\r\n      `dyn-textarea--${size}`,\r\n      `dyn-textarea--${variant}`,\r\n      `dyn-textarea--resize-${resize}`,\r\n      disabled && 'dyn-textarea--disabled',\r\n      readonly && 'dyn-textarea--readonly',\r\n      required && 'dyn-textarea--required'\r\n    )\r\n\r\n    const wrapperClasses = classNames(\r\n      'dyn-textarea-wrapper',\r\n      dataState && `dyn-textarea-wrapper--${dataState}`\r\n    )\r\n\r\n    return (\r\n      <div className={wrapperClasses} data-testid={dataTestId}>\r\n        <textarea\r\n          ref={ref}\r\n          id={id}\r\n          name={name}\r\n          value={currentValue ?? ''}\r\n          placeholder={placeholder}\r\n          rows={rows}\r\n          cols={cols}\r\n          disabled={disabled}\r\n          required={required}\r\n          readOnly={readonly}\r\n          className={textareaClasses}\r\n          onChange={(e) => setValue(e.target.value)}\r\n          onFocus={onFocus}\r\n          onBlur={onBlur}\r\n          aria-label={ariaLabel}\r\n          aria-labelledby={ariaLabelledby}\r\n          aria-describedby={ariaDescribedby}\r\n          aria-invalid={dataState === 'error' ? 'true' : undefined}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n)\r\n\r\nDynTextArea.displayName = 'DynTextArea'\r\n","import React, { forwardRef } from 'react';\r\nimport type { DynRadioGroupProps, DynRadioProps } from '../types/components/dyn-radio.types';\r\nimport { useArrowNavigation } from '../hooks/use-arrow-navigation';\r\nimport { classNames } from '../utils';\r\n\r\nexport const DynRadio = forwardRef<HTMLInputElement, DynRadioProps>(\r\n  ({\r\n    value,\r\n    name,\r\n    checked,\r\n    defaultChecked,\r\n    disabled = false,\r\n    children,\r\n    className,\r\n    onChange,\r\n    'aria-label': ariaLabel,\r\n    'aria-labelledby': ariaLabelledBy,\r\n    'aria-describedby': ariaDescribedBy,\r\n    'data-testid': testId,\r\n    size,\r\n    ...props\r\n  }, ref) => {\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      if (disabled) return;\r\n      onChange?.(event.target.value, event);\r\n    };\r\n\r\n    // Omit size to avoid HTML input size conflict\r\n    const { size: _, ...inputProps } = props as any;\r\n\r\n    return (\r\n      <label \r\n        className={classNames(\r\n          'dyn-radio',\r\n          size && `dyn-radio--${size}`,\r\n          disabled && 'dyn-radio--disabled',\r\n          className\r\n        )}\r\n      >\r\n        <input\r\n          {...inputProps}\r\n          ref={ref}\r\n          type=\"radio\"\r\n          value={value}\r\n          name={name}\r\n          checked={checked}\r\n          defaultChecked={defaultChecked}\r\n          disabled={disabled}\r\n          onChange={handleChange}\r\n          aria-label={ariaLabel}\r\n          aria-labelledby={ariaLabelledBy}\r\n          aria-describedby={ariaDescribedBy}\r\n          data-testid={testId}\r\n          className=\"dyn-radio__input\"\r\n        />\r\n        <span className=\"dyn-radio__indicator\" />\r\n        {children && (\r\n          <span className=\"dyn-radio__label\">\r\n            {children}\r\n          </span>\r\n        )}\r\n      </label>\r\n    );\r\n  }\r\n);\r\n\r\nDynRadio.displayName = 'DynRadio';\r\n\r\nexport const DynRadioGroup = forwardRef<HTMLDivElement, DynRadioGroupProps>(\r\n  ({\r\n    value,\r\n    defaultValue,\r\n    name,\r\n    disabled = false,\r\n    orientation = 'vertical',\r\n    children,\r\n    className,\r\n    onChange,\r\n    'aria-label': ariaLabel,\r\n    'aria-labelledby': ariaLabelledBy,\r\n    'aria-describedby': ariaDescribedBy,\r\n    'data-testid': testId,\r\n    ...props\r\n  }, ref) => {\r\n    const { containerRef } = useArrowNavigation({\r\n      orientation,\r\n      selector: 'input[type=\"radio\"]:not(:disabled)'\r\n    });\r\n\r\n    const handleChange = (selectedValue: string, event: React.ChangeEvent<HTMLInputElement>) => {\r\n      if (disabled) return;\r\n      onChange?.(selectedValue, event);\r\n    };\r\n\r\n    return (\r\n      <div\r\n        {...props}\r\n        ref={ref || (containerRef as React.RefObject<HTMLDivElement>)}\r\n        role=\"radiogroup\"\r\n        aria-label={ariaLabel}\r\n        aria-labelledby={ariaLabelledBy}\r\n        aria-describedby={ariaDescribedBy}\r\n        data-testid={testId}\r\n        className={classNames(\r\n          'dyn-radio-group',\r\n          `dyn-radio-group--${orientation}`,\r\n          disabled && 'dyn-radio-group--disabled',\r\n          className\r\n        )}\r\n      >\r\n        {React.Children.map(children, (child, index) => {\r\n          if (React.isValidElement<DynRadioProps>(child) && child.type === DynRadio) {\r\n            const childProps: Partial<DynRadioProps> = {\r\n              ...child.props,\r\n              name: name || `radio-group-${Math.random().toString(36).substr(2, 9)}`,\r\n              checked: value !== undefined ? child.props.value === value : undefined,\r\n              defaultChecked: defaultValue !== undefined ? child.props.value === defaultValue : undefined,\r\n              disabled: disabled || child.props.disabled || undefined,\r\n              onChange: handleChange,\r\n              key: child.props.value || index\r\n            };\r\n            return React.cloneElement(child, childProps);\r\n          }\r\n          return child;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nDynRadioGroup.displayName = 'DynRadioGroup';","import type { DynAvatarProps } from '../types/components/dyn-avatar.types'\r\nimport { classNames, generateInitials } from '../utils'\r\n\r\nexport function DynAvatar({\r\n  children,\r\n  variant = 'solid',\r\n  size = 'md',\r\n  color = 'neutral',\r\n  src,\r\n  alt,\r\n  'aria-label': ariaLabel,\r\n  'data-testid': dataTestId\r\n}: DynAvatarProps) {\r\n  const cls = classNames(\r\n    'dyn-avatar',\r\n    `dyn-avatar--${variant}`,\r\n    `dyn-avatar--${size}`,\r\n    `dyn-avatar--${color}`\r\n  )\r\n\r\n  const content = src ? (\r\n    <img src={src} alt={alt || ''} className=\"dyn-avatar__image\" />\r\n  ) : children ? (\r\n    typeof children === 'string' ? generateInitials(children) : children\r\n  ) : null\r\n\r\n  return (\r\n    <div\r\n      className={cls}\r\n      role=\"img\"\r\n      aria-label={ariaLabel || alt}\r\n      data-testid={dataTestId}\r\n    >\r\n      {content}\r\n    </div>\r\n  )\r\n}","import type { DynBadgeProps } from '../types/components/dyn-badge.types'\r\nimport { classNames } from '../utils'\r\n\r\nexport function DynBadge({\r\n  children,\r\n  variant = 'solid',\r\n  size = 'md',\r\n  color = 'neutral',\r\n  'aria-label': ariaLabel,\r\n  'data-testid': dataTestId\r\n}: DynBadgeProps) {\r\n  const cls = classNames(\r\n    'dyn-badge',\r\n    `dyn-badge--${variant}`,\r\n    `dyn-badge--${size}`,\r\n    `dyn-badge--${color}`\r\n  )\r\n\r\n  return (\r\n    <span\r\n      className={cls}\r\n      aria-label={ariaLabel}\r\n      data-testid={dataTestId}\r\n    >\r\n      {children}\r\n    </span>\r\n  )\r\n}","import { forwardRef, useState } from 'react';\r\nimport type { DynTableProps, DynTableSort } from '../types/components/dyn-table.types';\r\nimport { useArrowNavigation } from '../hooks/use-arrow-navigation';\r\nimport { classNames } from '../utils';\r\n\r\nexport const DynTable = forwardRef<HTMLTableElement, DynTableProps>(\r\n  ({\r\n    columns,\r\n    data,\r\n    sortable = false,\r\n    onSort,\r\n    className,\r\n    'data-testid': testId,\r\n    ...props\r\n  }, ref) => {\r\n    const [sortState, setSortState] = useState<DynTableSort | null>(null);\r\n    \r\n    const handleSort = (columnKey: string) => {\r\n      if (!sortable || !onSort) return;\r\n      \r\n      const newDirection = \r\n        sortState?.column === columnKey && sortState.direction === 'asc'\r\n          ? 'desc' as const\r\n          : 'asc' as const;\r\n      \r\n      const newSortState = { column: columnKey, direction: newDirection };\r\n      setSortState(newSortState);\r\n      onSort(columnKey, newDirection);\r\n    };\r\n\r\n    const getAriaSort = (columnKey: string): 'none' | 'ascending' | 'descending' => {\r\n      if (sortState?.column !== columnKey) return 'none';\r\n      return sortState.direction === 'asc' ? 'ascending' : 'descending';\r\n    };\r\n\r\n    const { containerRef } = useArrowNavigation({\r\n      orientation: 'vertical',\r\n      selector: 'tbody tr[tabindex=\"0\"]'\r\n    });\r\n\r\n    return (\r\n      <div ref={containerRef as React.RefObject<HTMLDivElement>} className={classNames('dyn-table-container', className)}>\r\n        <table\r\n          {...props}\r\n          ref={ref}\r\n          className=\"dyn-table\"\r\n          data-testid={testId}\r\n          role=\"table\"\r\n        >\r\n          <thead>\r\n            <tr role=\"row\">\r\n              {columns.map((column) => (\r\n                <th\r\n                  key={column.key}\r\n                  role=\"columnheader\"\r\n                  aria-sort={getAriaSort(column.key)}\r\n                  className={classNames(\r\n                    'dyn-table__header',\r\n                    sortable && column.sortable && 'dyn-table__header--sortable'\r\n                  )}\r\n                  onClick={sortable && column.sortable ? () => handleSort(column.key) : undefined}\r\n                  tabIndex={sortable && column.sortable ? 0 : -1}\r\n                  onKeyDown={(e) => {\r\n                    if ((e.key === 'Enter' || e.key === ' ') && sortable && column.sortable) {\r\n                      e.preventDefault();\r\n                      handleSort(column.key);\r\n                    }\r\n                  }}\r\n                >\r\n                  {column.label}\r\n                  {sortable && column.sortable && sortState?.column === column.key && (\r\n                    <span className=\"dyn-table__sort-indicator\">\r\n                      {sortState.direction === 'asc' ? '↑' : '↓'}\r\n                    </span>\r\n                  )}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((row, rowIndex) => (\r\n              <tr\r\n                key={rowIndex}\r\n                role=\"row\"\r\n                tabIndex={0}\r\n                className=\"dyn-table__row\"\r\n              >\r\n                {columns.map((column) => (\r\n                  <td\r\n                    key={column.key}\r\n                    role=\"cell\"\r\n                    className=\"dyn-table__cell\"\r\n                  >\r\n                    {row[column.key]}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nDynTable.displayName = 'DynTable';","import type React from 'react'\r\nexport const DynIcon: React.FC = () => null\r\n","import type { DynBoxProps } from '../types/components/dyn-box.types'\r\nimport { classNames, getSpacingStyles } from '../utils'\r\n\r\nexport function DynBox({\r\n  as: As = 'div',\r\n  children,\r\n  p,\r\n  m,\r\n  gap,\r\n  className,\r\n  'data-testid': dataTestId,\r\n  ...props\r\n}: DynBoxProps) {\r\n  const cls = classNames('dyn-box', className)\r\n  const styles = getSpacingStyles({ p, m, gap })\r\n\r\n  return (\r\n    <As\r\n      className={cls}\r\n      style={styles}\r\n      data-testid={dataTestId}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </As>\r\n  )\r\n}","import type { DynContainerProps } from '../types/components/dyn-container.types'\r\nimport { classNames } from '../utils'\r\n\r\nexport function DynContainer({\r\n  as: As = 'div',\r\n  children,\r\n  maxWidth = 'lg',\r\n  centered = true,\r\n  fluid = false,\r\n  className,\r\n  'data-testid': dataTestId,\r\n  ...props\r\n}: DynContainerProps) {\r\n  const cls = classNames(\r\n    'dyn-container',\r\n    !fluid && `dyn-container--max-${maxWidth}`,\r\n    centered && 'dyn-container--centered',\r\n    fluid && 'dyn-container--fluid',\r\n    className\r\n  )\r\n\r\n  return (\r\n    <As\r\n      className={cls}\r\n      data-testid={dataTestId}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </As>\r\n  )\r\n}","import { forwardRef } from 'react';\r\nimport type { DynGridProps, DynGridItemProps } from '../types/components/dyn-grid.types';\r\nimport { getSpacingStyles, classNames } from '../utils';\r\n\r\nexport const DynGrid = forwardRef<HTMLDivElement, DynGridProps>(\r\n  ({ \r\n    columns,\r\n    rows,\r\n    gap,\r\n    children,\r\n    className,\r\n    style,\r\n    'data-testid': testId,\r\n    ...props \r\n  }, ref) => {\r\n    // Filter out undefined values for exactOptionalPropertyTypes\r\n    const spacingArgs: { gap?: number | string } = {};\r\n    if (gap !== undefined) spacingArgs.gap = gap;\r\n    \r\n    const spacingStyles = getSpacingStyles(spacingArgs);\r\n\r\n    const combinedStyle = {\r\n      ...spacingStyles,\r\n      gridTemplateColumns: columns ? \r\n        (typeof columns === 'number' ? `repeat(${columns}, 1fr)` : columns) : undefined,\r\n      gridTemplateRows: rows && Number(rows) > 0 ? \r\n        (typeof rows === 'number' ? `repeat(${rows}, 1fr)` : rows) : undefined,\r\n      ...style\r\n    };\r\n\r\n    return (\r\n      <div\r\n        {...props}\r\n        ref={ref}\r\n        className={classNames(\r\n          'dyn-grid',\r\n          columns && Number(columns) > 0 && `dyn-grid--columns-${columns}`,\r\n          rows && Number(rows) > 0 && `dyn-grid--rows-${rows}`,\r\n          className\r\n        )}\r\n        style={combinedStyle}\r\n        data-testid={testId}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nDynGrid.displayName = 'DynGrid';\r\n\r\nexport const DynGridItem = forwardRef<HTMLDivElement, DynGridItemProps>(\r\n  ({ \r\n    colSpan,\r\n    rowSpan,\r\n    children,\r\n    className,\r\n    'data-testid': testId,\r\n    ...props \r\n  }, ref) => {\r\n    return (\r\n      <div\r\n        {...props}\r\n        ref={ref}\r\n        className={classNames(\r\n          'dyn-grid-item',\r\n          colSpan && Number(colSpan) > 0 && `dyn-grid-item--col-span-${colSpan}`,\r\n          rowSpan && Number(rowSpan) > 0 && `dyn-grid-item--row-span-${rowSpan}`,\r\n          className\r\n        )}\r\n        style={{\r\n          gridColumn: colSpan && Number(colSpan) > 0 ? `span ${colSpan}` : undefined,\r\n          gridRow: rowSpan && Number(rowSpan) > 0 ? `span ${rowSpan}` : undefined\r\n        }}\r\n        data-testid={testId}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nDynGridItem.displayName = 'DynGridItem';","import type React from 'react'\r\nexport const DynFieldContainer: React.FC<{children?: React.ReactNode}> = ({ children }) => <>{children}</>\r\n","import type { DynDividerProps } from '../types/components/dyn-divider.types'\r\nimport { classNames } from '../utils'\r\n\r\nexport function DynDivider({\r\n  orientation = 'horizontal',\r\n  variant = 'solid',\r\n  size = 'md',\r\n  label,\r\n  'aria-label': ariaLabel,\r\n  'data-testid': dataTestId\r\n}: DynDividerProps) {\r\n  const cls = classNames(\r\n    'dyn-divider',\r\n    `dyn-divider--${orientation}`,\r\n    `dyn-divider--${variant}`,\r\n    `dyn-divider--${size}`,\r\n    label && 'dyn-divider--with-label'\r\n  )\r\n\r\n  return (\r\n    <div\r\n      className={cls}\r\n      role=\"separator\"\r\n      aria-orientation={orientation}\r\n      aria-label={ariaLabel}\r\n      data-testid={dataTestId}\r\n    >\r\n      {label && (\r\n        <span className=\"dyn-divider__label\">{label}</span>\r\n      )}\r\n    </div>\r\n  )\r\n}","import { useEffect, useRef } from 'react'\r\n\r\ninterface UseFocusTrapOptions {\r\n  enabled?: boolean\r\n  initialFocus?: boolean\r\n  returnFocus?: boolean\r\n}\r\n\r\nconst FOCUSABLE_SELECTOR = [\r\n  'button:not([disabled])',\r\n  '[href]',\r\n  'input:not([disabled])',\r\n  'select:not([disabled])',\r\n  'textarea:not([disabled])',\r\n  '[tabindex]:not([tabindex=\"-1\"])'\r\n].join(', ')\r\n\r\nexport function useFocusTrap({\r\n  enabled = true,\r\n  initialFocus = true,\r\n  returnFocus = true\r\n}: UseFocusTrapOptions = {}) {\r\n  const containerRef = useRef<HTMLElement>(null)\r\n  const previousFocusRef = useRef<HTMLElement | null>(null)\r\n\r\n  useEffect(() => {\r\n    if (!enabled || !containerRef.current) return\r\n\r\n    const container = containerRef.current\r\n    previousFocusRef.current = document.activeElement as HTMLElement\r\n\r\n    const focusableElements = container.querySelectorAll(FOCUSABLE_SELECTOR) as NodeListOf<HTMLElement>\r\n    const firstFocusable = focusableElements[0]\r\n    const lastFocusable = focusableElements[focusableElements.length - 1]\r\n\r\n    if (initialFocus && firstFocusable) {\r\n      firstFocusable.focus()\r\n    }\r\n\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n      if (e.key !== 'Tab') return\r\n\r\n      if (e.shiftKey) {\r\n        if (document.activeElement === firstFocusable) {\r\n          e.preventDefault()\r\n          lastFocusable?.focus()\r\n        }\r\n      } else {\r\n        if (document.activeElement === lastFocusable) {\r\n          e.preventDefault()\r\n          firstFocusable?.focus()\r\n        }\r\n      }\r\n    }\r\n\r\n    container.addEventListener('keydown', handleKeyDown)\r\n\r\n    return () => {\r\n      container.removeEventListener('keydown', handleKeyDown)\r\n      if (returnFocus && previousFocusRef.current) {\r\n        previousFocusRef.current.focus()\r\n      }\r\n    }\r\n  }, [enabled, initialFocus, returnFocus])\r\n\r\n  return containerRef\r\n}","import { useCallback, useEffect, useRef, useState } from 'react'\r\n\r\nexport interface UseDropdownOptions {\r\n  closeOnClickOutside?: boolean\r\n  closeOnEscape?: boolean\r\n}\r\n\r\nexport function useDropdown({\r\n  closeOnClickOutside = true,\r\n  closeOnEscape = true\r\n}: UseDropdownOptions = {}) {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const containerRef = useRef<HTMLElement>(null)\r\n\r\n  const open = useCallback(() => setIsOpen(true), [])\r\n  const close = useCallback(() => setIsOpen(false), [])\r\n  const toggle = useCallback(() => setIsOpen(prev => !prev), [])\r\n\r\n  useEffect(() => {\r\n    if (!isOpen) return\r\n\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (!closeOnClickOutside) return\r\n      \r\n      if (containerRef.current && !containerRef.current.contains(event.target as Node)) {\r\n        close()\r\n      }\r\n    }\r\n\r\n    const handleEscape = (event: KeyboardEvent) => {\r\n      if (!closeOnEscape) return\r\n      \r\n      if (event.key === 'Escape') {\r\n        close()\r\n      }\r\n    }\r\n\r\n    document.addEventListener('mousedown', handleClickOutside)\r\n    document.addEventListener('keydown', handleEscape)\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside)\r\n      document.removeEventListener('keydown', handleEscape)\r\n    }\r\n  }, [isOpen, close, closeOnClickOutside, closeOnEscape])\r\n\r\n  return {\r\n    isOpen,\r\n    open,\r\n    close,\r\n    toggle,\r\n    containerRef\r\n  }\r\n}","import { useCallback, useEffect, useRef, useState } from 'react'\r\n\r\nexport interface UseTooltipOptions {\r\n  placement?: 'top' | 'bottom' | 'left' | 'right'\r\n  delay?: number\r\n  hideDelay?: number\r\n}\r\n\r\nexport interface TooltipPosition {\r\n  x: number\r\n  y: number\r\n  placement: string\r\n}\r\n\r\nexport function useTooltip({\r\n  placement = 'top',\r\n  delay = 500,\r\n  hideDelay = 0\r\n}: UseTooltipOptions = {}) {\r\n  const [isVisible, setIsVisible] = useState(false)\r\n  const [position, setPosition] = useState<TooltipPosition>({ x: 0, y: 0, placement })\r\n  const triggerRef = useRef<HTMLElement | null>(null)\r\n  const timeoutRef = useRef<ReturnType<typeof setTimeout> | null>(null)\r\n  const hideTimeoutRef = useRef<ReturnType<typeof setTimeout> | null>(null)\r\n\r\n  const calculatePosition = useCallback(() => {\r\n    if (!triggerRef.current) return\r\n\r\n    const rect = triggerRef.current.getBoundingClientRect()\r\n    const scrollX = window.scrollX\r\n    const scrollY = window.scrollY\r\n\r\n    let x = 0\r\n    let y = 0\r\n\r\n    switch (placement) {\r\n      case 'top':\r\n        x = rect.left + rect.width / 2 + scrollX\r\n        y = rect.top + scrollY\r\n        break\r\n      case 'bottom':\r\n        x = rect.left + rect.width / 2 + scrollX\r\n        y = rect.bottom + scrollY\r\n        break\r\n      case 'left':\r\n        x = rect.left + scrollX\r\n        y = rect.top + rect.height / 2 + scrollY\r\n        break\r\n      case 'right':\r\n        x = rect.right + scrollX\r\n        y = rect.top + rect.height / 2 + scrollY\r\n        break\r\n    }\r\n\r\n    setPosition({ x, y, placement })\r\n  }, [placement])\r\n\r\n  const show = useCallback(() => {\r\n    if (hideTimeoutRef.current) {\r\n      clearTimeout(hideTimeoutRef.current)\r\n    }\r\n    \r\n    timeoutRef.current = setTimeout(() => {\r\n      calculatePosition()\r\n      setIsVisible(true)\r\n    }, delay)\r\n  }, [calculatePosition, delay])\r\n\r\n  const hide = useCallback(() => {\r\n    if (timeoutRef.current) {\r\n      clearTimeout(timeoutRef.current)\r\n      timeoutRef.current = null\r\n    }\r\n\r\n    if (hideDelay > 0) {\r\n      hideTimeoutRef.current = setTimeout(() => {\r\n        setIsVisible(false)\r\n        hideTimeoutRef.current = null\r\n      }, hideDelay)\r\n    } else {\r\n      setIsVisible(false)\r\n    }\r\n  }, [hideDelay])\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (timeoutRef.current) {\r\n        clearTimeout(timeoutRef.current)\r\n        timeoutRef.current = null\r\n      }\r\n      if (hideTimeoutRef.current) {\r\n        clearTimeout(hideTimeoutRef.current)\r\n        hideTimeoutRef.current = null\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  return {\r\n    isVisible,\r\n    position,\r\n    show,\r\n    hide,\r\n    triggerRef\r\n  }\r\n}","import type { DynModalProps } from '../types/components/dyn-modal.types'\r\nimport { classNames } from '../utils'\r\nimport { useFocusTrap } from '../hooks'\r\nimport { useEffect } from 'react'\r\n\r\nexport function DynModal({\r\n  children,\r\n  isOpen,\r\n  onClose,\r\n  size = 'md',\r\n  closeOnBackdropClick = true,\r\n  closeOnEscape = true,\r\n  'aria-label': ariaLabel,\r\n  'aria-labelledby': ariaLabelledby,\r\n  'aria-describedby': ariaDescribedby,\r\n  'data-testid': dataTestId\r\n}: DynModalProps) {\r\n  const focusTrapRef = useFocusTrap({ \r\n    enabled: isOpen,\r\n    returnFocus: true \r\n  })\r\n\r\n  useEffect(() => {\r\n    if (!isOpen || !closeOnEscape) return\r\n\r\n    const handleEscape = (e: KeyboardEvent) => {\r\n      if (e.key === 'Escape') {\r\n        onClose?.()\r\n      }\r\n    }\r\n\r\n    document.addEventListener('keydown', handleEscape)\r\n    return () => document.removeEventListener('keydown', handleEscape)\r\n  }, [isOpen, closeOnEscape, onClose])\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      document.body.style.overflow = 'hidden'\r\n    } else {\r\n      document.body.style.overflow = ''\r\n    }\r\n\r\n    return () => {\r\n      document.body.style.overflow = ''\r\n    }\r\n  }, [isOpen])\r\n\r\n  if (!isOpen) return null\r\n\r\n  const backdropCls = classNames('dyn-modal__backdrop')\r\n  const modalCls = classNames(\r\n    'dyn-modal',\r\n    `dyn-modal--${size}`\r\n  )\r\n\r\n  return (\r\n    <div \r\n      className={backdropCls}\r\n      onClick={closeOnBackdropClick ? onClose : undefined}\r\n      data-testid={dataTestId}\r\n    >\r\n      <div\r\n        ref={focusTrapRef}\r\n        className={modalCls}\r\n        role=\"dialog\"\r\n        aria-modal=\"true\"\r\n        aria-label={ariaLabel}\r\n        aria-labelledby={ariaLabelledby}\r\n        aria-describedby={ariaDescribedby}\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import type { DynBreadcrumbProps, DynBreadcrumbItemProps } from '../types/components/dyn-breadcrumb.types'\r\nimport { classNames } from '../utils'\r\n\r\nexport function DynBreadcrumb({\r\n  children,\r\n  separator = '/',\r\n  size = 'md',\r\n  'aria-label': ariaLabel = 'Breadcrumb',\r\n  'data-testid': dataTestId\r\n}: DynBreadcrumbProps) {\r\n  const cls = classNames(\r\n    'dyn-breadcrumb',\r\n    `dyn-breadcrumb--${size}`\r\n  )\r\n\r\n  return (\r\n    <nav\r\n      className={cls}\r\n      aria-label={ariaLabel}\r\n      data-testid={dataTestId}\r\n    >\r\n      <ol className=\"dyn-breadcrumb__list\">\r\n        {Array.isArray(children) \r\n          ? children.map((child, index) => (\r\n              <li key={index} className=\"dyn-breadcrumb__item\">\r\n                {child}\r\n                {index < children.length - 1 && (\r\n                  <span className=\"dyn-breadcrumb__separator\" aria-hidden=\"true\">\r\n                    {separator}\r\n                  </span>\r\n                )}\r\n              </li>\r\n            ))\r\n          : <li className=\"dyn-breadcrumb__item\">{children}</li>\r\n        }\r\n      </ol>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport function DynBreadcrumbItem({\r\n  as: As = 'span',\r\n  children,\r\n  href,\r\n  current = false,\r\n  disabled = false,\r\n  onClick,\r\n  'aria-current': ariaCurrent,\r\n  'data-testid': dataTestId\r\n}: DynBreadcrumbItemProps) {\r\n  const cls = classNames(\r\n    'dyn-breadcrumb-item',\r\n    current && 'dyn-breadcrumb-item--current',\r\n    disabled && 'dyn-breadcrumb-item--disabled'\r\n  )\r\n\r\n  const Component = href ? 'a' : As\r\n\r\n  return (\r\n    <Component\r\n      className={cls}\r\n      href={href}\r\n      onClick={onClick}\r\n      aria-current={current ? (ariaCurrent || 'page') : undefined}\r\n      data-testid={dataTestId}\r\n    >\r\n      {children}\r\n    </Component>\r\n  )\r\n}","import { forwardRef, useState } from 'react';\r\nimport type { DynTreeViewProps, DynTreeNodeProps, TreeNode } from '../types/components/dyn-tree.types';\r\nimport { classNames } from '../utils';\r\n\r\nexport const DynTreeView = forwardRef<HTMLDivElement, DynTreeViewProps>(\r\n  ({\r\n    data = [],\r\n    selectedNode,\r\n    expandedNodes = [],\r\n    onNodeSelect,\r\n    onNodeExpand,\r\n    multiSelect = false,\r\n    className,\r\n    'data-testid': testId,\r\n    ...props\r\n  }, ref) => {\r\n    const [internalExpanded, setInternalExpanded] = useState<string[]>(expandedNodes);\r\n    const [internalSelected, setInternalSelected] = useState<string[]>([]);\r\n\r\n    const handleToggle = (nodeId: string) => {\r\n      const newExpanded = internalExpanded.includes(nodeId)\r\n        ? internalExpanded.filter(id => id !== nodeId)\r\n        : [...internalExpanded, nodeId];\r\n      setInternalExpanded(newExpanded);\r\n      onNodeExpand?.(nodeId);\r\n    };\r\n\r\n    const handleSelect = (nodeId: string) => {\r\n      if (multiSelect) {\r\n        const newSelected = internalSelected.includes(nodeId)\r\n          ? internalSelected.filter(id => id !== nodeId)\r\n          : [...internalSelected, nodeId];\r\n        setInternalSelected(newSelected);\r\n      }\r\n      onNodeSelect?.(nodeId);\r\n    };\r\n\r\n    const renderNode = (node: TreeNode, level = 0): React.ReactNode => {\r\n      const isExpanded = internalExpanded.includes(node.id);\r\n      const isSelected = multiSelect \r\n        ? internalSelected.includes(node.id)\r\n        : selectedNode === node.id;\r\n      const hasChildren = node.children && node.children.length > 0;\r\n\r\n      return (\r\n        <div key={node.id}>\r\n          <DynTreeNode\r\n            node={node}\r\n            level={level}\r\n            expanded={isExpanded}\r\n            selected={isSelected}\r\n            hasChildren={hasChildren || undefined}\r\n            onToggle={hasChildren ? () => handleToggle(node.id) : undefined}\r\n            onSelect={() => handleSelect(node.id)}\r\n          />\r\n          {isExpanded && hasChildren && (\r\n            <div className=\"dyn-tree-view__children\">\r\n              {node.children?.map((childNode) => renderNode(childNode, level + 1))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div\r\n        {...props}\r\n        ref={ref}\r\n        role=\"tree\"\r\n        className={classNames('dyn-tree-view', className)}\r\n        data-testid={testId}\r\n      >\r\n        {data.map(node => renderNode(node))}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nDynTreeView.displayName = 'DynTreeView';\r\n\r\nexport const DynTreeNode = forwardRef<HTMLDivElement, DynTreeNodeProps>(\r\n  ({\r\n    node,\r\n    level = 0,\r\n    expanded,\r\n    selected,\r\n    hasChildren,\r\n    onToggle,\r\n    onSelect,\r\n    className,\r\n    ...props\r\n  }, ref) => {\r\n    if (!node) return null;\r\n\r\n    return (\r\n      <div\r\n        {...props}\r\n        ref={ref}\r\n        role=\"treeitem\"\r\n        aria-expanded={hasChildren ? expanded : undefined}\r\n        aria-selected={selected}\r\n        aria-level={level + 1}\r\n        tabIndex={0}\r\n        className={classNames(\r\n          'dyn-tree-node',\r\n          selected && 'dyn-tree-node--selected',\r\n          hasChildren && 'dyn-tree-node--expandable',\r\n          className\r\n        )}\r\n        style={{ paddingLeft: `${level * 20}px` }}\r\n        onClick={onSelect}\r\n      >\r\n        {hasChildren && (\r\n          <button\r\n            className=\"dyn-tree-node__toggle\"\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              onToggle?.();\r\n            }}\r\n            aria-label={expanded ? 'Collapse' : 'Expand'}\r\n          >\r\n            {expanded ? '▼' : '▶'}\r\n          </button>\r\n        )}\r\n        <span className=\"dyn-tree-node__label\">{node.label}</span>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nDynTreeNode.displayName = 'DynTreeNode';","import type { Theme } from './theme.types'\r\n\r\n/**\r\n * DynUI Default Theme Configuration\r\n * Based on modern design tokens and accessibility standards\r\n */\r\nexport const defaultTheme: Theme = {\r\n  colors: {\r\n    primary: {\r\n      50: '#eff6ff',\r\n      100: '#dbeafe',\r\n      500: '#3b82f6',\r\n      600: '#2563eb',\r\n      700: '#1d4ed8',\r\n      900: '#1e3a8a'\r\n    },\r\n    gray: {\r\n      50: '#f9fafb',\r\n      100: '#f3f4f6',\r\n      200: '#e5e7eb',\r\n      500: '#6b7280',\r\n      600: '#4b5563',\r\n      700: '#374151',\r\n      800: '#1f2937',\r\n      900: '#111827'\r\n    },\r\n    danger: {\r\n      50: '#fef2f2',\r\n      500: '#ef4444',\r\n      600: '#dc2626',\r\n      700: '#b91c1c'\r\n    },\r\n    success: {\r\n      50: '#f0fdf4',\r\n      500: '#22c55e',\r\n      600: '#16a34a',\r\n      700: '#15803d'\r\n    },\r\n    warning: {\r\n      50: '#fffbeb',\r\n      500: '#f59e0b',\r\n      600: '#d97706',\r\n      700: '#b45309'\r\n    }\r\n  },\r\n  spacing: {\r\n    xs: '0.25rem', // 4px\r\n    sm: '0.5rem',  // 8px\r\n    md: '1rem',    // 16px\r\n    lg: '1.5rem',  // 24px\r\n    xl: '2rem',    // 32px\r\n    '2xl': '3rem'  // 48px\r\n  },\r\n  typography: {\r\n    fontFamily: {\r\n      sans: ['Inter', 'system-ui', 'sans-serif'],\r\n      mono: ['Fira Code', 'Monaco', 'monospace']\r\n    },\r\n    fontSize: {\r\n      xs: ['0.75rem', { lineHeight: '1rem' }],\r\n      sm: ['0.875rem', { lineHeight: '1.25rem' }],\r\n      base: ['1rem', { lineHeight: '1.5rem' }],\r\n      lg: ['1.125rem', { lineHeight: '1.75rem' }],\r\n      xl: ['1.25rem', { lineHeight: '1.75rem' }],\r\n      '2xl': ['1.5rem', { lineHeight: '2rem' }]\r\n    }\r\n  },\r\n  borderRadius: {\r\n    sm: '0.125rem',\r\n    md: '0.375rem',\r\n    lg: '0.5rem',\r\n    full: '9999px'\r\n  },\r\n  shadow: {\r\n    sm: '0 1px 2px 0 rgb(0 0 0 / 0.05)',\r\n    md: '0 4px 6px -1px rgb(0 0 0 / 0.1)',\r\n    lg: '0 10px 15px -3px rgb(0 0 0 / 0.1)'\r\n  }\r\n}","import React, { createContext, ReactNode, useState } from 'react'\r\nimport type { Theme, ThemeContextType } from './theme.types'\r\nimport { defaultTheme } from './default-theme'\r\n\r\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined)\r\n\r\nexport interface ThemeProviderProps {\r\n  children: ReactNode\r\n  initialTheme?: Theme\r\n}\r\n\r\n/**\r\n * DynUI Theme Provider - Manages theme context for components\r\n * Provides theme tokens and theming capabilities throughout the component tree\r\n */\r\nexport function ThemeProvider({ children, initialTheme = defaultTheme }: ThemeProviderProps) {\r\n  const [theme, setTheme] = useState<Theme>(initialTheme)\r\n\r\n  const value: ThemeContextType = {\r\n    theme,\r\n    setTheme\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={value}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nexport { ThemeContext }","import { useContext } from 'react'\r\nimport { ThemeContext } from './theme-provider'\r\nimport type { ThemeContextType } from './theme.types'\r\n\r\n/**\r\n * Hook to access current theme context\r\n * @returns Current theme and setTheme function\r\n * @throws Error if used outside ThemeProvider\r\n */\r\nexport function useTheme(): ThemeContextType {\r\n  const context = useContext(ThemeContext)\r\n  \r\n  if (!context) {\r\n    throw new Error('useTheme must be used within a ThemeProvider')\r\n  }\r\n  \r\n  return context\r\n}","// DynUI Core Library - Complete Component Export\r\n// Migration from src/ to packages/core/src/ (FAZA 1 - KORAK 2)\r\n\r\n// Components\r\nexport * from './components'\r\n\r\n// Hooks  \r\nexport * from './hooks'\r\n\r\n// Types\r\nexport type * from './types/components'\r\nexport type * from './types/common.types'\r\n\r\n// Utils (without SpacingValue to avoid ambiguity)\r\nexport { classNames, getSpacingStyles } from './utils'\r\nexport type { StyleProps } from './utils/style-props'\r\n\r\n// Theme\r\nexport * from './theme'\r\n\r\n// Version info\r\nexport const DYNUI_VERSION = '1.0.0'"]}