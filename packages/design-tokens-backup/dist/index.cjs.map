{"version":3,"sources":["../src/colors.ts","../src/spacing.ts","../src/typography.ts","../src/radii.ts","../src/shadows.ts","../src/token-map.ts","../src/css-generator.ts"],"names":["cssVar"],"mappings":"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","file":"index.cjs","sourcesContent":["export const colors = {\r\n  primary: {\r\n    50: '#E7F1FF',\r\n    100: '#C7DFFF',\r\n    200: '#A5C9FF',\r\n    300: '#7FAEFF',\r\n    400: '#5A94FF',\r\n    500: '#3878FF',\r\n    600: '#1F5ED9',\r\n    700: '#0F47A8',\r\n    800: '#083079',\r\n    900: '#041B4D'\r\n  },\r\n  neutral: {\r\n    50: '#F7FAFC',\r\n    100: '#EDF2F7',\r\n    200: '#E2E8F0',\r\n    300: '#CBD5E0',\r\n    400: '#A0AEC0',\r\n    500: '#718096',\r\n    600: '#4A5568',\r\n    700: '#2D3748',\r\n    800: '#1A202C',\r\n    900: '#0F172A'\r\n  },\r\n  semantic: {\r\n    success: {\r\n      100: '#DEF7EC',\r\n      500: '#10B981',\r\n      700: '#047857'\r\n    },\r\n    warning: {\r\n      100: '#FEF3C7',\r\n      500: '#F59E0B',\r\n      700: '#B45309'\r\n    },\r\n    danger: {\r\n      100: '#FEE2E2',\r\n      500: '#EF4444',\r\n      700: '#B91C1C'\r\n    },\r\n    info: {\r\n      100: '#DBEAFE',\r\n      500: '#3B82F6',\r\n      700: '#1D4ED8'\r\n    }\r\n  }\r\n} as const\r\n\r\nexport type ColorScale = typeof colors.primary\r\nexport type NeutralScale = typeof colors.neutral\r\nexport type SemanticColorMap = typeof colors.semantic\r\nexport type Colors = typeof colors\r\n","const namedSpacing = {\r\n  none: '0rem',\r\n  xxs: '0.125rem',\r\n  xs: '0.25rem',\r\n  sm: '0.5rem',\r\n  md: '1rem',\r\n  lg: '1.5rem',\r\n  xl: '2rem',\r\n  '2xl': '3rem',\r\n  '3xl': '4rem'\r\n} as const\r\n\r\nconst legacySpacing = {\r\n  '0': namedSpacing.none,\r\n  '0.5': namedSpacing.xxs,\r\n  '1': namedSpacing.xs,\r\n  '1.5': '0.375rem',\r\n  '2': namedSpacing.sm,\r\n  '3': '0.75rem',\r\n  '4': namedSpacing.md,\r\n  '6': namedSpacing.lg,\r\n  '8': namedSpacing.xl,\r\n  '12': namedSpacing['2xl'],\r\n  '16': namedSpacing['3xl']\r\n} as const\r\n\r\nexport const spacing = {\r\n  ...namedSpacing,\r\n  ...legacySpacing\r\n} as const\r\n\r\nexport type SpacingScale = typeof spacing\r\n","export const typography = {\r\n  fonts: {\r\n    sans: [\r\n      'Inter',\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'system-ui',\r\n      'sans-serif'\r\n    ],\r\n    mono: ['JetBrains Mono', 'Fira Code', 'Menlo', 'Monaco', 'Consolas', 'monospace']\r\n  },\r\n  sizes: {\r\n    xs: { fontSize: '0.75rem', lineHeight: '1.125rem' },\r\n    sm: { fontSize: '0.875rem', lineHeight: '1.25rem' },\r\n    md: { fontSize: '1rem', lineHeight: '1.5rem' },\r\n    lg: { fontSize: '1.125rem', lineHeight: '1.75rem' },\r\n    xl: { fontSize: '1.25rem', lineHeight: '1.75rem' },\r\n    '2xl': { fontSize: '1.5rem', lineHeight: '2rem' },\r\n    '3xl': { fontSize: '1.875rem', lineHeight: '2.25rem' }\r\n  },\r\n  weights: {\r\n    regular: 400,\r\n    medium: 500,\r\n    semibold: 600,\r\n    bold: 700\r\n  },\r\n  lineHeights: {\r\n    tight: 1.2,\r\n    snug: 1.35,\r\n    normal: 1.5,\r\n    relaxed: 1.65,\r\n    loose: 1.8\r\n  }\r\n} as const\r\n\r\nexport type Typography = typeof typography\r\n","export const radii = {\r\n  none: '0px',\r\n  xs: '2px',\r\n  sm: '4px',\r\n  md: '8px',\r\n  lg: '12px',\r\n  xl: '16px',\r\n  full: '9999px'\r\n} as const\r\n\r\nexport type Radii = typeof radii\r\n","export const shadows = {\r\n  xs: '0 1px 2px 0 rgb(15 23 42 / 0.08)',\r\n  sm: '0 1px 3px 0 rgb(15 23 42 / 0.12)',\r\n  md: '0 4px 6px -1px rgb(15 23 42 / 0.15)',\r\n  lg: '0 10px 15px -3px rgb(15 23 42 / 0.2)'\r\n} as const\r\n\r\nexport type Shadows = typeof shadows\r\n","import { colors } from './colors'\r\nimport { radii } from './radii'\r\nimport { shadows } from './shadows'\r\nimport { spacing } from './spacing'\r\nimport { typography } from './typography'\r\n\r\nexport const tokens = {\r\n  colors,\r\n  spacing,\r\n  typography,\r\n  radii,\r\n  shadows\r\n} as const\r\n\r\nexport type Tokens = typeof tokens\r\n","import { tokens } from './token-map'\r\n\r\ntype TokenPrimitive = string | number | boolean\r\ntype TokenValue = TokenPrimitive | readonly TokenPrimitive[] | TokenGroup\r\n\r\ninterface TokenGroup {\r\n  [key: string]: TokenValue\r\n}\r\n\r\nfunction sanitizeTokenKey(key: string): string {\r\n  return key\r\n    .trim()\r\n    .toLowerCase()\r\n    .replace(/[^a-z0-9_-]/g, '-')\r\n    .replace(/-+/g, '-')\r\n    .replace(/^-|-$/g, '')\r\n}\r\n\r\nfunction normalizeValue(value: TokenPrimitive | readonly TokenPrimitive[]): string {\r\n  if (Array.isArray(value)) {\r\n    return value.join(', ')\r\n  }\r\n\r\n  return String(value)\r\n}\r\n\r\nfunction toCSSVars(record: TokenGroup, prefix: string[] = []): string[] {\r\n  return Object.entries(record).flatMap(([key, value]) => {\r\n    const sanitizedKey = sanitizeTokenKey(key)\r\n    const nextPrefix = [...prefix, sanitizedKey]\r\n\r\n    if (Array.isArray(value)) {\r\n      const cssVar = `--dyn-${nextPrefix.join('-')}`\r\n      return `${cssVar}: ${normalizeValue(value)};`\r\n    }\r\n\r\n    if (value !== null && typeof value === 'object') {\r\n      return toCSSVars(value as TokenGroup, nextPrefix)\r\n    }\r\n\r\n    const cssVar = `--dyn-${nextPrefix.join('-')}`\r\n    return `${cssVar}: ${normalizeValue(value as TokenPrimitive)};`\r\n  })\r\n}\r\n\r\nconst prefixMap: Record<string, string> = {\r\n  colors: 'color',\r\n  spacing: 'spacing',\r\n  typography: 'typography',\r\n  radii: 'radius',\r\n  shadows: 'shadow'\r\n}\r\n\r\n/**\r\n * Builds a CSS string containing custom properties for every token.\r\n * Consumers can pipe this into a CSS writer during build pipelines.\r\n */\r\nexport function buildDesignTokenCSS(): string {\r\n  const lines = Object.entries(tokens).flatMap(([sectionKey, sectionValue]) => {\r\n    const mappedPrefix = prefixMap[sectionKey] ?? sectionKey\r\n    return toCSSVars(sectionValue as TokenGroup, [mappedPrefix])\r\n  })\r\n\r\n  return [':root {', ...lines.map((line) => `  ${line}`), '}'].join('\\n')\r\n}\r\n"]}