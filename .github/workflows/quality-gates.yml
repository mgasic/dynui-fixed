name: Quality Gates (Extended)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  gate-a:
    name: "Gate A: Static Analysis"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9.12.0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - name: TypeScript Check
        run: pnpm typecheck
      - name: ESLint Check
        run: pnpm lint
      - name: Prettier Check
        run: pnpm exec prettier --check .

  gate-b:
    name: "Gate B: Unit Tests"
    runs-on: ubuntu-latest
    needs: gate-a
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9.12.0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - name: Run Unit Tests with Coverage
        run: |
          set -o pipefail
          pnpm test --coverage --silent | tee coverage-output.txt
      - name: Enforce Coverage Threshold (80%)
        run: |
          node -e "const fs = require('fs'); const summary = JSON.parse(fs.readFileSync('coverage/coverage-summary.json', 'utf8')); const pct = summary.total.statements.pct; if (pct < 80) { console.error(\`❌ Coverage ${pct}% is below required 80% threshold.\`); process.exit(1); } console.log(\`✅ Coverage ${pct}% meets the 80% threshold.\`);"
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/coverage-final.json
          token: ${{ secrets.CODECOV_TOKEN }}

  gate-c:
    name: "Gate C: Accessibility"
    runs-on: ubuntu-latest
    needs: gate-b
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9.12.0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - name: Run A11y Tests
        run: pnpm test:a11y
      - name: Build Storybook
        run: |
          pnpm build:storybook
          rm -rf storybook-static
          cp -R apps/storybook/storybook-static ./storybook-static
      - name: Storybook Test Runner
        run: |
          pnpm dlx serve storybook-static -p 6006 &
          SERVER_PID=$!
          trap 'kill $SERVER_PID || true' EXIT
          sleep 5
          pnpm dlx @storybook/test-runner --url http://localhost:6006
          kill $SERVER_PID || true

  gate-d:
    name: "Gate D: Bundle Analysis"
    runs-on: ubuntu-latest
    needs: gate-c
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9.12.0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - name: Build Package
        run: pnpm build
      - name: Check Bundle Size (<= 150 KB)
        run: |
          SIZE=$(du -sk packages/core/dist | awk '{print $1}')
          LIMIT=150
          if [ "$SIZE" -gt "$LIMIT" ]; then
            echo "❌ Bundle size ${SIZE}KB exceeds limit of ${LIMIT}KB"
            exit 1
          fi
          echo "✅ Bundle size ${SIZE}KB within limit of ${LIMIT}KB"
      - name: Verify Tree Shaking
        run: |
          pnpm dlx esbuild packages/core/src/index.ts --bundle --format=esm --tree-shaking=true --external:react --external:react-dom --outfile=/tmp/core-tree-shake.js

  gate-e:
    name: "Gate E: Visual Review"
    runs-on: ubuntu-latest
    needs: [gate-b]
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9.12.0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - name: Build Storybook
        run: |
          pnpm build:storybook
          rm -rf storybook-static
          cp -R apps/storybook/storybook-static ./storybook-static
      - name: Publish to Chromatic
        uses: chromaui/action@v11
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          storybookBuildDir: storybook-static
