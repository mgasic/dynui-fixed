name: Quality Gates (Extended)

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  gate-a-static:
    name: "Gate A: Static Analysis"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Neutralize project .npmrc if present
        run: mv .npmrc .npmrc.bak || true
      - name: Configure registries
        run: |
          npm config set registry https://registry.npmjs.org/
          npm config set @mgasic:registry https://npm.pkg.github.com/
          echo "//npm.pkg.github.com/:_authToken=${PACKAGES_TOKEN}" >> ~/.npmrc
        env:
          PACKAGES_TOKEN: ${{ secrets.PACKAGES_TOKEN }}
      - run: pnpm install --no-frozen-lockfile
      - name: TypeScript Check
        run: pnpm typecheck
      - name: ESLint Check
        run: pnpm lint
      - name: Prettier Check
        run: pnpm exec prettier --check .

  gate-b-tests:
    name: "Gate B: Unit Tests"
    runs-on: ubuntu-latest
    needs: gate-a-static
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Neutralize project .npmrc if present
        run: mv .npmrc .npmrc.bak || true
      - name: Configure registries
        run: |
          npm config set registry https://registry.npmjs.org/
          npm config set @mgasic:registry https://npm.pkg.github.com/
          echo "//npm.pkg.github.com/:_authToken=${PACKAGES_TOKEN}" >> ~/.npmrc
        env:
          PACKAGES_TOKEN: ${{ secrets.PACKAGES_TOKEN }}
      - run: pnpm install --no-frozen-lockfile
      - name: Run Unit Tests
        run: pnpm test -- --coverage
      - name: Check Coverage Threshold
        run: |
          echo "Coverage check placeholder - add coverage threshold validation"

  gate-c-a11y:
    name: "Gate C: Accessibility"
    runs-on: ubuntu-latest
    needs: gate-b-tests
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Neutralize project .npmrc if present
        run: mv .npmrc .npmrc.bak || true
      - name: Configure registries
        run: |
          npm config set registry https://registry.npmjs.org/
          npm config set @mgasic:registry https://npm.pkg.github.com/
          echo "//npm.pkg.github.com/:_authToken=${PACKAGES_TOKEN}" >> ~/.npmrc
        env:
          PACKAGES_TOKEN: ${{ secrets.PACKAGES_TOKEN }}
      - run: pnpm install --no-frozen-lockfile
      - name: Run A11y Tests
        run: pnpm test:a11y
      - name: Build Storybook
        run: pnpm build:storybook

  gate-d-bundle:
    name: "Gate D: Bundle Analysis"
    runs-on: ubuntu-latest
    needs: gate-c-a11y
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Neutralize project .npmrc if present
        run: mv .npmrc .npmrc.bak || true
      - name: Configure registries
        run: |
          npm config set registry https://registry.npmjs.org/
          npm config set @mgasic:registry https://npm.pkg.github.com/
          echo "//npm.pkg.github.com/:_authToken=${PACKAGES_TOKEN}" >> ~/.npmrc
        env:
          PACKAGES_TOKEN: ${{ secrets.PACKAGES_TOKEN }}
      - run: pnpm install --no-frozen-lockfile
      - name: Build Package
        run: pnpm build
      - name: Check Bundle Size
        run: |
          SIZE=$(stat -c%s "dist/index.js")
          MAX_SIZE=$((150 * 1024))
          if [ $SIZE -gt $MAX_SIZE ]; then
            echo "Bundle size $SIZE bytes exceeds limit of $MAX_SIZE bytes" && exit 1
          fi
          echo "âœ… Bundle size: $SIZE bytes (limit: $MAX_SIZE bytes)"

  gate-e-contracts:
    name: "Gate E: API Contracts"
    runs-on: ubuntu-latest
    needs: gate-d-bundle
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Neutralize project .npmrc if present
        run: mv .npmrc .npmrc.bak || true
      - name: Configure registries
        run: |
          npm config set registry https://registry.npmjs.org/
          npm config set @mgasic:registry https://npm.pkg.github.com/
          echo "//npm.pkg.github.com/:_authToken=${PACKAGES_TOKEN}" >> ~/.npmrc
        env:
          PACKAGES_TOKEN: ${{ secrets.PACKAGES_TOKEN }}
      - run: pnpm install --no-frozen-lockfile
      - name: Run API Contract Tests
        run: pnpm test:contracts
